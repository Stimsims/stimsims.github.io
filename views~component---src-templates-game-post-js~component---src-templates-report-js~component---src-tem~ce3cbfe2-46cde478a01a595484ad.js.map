{"version":3,"sources":["webpack:///./src/mycomponents/views/Select/v2/Select.css.js","webpack:///./src/mycomponents/views/Select/v2/Option.js","webpack:///./src/mycomponents/views/Select/v2/Placeholder.js","webpack:///./src/mycomponents/views/Select/v2/SingleValue.js","webpack:///./src/mycomponents/views/Select/v2/Select.js"],"names":["Wrapper","styled","div","Center","CustomOption","props","Option","getStyles","res","width","padding","zIndex","borderBottom","Text","tag","className","center","block","latex","data","text","label","value","onInput","CustomPlaceholder","Placeholder","key","selectProps","placeholder","withTheme","options","name","message","view","useState","defaultValue","onChange","components","theme","creatable","isMulti","isSearchable","getSelect","a2","a3","id","viewProps","mergeInput","actions","type","set","out","SingleValue","CustomSingleValue","borderRadius","colors","primary25","neutralL","primary","neutral","primary50","danger","dangerLight","primaryD","neutral0","neutralD","neutral5","neutral10","neutral20","neutral30","neytral40","neutral50","neutral60","neutral70","secondary","neutral80","neutral90","styles","customStyles","option","provided","state","backgroundColor","display","multiValue","multiValueLabel","color","multiValueRemove"],"mappings":"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","file":"views~component---src-templates-game-post-js~component---src-templates-report-js~component---src-tem~ce3cbfe2-46cde478a01a595484ad.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    label{\r\n        color: white;\r\n        padding-right: 10px;\r\n    }\r\n    .dark-theme{\r\n        flex: 1;\r\n    }\r\n    div div div{\r\n        text-align: center ;\r\n        margin: auto ;\r\n    }\r\n`\r\nexport const Center = styled.div`\r\n    div div div{\r\n    text-align: center ;\r\n    margin: auto ;\r\n}\r\n`","import React from 'react';\r\nimport { components } from 'react-select';\r\nimport Text from 'views/Text/Text/v1/Text';\r\n// import { css } from 'emotion';\r\n// import { test } from 'gray-matter';\r\n\r\n\r\nconst CustomOption = (props) => {\r\n  const customStyles = () => {\r\n        let res = props.getStyles('option', props);\r\n        res.width = '99%';\r\n        res.padding = '0';\r\n        res.zIndex = 55;\r\n        res.borderBottom = '1px solid grey';\r\n        return res;\r\n    }\r\n   return ( <components.Option {...props} getStyles={customStyles} >\r\n    <Text tag=\"p\" className=\"item-large center \" center block \r\n    latex={props.data.latex} \r\n    text={props.data.label} \r\n    value={props.data.value} \r\n    onInput={props.onInput} />\r\n</components.Option>)\r\n   \r\n}\r\n\r\nexport default CustomOption","import React from 'react';\r\nimport { components } from 'react-select';\r\nimport Text from 'views/Text/Text/v1/Text';\r\n// import { css } from 'emotion';\r\n// import { test } from 'gray-matter';\r\n\r\n\r\nconst CustomPlaceholder = (props) => {\r\n    // const customStyles = () => {\r\n    //     let res = props.getStyles('option', props);\r\n    //     res.backgroundColor = 'blue';\r\n    //     return res;\r\n    // }\r\n   return ( <components.Placeholder {...props} >\r\n        <Text key=\"placeholder\" tag=\"p\" className=\"item-large center truncate\" center block >\r\n        {props.selectProps.placeholder?props.selectProps.placeholder:'Select value'}\r\n        </Text>\r\n</components.Placeholder>)\r\n   \r\n}\r\n\r\nexport default CustomPlaceholder;","import React from 'react';\r\nimport { components } from 'react-select';\r\nimport Text from 'views/Text/Text/v1/Text';\r\n// import { css } from 'emotion';\r\n// import { test } from 'gray-matter';\r\n\r\n\r\nconst CustomOption = (props) => {\r\n  const customStyles = () => {\r\n    let res = props.getStyles('option', props);\r\n        //res.backgroundColor = 'red';\r\n        res.padding = '0';\r\n        res.width = '99%';\r\n        res.zIndex ='55'\r\n        return res;\r\n    }\r\n   return ( <components.Option {...props} getStyles={customStyles} >\r\n    <Text tag=\"p\" className=\"item-large center \" center block \r\n    latex={props.data.latex} \r\n    text={props.data.label} \r\n    value={props.data.value} \r\n    onInput={props.onInput} />\r\n</components.Option>)\r\n   \r\n}\r\n\r\nexport default CustomOption","import React, {useState, useEffect} from 'react';\r\nimport styled, {withTheme} from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport './Select.css';\r\nimport Select from 'react-select';\r\nimport Creatable from 'react-select/creatable';\r\nimport {Wrapper, Center} from './Select.css.js';\r\nimport CustomOption from './Option';\r\nimport CustomPlaceholder from './Placeholder';\r\nimport CustomSingleValue from './SingleValue';\r\nimport {log} from 'utilities/Measure';\r\n\r\nconst SelectView = (props) => {\r\n    if(!props.options) throw {name: 'InvalidViewState', message: 'Select requires options'};\r\n    const [className] = useState(`${props.className?`${props.className} item-large center`:' item-large center '} zMid`);\r\n\r\n    //may need to implement method to change value if options update\r\n    const handleChange = (value, a2, a3) => {\r\n        if(props.onInput){\r\n            //isMulti returns an array\r\n            props.onInput(props.id, value.value || value, props.viewProps, props.mergeInput);\r\n        }else{\r\n            let actions = [ {type: 'set', id: props.id, set: value.value}];\r\n            if(props.out){\r\n                actions = [...actions, ...props.out];\r\n            }\r\n            props.mergeInput(props.id, actions);\r\n        }\r\n        return value.value;\r\n    }\r\n    const getLabel = (label, view) => {\r\n        if(!label) return <Center key={props.id} id={props.id} className={`${className} z-ui`} styles={customStyles} >{view}</Center>;\r\n        return <Wrapper key={props.id} id={props.id} className=\"my-select z-ui\"  styles={customStyles} >\r\n            <label>{label}</label>\r\n            {view}\r\n        </Wrapper>\r\n    }\r\n    const getSelect = (defaultValue, options, onChange, className, placeholder, components, theme) => {\r\n        if(props.creatable){\r\n            return <Creatable  options={options} onChange={onChange} className={className} defaultValue={defaultValue}//value={value}\r\n            placeholder={placeholder} components={components} theme={theme} isMulti={props.isMulti} />\r\n        }else{\r\n            return <Select  \r\n            options={options} onChange={onChange} className={className} \r\n            defaultValue={defaultValue}//value={value}\r\n            placeholder={placeholder} components={components} isSearchable={false} theme={theme} \r\n            isMulti={props.isMulti}\r\n            />\r\n        }\r\n    }\r\n\r\n    return getLabel(props.label, \r\n        getSelect( \r\n                props.defaultValue, \r\n                props.options, \r\n                handleChange, \r\n                className, \r\n                props.placeholder?props.placeholder:null,\r\n        { Option: CustomOption, SingleValue: CustomSingleValue, Placeholder: CustomPlaceholder}, theme => ({\r\n              ...theme,\r\n              borderRadius: 0,\r\n              colors: {\r\n                ...theme.colors,\r\n                primary25: props.theme.neutralL,\r\n                primary: props.theme.neutral, //selected\r\n                primary50: props.theme.neutralL, //focused\r\n                danger: props.theme.primary,\r\n                dangerLight: props.theme.primaryD,\r\n                neutral0: props.theme.neutralD,\r\n                neutral5: props.theme.neutral,\r\n                neutral10:props.neutral,\r\n                neutral20: props.theme.primary, //border color\r\n                neutral30: props.theme.primaryD, //border hover\r\n                neytral40: 'red', \r\n                neutral50:props.theme.primary, \r\n                neutral60:'orange',\r\n                neutral70:props.theme.secondary, //selected value placeholder\r\n                neutral80:props.theme.primary,\r\n                neutral90:'red'\r\n              },\r\n        }))\r\n \r\n    )\r\n}\r\n\r\nSelectView.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    placeholder: PropTypes.string,\r\n    nullOption: PropTypes.bool,\r\n    onInput: PropTypes.func,\r\n    creatable: PropTypes.bool\r\n}\r\n\r\nexport default withTheme(SelectView);\r\n\r\n\r\n\r\n\r\nvar customStyles = (theme) => {\r\n    return {\r\n        option: (provided, state) => {\r\n            return {\r\n                //...provided,\r\n                borderBottom: '1px dotted pink',\r\n                backgroundColor: 'red',\r\n                padding: 20,\r\n                display: 'inline-block',\r\n                width: '50%'\r\n              }\r\n        },\r\n        multiValue: (styles, { data }) => {\r\n            const color = 'red';\r\n            return {\r\n              ...styles,\r\n              backgroundColor: 'purple',\r\n            };\r\n          },\r\n          multiValueLabel: (styles, { data }) => ({\r\n            ...styles,\r\n            color: 'yellow',\r\n          }),\r\n          multiValueRemove: (styles, { data }) => ({\r\n            ...styles,\r\n            color: 'blue',\r\n            ':hover': {\r\n              backgroundColor: 'cyan',\r\n              color: 'white',\r\n            },\r\n          }),\r\n      }\r\n}\r\n"],"sourceRoot":""}