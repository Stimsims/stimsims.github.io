{"version":3,"sources":["webpack:///./src/templates/press.js"],"names":["PressPost","props","useEffect","addMenuItem","meta","title","onBack","menuItems","navigate","path","key","import","id","className","rel","hred","PressView","tag","site","padding","color","maxWidth","borderImg","texts","descriptions","map","e","text","images","img","childImageSharp","PressWrapper","data","game","siteMetadata","styled","div","theme","mediaM","primary","pageQuery"],"mappings":"4FAAA,sLAYMA,EAAY,SAACC,GACfC,qBAAU,WACND,EAAME,YAAY,CAChB,MAAQF,EAAMG,KAAKC,MACnBC,SACAC,UAAW,SAEZ,IACL,IAAMD,EAAS,WACXE,mBAASP,EAAMG,KAAKK,OAGxB,OACI,kBAAC,IAAD,CAAeC,IAAG,SAAWT,EAAMG,KAAKO,OAAUC,GAAE,SAAWX,EAAMG,KAAKO,OAClEE,UAAU,4BACd,kBAAC,IAAD,KACI,0BAAMC,IAAI,YAAYC,KAAMd,EAAMG,KAAKK,QAG3C,kBAACO,EAAD,KACI,kBAAC,IAAD,CAAMC,IAAI,KAAMJ,UAAU,eAA1B,kBAAyDZ,EAAMG,KAAKC,OACpE,kBAAC,IAAD,CAAMQ,UAAU,eAAhB,gFAC8DZ,EAAMG,KAAKC,MADzE,MAEKJ,EAAMiB,KAAKb,MAFhB,WAKA,kBAAC,IAAD,CAAMY,IAAI,KAAKE,QAAQ,mBAAmBC,MAAM,YAAYP,UAAU,eAAtE,iBACA,wBAAIA,UAAU,YACV,4BAAI,kBAAC,IAAD,6FAEJ,4BAAI,kBAAC,IAAD,oCACJ,4BAAI,kBAAC,IAAD,gEACJ,4BAAI,kBAAC,IAAD,mFACJ,4BAAI,kBAAC,IAAD,wEACJ,4BAAI,kBAAC,IAAD,yBAGZ,kBAAC,IAAD,CAAKQ,SAAS,UACd,kBAAC,IAAD,CAAMJ,IAAI,KAAKE,QAAQ,mBAAmBC,MAAM,YAAYP,UAAU,eAAgBZ,EAAMG,KAAKC,MAAjG,aACI,kBAAC,IAAD,CACIO,GAAE,eAAiBX,EAAMG,KAAKO,OAC9BW,WAAS,EACTC,MAAOtB,EAAMG,KAAKoB,aAAaC,KAAI,SAAAC,GAC/B,OAAOA,EAAEC,QAEbC,OAAQ3B,EAAMG,KAAKoB,aAAaC,KAAI,SAAAC,GAChC,OAAGA,GAAKA,EAAEG,IAAYH,EAAEG,IAAIC,gBACrB,aAgBhBC,UAPM,SAAC9B,GAClB,OAAO,kBAACD,EAAD,CACHI,KAAMH,EAAM+B,KAAKC,KACjBf,KAAMjB,EAAM+B,KAAKd,KAAKgB,aACtB/B,YAAaF,EAAME,eAK3B,IAAMa,EAAYmB,IAAOC,IAAV,uEAAGD,CAAH,+EACE,SAAAlC,GAAK,OAAIA,EAAMoC,MAAMC,UAGjB,SAAArC,GAAK,OAAIA,EAAMoC,MAAMC,UAEzB,SAAArC,GAAK,OAAIA,EAAMoC,MAAME,WAIzBC,EAAS","file":"component---src-templates-press-js-37444900507fca16a2f5.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport { graphql, Link, navigate } from 'gatsby';\r\nimport {sendError} from 'utilities/Measure.js';\r\nimport {Helmet} from 'react-helmet';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport ErrorBoundary from 'views/Boundary/Boundary.js';\r\nimport SiteContainer from 'views/Container/Container.js';\r\nimport Description from 'game/Views/Description/index';\r\nimport Box from 'views/Box/v1/Box';\r\n\r\nconst PressPost = (props) => {\r\n    useEffect(()=>{\r\n        props.addMenuItem({\r\n          'title':props.meta.title,\r\n          onBack,\r\n          menuItems: null\r\n        });\r\n      }, []);\r\n    const onBack = () => {\r\n        navigate(props.meta.path);\r\n    }\r\n\r\n    return (\r\n        <SiteContainer key={`press-${props.meta.import}`} id={`press-${props.meta.import}`} \r\n                className=\"site-container-no-scroll\">\r\n            <Helmet>\r\n                <link rel=\"canonical\" hred={props.meta.path}></link>\r\n            </Helmet>\r\n  \r\n            <PressView>\r\n                <Text tag=\"h1\"  className=\"text-center\" >Press Pack for {props.meta.title}</Text>\r\n                <Text className=\"text-center\"  >You are free to use\r\n                    any of the text or images below when discussing the game {props.meta.title} or\r\n                    {props.site.title}'s work</Text>\r\n                {/* <Text tag=\"h3\" className=\"text-center\" >Technical Details</Text>\r\n                <Text tag=\"p\" padding=\"20px 0px 0px 0px\" color=\"text\" className=\"text-center\">Platform: web browser</Text> */}\r\n                <Text tag=\"h4\" padding=\"20px 0px 0px 0px\" color=\"secondary\" className=\"text-center\" >Game Features</Text>\r\n                <ul className=\"features\">\r\n                    <li><Text>Randomized simulations and live calculations. \r\n                        The answers are different every time.</Text></li>\r\n                    <li><Text>Story driven math problems</Text></li>\r\n                    <li><Text>Automated reports that can be uploaded to Google Drive</Text></li>\r\n                    <li><Text>Compare yourself against anonymous, aggregated reports of players choices</Text></li>\r\n                    <li><Text>Web browser based text games that can run on almost any device</Text></li>\r\n                    <li><Text>Offline Ready</Text></li>\r\n                </ul>\r\n            </PressView>\r\n            <Box maxWidth=\"mediaL\">\r\n            <Text tag=\"h4\" padding=\"20px 0px 0px 0px\" color=\"secondary\" className=\"text-center\" >{props.meta.title} Features</Text>\r\n                <Description \r\n                    id={`description-${props.meta.import}`}\r\n                    borderImg\r\n                    texts={props.meta.descriptions.map(e => {\r\n                        return e.text;\r\n                    })}\r\n                    images={props.meta.descriptions.map(e => {\r\n                        if(e && e.img) return e.img.childImageSharp;\r\n                        return null;\r\n                    })}\r\n                />\r\n            </Box>\r\n\r\n        </SiteContainer>\r\n    )\r\n}\r\n\r\nconst PressWrapper = (props) => {\r\n    return <PressPost\r\n        meta={props.data.game}\r\n        site={props.data.site.siteMetadata}\r\n        addMenuItem={props.addMenuItem}\r\n    />\r\n}\r\nexport default PressWrapper;\r\n\r\nconst PressView = styled.div`\r\n    max-width: ${props => props.theme.mediaM};\r\n    margin: auto;\r\n    .features{\r\n        max-width: ${props => props.theme.mediaM};\r\n        margin: auto;\r\n        color: ${props => props.theme.primary};\r\n    }\r\n`\r\n\r\nexport const pageQuery = graphql`\r\n  query PressPostByID($import: String!) {\r\n    site {\r\n      siteMetadata {\r\n        ...siteDataFragment\r\n      }\r\n    },\r\n    game: gamesMetaJson(import: { eq: $import }) {\r\n      id\r\n      path\r\n      import\r\n      complete\r\n      title\r\n      topics\r\n      snippet\r\n      descriptions {\r\n        id\r\n        text\r\n        img {\r\n          childImageSharp {\r\n            fluid(maxWidth: 1200){\r\n                ...GatsbyImageSharpFluid\r\n              }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}