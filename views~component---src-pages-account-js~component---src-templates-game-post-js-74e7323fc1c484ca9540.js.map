{"version":3,"sources":["webpack:///./src/mycomponents/views/Reveal/index.js","webpack:///./src/mycomponents/views/Switch/v1/Switch.js"],"names":["variants","visible","opacity","hidden","Reveal","props","useState","reveal","setReveal","setHasBeenRevealed","useEffect","timeout","setTimeout","clearTimeout","div","initial","animate","style","minHeight","children","Switch","active","setActive","Container","key","id","className","Input","type","onChange","nActive","onInput","htmlFor","styled","theme","secondary","animS","neutral"],"mappings":"4FAAA,iDAIMA,EAAW,CACbC,QAAS,CAAEC,QAAS,GACpBC,OAAQ,CAAED,QAAS,IAuBRE,IApBA,SAAAC,GAAU,IAAD,EACQC,oBAAS,GAA9BC,EADa,KACLC,EADK,OAE0BF,oBAAS,GAA/BG,GAFJ,WAepB,OAZAC,qBAAU,WACN,IAAIC,EAAUC,YAAW,WACrBJ,GAAU,GACVC,GAAmB,GACnBI,aAAaF,KACdN,EAAMM,SATJ,MAUL,OAAO,WACAA,GACCE,aAAaF,MAGtB,IACI,kBAAC,IAAOG,IAAR,CAAYC,QAAQ,SAASC,QAAST,EAAO,UAAU,SAAUP,SAAUA,EAAUiB,MAAO,CAACC,UAAWb,EAAMa,YAC/Gb,EAAMc,Y,kCCzBhB,+CAiCeC,IA5BA,SAACf,GAAW,IAAD,EACMC,mBAASD,EAAMgB,OAAO,EAAE,GAA7CA,EADe,KACPC,EADO,KAOtB,OACI,kBAACC,EAAD,CAAWC,IAAKnB,EAAMoB,GAAIA,GAAIpB,EAAMoB,GAAIC,UAAS,aAAerB,EAAMqB,WAClE,kBAACC,EAAD,KACA,2BAAOD,UAAcL,EAAO,SAAS,WAAcO,KAAK,WACpDH,GAAE,YAAcpB,EAAMoB,GACtBI,SAVK,WACb,IAAIC,EAAqB,IAAXT,EAAa,EAAE,EAC7BC,EAAUQ,GACVzB,EAAM0B,QAAQ1B,EAAMoB,GAAIK,MASpB,2BAAOJ,UAAS,gBAAiBL,EAAO,SAAS,YACjDW,QAAO,YAAc3B,EAAMoB,QAevC,IAAMF,EAAYU,IAAOnB,IAAV,oEAAGmB,CAAH,wPAIE,SAAA5B,GAAK,OAAIA,EAAM6B,MAAMC,aAQR,SAAA9B,GAAK,OAAIA,EAAM6B,MAAME,SAAyB,SAAA/B,GAAK,OAAIA,EAAM6B,MAAME,SAM3FT,EAAQM,IAAOnB,IAAV,gEAAGmB,CAAH,6jBAiBW,SAAA5B,GAAK,OAAIA,EAAM6B,MAAMC,aAarB,SAAA9B,GAAK,OAAIA,EAAM6B,MAAMG,WAWlB,SAAAhC,GAAK,OAAIA,EAAM6B,MAAME","file":"views~component---src-pages-account-js~component---src-templates-game-post-js-74e7323fc1c484ca9540.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {log} from 'utilities/Measure';\r\nimport {motion} from 'framer-motion';\r\n\r\nconst variants = {\r\n    visible: { opacity: 1 },\r\n    hidden: { opacity: 0 },\r\n}\r\nconst TIME = 1500;\r\nconst Reveal = props => {\r\n    const [reveal, setReveal] = useState(false);\r\n    const [hasBeenRevealed, setHasBeenRevealed] = useState(false);\r\n    useEffect(()=>{\r\n        let timeout = setTimeout(() => {\r\n            setReveal(true);\r\n            setHasBeenRevealed(true);\r\n            clearTimeout(timeout);\r\n        }, props.timeout || TIME);\r\n        return ()=>{\r\n            if(timeout){\r\n                clearTimeout(timeout);\r\n            }\r\n        }\r\n    }, [])\r\n    return <motion.div initial=\"hidden\" animate={reveal?'visible':'hidden'} variants={variants} style={{minHeight: props.minHeight}}>\r\n         {props.children}\r\n    </motion.div>\r\n}\r\n\r\nexport default Reveal;","import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport {log} from 'utilities/Measure';\r\n\r\nconst Switch = (props) => {\r\n    const [active, setActive] = useState(props.active?1:0);\r\n    const onToggle = () => {\r\n        let nActive = active === 1?0:1;\r\n        setActive(nActive);\r\n        props.onInput(props.id, nActive);\r\n    }\r\n    return (\r\n        <Container key={props.id} id={props.id} className={`my-switch ${props.className}`}>\r\n            <Input>\r\n            <input className={`${active?'active':'inactive'}`} type=\"checkbox\" \r\n                id={`myswitch-${props.id}`} \r\n                onChange={onToggle}\r\n                />\r\n            <label className={`switch-text ${active?'active':'inactive'}`}  \r\n            htmlFor={`myswitch-${props.id}`} />\r\n            </Input>\r\n        </Container>\r\n    )\r\n}\r\nSwitch.propTypes = {\r\n    id:PropTypes.string.isRequired,\r\n    onInput: PropTypes.func.isRequired,\r\n    active: PropTypes.oneOfType([\r\n        PropTypes.bool,\r\n        PropTypes.number\r\n      ]),\r\n}\r\nexport default Switch;\r\n\r\nconst Container = styled.div`\r\n    text-align: center;\r\n    display: inline-block;\r\n    p{\r\n        color: ${props => props.theme.secondary};\r\n        display: inline-block;\r\n        line-height: 25px;\r\n        vertical-align: bottom;\r\n        margin: 0;\r\n        padding: 2px 2px 2px 5px;\r\n        opacity: 0.5;\r\n        transform: scale(1);\r\n        transition: opacity ${props => props.theme.animS} ease, transform ${props => props.theme.animS} ease;\r\n    }\r\n    .active{\r\n        opacity: 1;\r\n    }\r\n`\r\nconst Input = styled.div`\r\n    display: inline-block;\r\n    margin: auto;\r\n    input{\r\n        position: absolute;\r\n    }\r\n    input[type=checkbox]{\r\n        height: 0;\r\n        width: 0;\r\n        visibility: hidden;\r\n    }\r\n\r\n    label {\r\n        cursor: pointer;\r\n        text-indent: -9999px;\r\n        width: 50px;\r\n        height: 27px;\r\n        background: ${props => props.theme.secondary};\r\n        display: block;\r\n        border-radius: 100px;\r\n        position: relative;\r\n    }\r\n\r\n    label:after {\r\n        content: '';\r\n        position: absolute;\r\n        top: 2px;\r\n        left: 1px;\r\n        width: 23px;\r\n        height: 23px;\r\n        background: ${props => props.theme.neutral};\r\n        border-radius: 50%;\r\n\r\n    }\r\n\r\n    input:checked + label {\r\n        \r\n    }\r\n    \r\n    .active + label:after, .inactive+ label:after{\r\n       left: 2px;\r\n       transition: all ${props => props.theme.animS} ease 0s;\r\n    }\r\n    .inactive + label:after {\r\n        transform: translateX(0%);\r\n    }\r\n\r\n    .active + label:after {\r\n        transform: translateX(100%);\r\n    }\r\n\r\n`\r\n"],"sourceRoot":""}