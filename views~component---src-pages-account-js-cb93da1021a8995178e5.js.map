{"version":3,"sources":["webpack:///./src/mycomponents/views/AccountPage/analytics/index.js","webpack:///./src/mycomponents/views/AccountPage/refund/index.js","webpack:///./src/mycomponents/views/AccountPage/user/index.js"],"names":["AccountAnalytics","props","useState","hasOptedOut","setHasOptedOut","useEffect","o","isOptedOut","id","tag","className","fontSize","color","key","label1","label2","onInput","optOut","active","Subscribable","state","log","type","player","config","getCounterKey","RefundWrapper","div","ANIM_LAYOUT_OVERLAP","Fragment","getUnlockedKey","icon","unlocked","Text","text","Loading","delay","length","height","styled","UserAccount","setPlayer","fsm","setFsm","deleteAccount","setDeleteAccount","deleteSuccess","setDeleteSuccess","error","setError","timeout","isSignedIn","user","created","createTime","date","Date","enoughTimeElapsed","getTime","getPlayerData","setTimeout","clearTimeout","isConnected","onError","e","attempt","uid","doSubscribe","getPlayer","hasOwnProperty","Error","firestoreCatch","getRefundView","renderUserParam","paramName","paramValue","why","ListItem","activateDeleteAccount","deactivateDeleteAccount","doDeleteAccount","a","deletePlayer","cloudThen","deleteUser","cloudCatch","Section","margin","FeatureStatusWrapper","PRODUCT_REPORT","PRODUCT_EXAM","UserInfo","email","displayName","phoneNumber","provider","lastTime","photoURL","src","Button","compact","padding","Modal","onClose","LoadingWrapper","AuthenticatedUserAccount","SignIn","doSignIn","bgColor","getUrl","section","theme","mediaL","mediaM"],"mappings":"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","file":"views~component---src-pages-account-js-cb93da1021a8995178e5.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport {optOut, isOptedOut, sendEvent} from 'utilities/Measure';\r\nimport Switch from 'views/Switch/v1/Switch.js';\r\nimport Box from 'views/Box/v1/Box';\r\nimport Section from 'views/Box/Section/index';\r\nimport './styles.css';\r\nimport {log} from 'utilities/Measure';\r\n\r\nconst AccountAnalytics = (props) => {\r\n    const [hasOptedOut, setHasOptedOut] = useState(true);\r\n    useEffect(()=>{\r\n        let o =isOptedOut();\r\n        setHasOptedOut(o);\r\n    }, [])\r\n    const doOptOut = () => {\r\n        optOut(!hasOptedOut);\r\n        let o = isOptedOut();\r\n        setHasOptedOut(o);\r\n    }\r\n    return <Section>\r\n           <Text id=\"account-page-title\" id=\"account-page-title\" tag=\"h3\" \r\n            className=\"text-center\" fontSize=\"remL\" color=\"primary\">Your Settings</Text>\r\n            <Box className=\"text-center margin-vertical-auto posRel\">\r\n                <Text key=\"account-analytics-title\" id=\"account-analytics-title\" tag=\"h3\" className={`block ${hasOptedOut?'text-center':'text-left'}`}>Your Google Analytics Settings</Text>\r\n                {!hasOptedOut && <Switch id=\"optout-switch\" label1=\"opt out\" label2=\"dont opt out\" onInput={doOptOut} active={hasOptedOut} />}\r\n                <Text key=\"account-text\" id=\"account-text\" className=\"block text-center\" >{hasOptedOut?'This site will not collect annonymous site use data from you':\r\n                `This site is collecting annonymous site use data from you. This data tracks your movement around the site, and your in game answers. \r\n                It is used in the publicly available game play datasets.`}</Text>\r\n            </Box>\r\n    </Section>\r\n}\r\n\r\n\r\nexport default AccountAnalytics;\r\n/**\r\n * Switch.propTypes = {\r\n    id:PropTypes.string.isRequired,\r\n    label1: PropTypes.string.isRequired,\r\n    label2: PropTypes.string.isRequired,\r\n    onInput: PropTypes.func.isRequired,\r\n    active: PropTypes.bool\r\n}\r\n */","import React, {useState, useEffect} from 'react';\r\nimport styled from 'styled-components';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport config from 'cloudFunctions/dbConfig.js';\r\nimport {getPlayer,  firestoreCatch, firestoreThen} from 'apis/firebase/firestoreFunctions';\r\nimport {deletePlayer, cloudCatch, cloudThen, cloudThenInline, refundPayment} from 'apis/firebase/cloudFunctions';\r\nimport Loading from 'views/Loading/v1/Loading.js';\r\nimport Subscribable from 'views/hoc/Subscribable/index.js';\r\nimport {log, sendError, sendEvent} from 'utilities/Measure';\r\nimport {Event} from 'utilities/Create';\r\nimport IconBtn from 'views/IconButton/v1/IconButton.js';\r\nimport {motion, AnimatePresence} from 'framer-motion';\r\nimport {ANIM_LAYOUT_OVERLAP} from 'game/tree/Animations';\r\n\r\nconst REFUND_START = 'ref-start', REFUND_LOADING = 'ref-load', REF_ERR ='ref-err', REF_SUC = 'ref-suc';\r\nconst Refund = (props) => {\r\n    const [state, setState] = useState(REFUND_START);\r\n\r\n    const doRefundPayment = () => {\r\n        setState(REFUND_LOADING);\r\n        sendEvent(new Event('payment', 'refund-request'));\r\n        props.doSubscribe('refund', ()=>{return refundPayment(props.type)},\r\n        (e) => {\r\n            log(`AccountPage refundPayment success`, e);\r\n            if(e.success){\r\n                sendEvent(new Event('payment', 'refund-result', 'success', 1));\r\n                setState(REF_SUC);\r\n            }else{\r\n                sendEvent(new Event('payment', 'refund-result', 'fail', 0));\r\n                setState('error completing refund');\r\n            }\r\n        }, cloudCatch, setState)\r\n    }\r\n    const canBeRefunded = () => {\r\n        // if(props.unlocked){\r\n        //     return props.player[config.getCounterKey(props.type)] < 3;\r\n        // }\r\n        // return false;\r\n       return false;\r\n    }\r\n    const renderFeatureIcon = () => {return <IconBtn icon={props.unlocked?`icon-unlocked`:`icon-lock`} />}\r\n    const renderView = () => {\r\n        if(state === REFUND_START){\r\n            return <React.Fragment>\r\n                {renderFeatureIcon(props.player[config.getUnlockedKey(props.type)])}\r\n                <Text id={`${props.type}-text`} > {props.text}</Text>\r\n                {canBeRefunded() && \r\n                    <Text id={`${props.type}-refund`} className=\"text-underline inline-block\" \r\n                        onInput={doRefundPayment} >\r\n                        refund</Text>}\r\n            </React.Fragment>\r\n        }else if(state === REFUND_LOADING){\r\n            return <Loading delay={0} length=\"30px\" height=\"80px\" /> \r\n        }else if(state === REF_SUC){\r\n            return <Text className=\"inline-block\" >refund successful</Text>\r\n        }else{\r\n            return <Text className=\"inline-block\" >There was an error refunding your payment</Text>\r\n        }\r\n    }\r\n    log(`Refund view type ${props.type} refundState ${state} \r\n        count ${props.player[config.getCounterKey(props.type)]} props`, props);\r\n    if(state){\r\n        return <RefundWrapper>\r\n            <div className=\"refund-wrapper\">\r\n                <AnimatePresence>\r\n                    <motion.div key={state} {...ANIM_LAYOUT_OVERLAP}>\r\n                        {props.player && renderView()}\r\n                    </motion.div>\r\n                </AnimatePresence>\r\n            </div>\r\n        </RefundWrapper>\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default Subscribable(Refund);\r\n\r\nconst RefundWrapper = styled.div`\r\n    min-height:80px;\r\n    margin: 10px auto;\r\n    position: relative;\r\n    .refund-wrapper{\r\n        position: absolute;\r\n        top:50%;\r\n        left:50%;\r\n        transform: translate(-50%, -50%);\r\n        width:100%;\r\n        button{\r\n            position: absolute;\r\n            transform: translate(-80%, -30%);\r\n        }\r\n    }\r\n`","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport styled from 'styled-components';\r\nimport { graphql, Link } from 'gatsby';\r\nimport Loading from 'views/Loading/v1/Loading.js';\r\nimport Text from 'views/Text/Text/v1/Text.js';\r\nimport Modal from 'views/Modal/v1/Modal.js';\r\nimport Button from 'views/Button/v1/Button.js';\r\nimport IconBtn from 'views/IconButton/v1/IconButton.js';\r\nimport SiteContainer from 'views/Container/Container.js';\r\n//import SignInHoc from 'apis/SignIn/SignInHoc';\r\nimport SignIn from 'apis/SignIn/SignIn';\r\nimport Subscribable from 'views/hoc/Subscribable/index.js';\r\nimport {getPlayer,  firestoreCatch, firestoreThen} from 'apis/firebase/firestoreFunctions';\r\nimport {deletePlayer, cloudCatch, cloudThen, cloudThenInline, refundPayment} from 'apis/firebase/cloudFunctions';\r\nimport {log} from 'utilities/Measure';\r\nimport {getUrl} from 'utilities/Format';\r\nimport BoxBars from 'views/Box/Bars/index';\r\nimport Box from 'views/Box/v1/Box';\r\nimport Section from 'views/Box/Section/index';\r\nimport config from 'cloudFunctions/dbConfig.js'\r\nimport Refund from './../refund/index';\r\nimport {motion, AnimatePresence} from 'framer-motion';\r\nimport {ANIM_LAYOUT_OVERLAP} from 'game/tree/Animations';\r\n\r\nconst FSM_ACCOUNT ='account', FSM_ERR ='err', FSM_LOADING = 'loading', FSM_DELETING = 'deleting', FSM_START ='start';\r\n\r\nconst ACCOUNT_CREATE_WAIT_TIME = 10000;\r\nconst UserAccount = (props) => {\r\n    const [player, setPlayer] = useState(null);\r\n    const [fsm, setFsm] = useState(FSM_START);\r\n    // const [refundState, setRefundState] = useState({\r\n    //     [config.PRODUCT_EXAM]: REFUND_START,\r\n    //     [config.PRODUCT_REPORT]: REFUND_START\r\n    // });\r\n    const [deleteAccount, setDeleteAccount] = useState(false);\r\n    const [deleteSuccess, setDeleteSuccess] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        let timeout = null;\r\n        if(props.isSignedIn && props.user){\r\n            if(!player){\r\n                let created = props.user.createTime;\r\n                let date = new Date(created);\r\n                let now = new Date();\r\n                let enoughTimeElapsed = now.getTime() - date.getTime() > ACCOUNT_CREATE_WAIT_TIME;\r\n                setFsm(FSM_LOADING)\r\n                if(enoughTimeElapsed){\r\n                    getPlayerData();\r\n                }else{\r\n                    \r\n                    timeout = setTimeout(()=>{\r\n                        getPlayerData();\r\n                    }, ACCOUNT_CREATE_WAIT_TIME - enoughTimeElapsed);\r\n                }\r\n            }else{\r\n                setFsm(FSM_ACCOUNT)\r\n            }\r\n        }\r\n        else if(player){\r\n            setPlayer(null); //if player is defined, undefine it so can get again on connect\r\n        }    \r\n        return ()=>{\r\n            if(timeout){\r\n                clearTimeout(timeout);\r\n            }\r\n        }\r\n    }, [props.isSignedIn, props.isConnected]);\r\n    const onError = (e) => {\r\n        setFsm(FSM_START);\r\n        setError(e);\r\n    }\r\n    const getPlayerData = (attempt = 0) => {\r\n        log(`Account getPlayerData calling attempt ${attempt} uid ${props.user.uid}`);\r\n        if(props.user){\r\n            props.doSubscribe('getPlayer', () => {return getPlayer(props.user.uid)}, \r\n            (e) => {\r\n                log(`Account getPlayerData success`, e);\r\n                if(e && e.hasOwnProperty('reportcount')){\r\n                    setPlayer(e);\r\n                    setFsm(FSM_ACCOUNT);\r\n                }else{\r\n                    throw new Error(`Could not find a valid account`);\r\n                }\r\n            }, firestoreCatch,  (e)=>{\r\n                if(e === 'No such record found' && attempt <= 3){\r\n                    setTimeout(()=>{\r\n                        getPlayerData(attempt + 1);\r\n                    }, 3000);\r\n                }else{\r\n                    onError(e)\r\n                }\r\n                \r\n            })\r\n        }\r\n\r\n    }\r\n\r\n  \r\n    const getRefundView = (text, unlocked, type) => {\r\n        return <Refund key={type} type={type} unlocked={unlocked} player={player} text={text} />\r\n    }\r\n\r\n    const renderUserParam = (paramName, paramValue, why) => {\r\n        if(paramValue){\r\n            return <ListItem>\r\n                <Text className=\"inline\" tag=\"h4\" >{paramName}:</Text>\r\n                <Text className=\"inline\">{paramValue}</Text>\r\n            </ListItem>\r\n        }\r\n    }\r\n    const renderUserInfo = () => {\r\n        if(props.user){\r\n            return <UserInfo>\r\n            <div className=\"info-section\">\r\n                <Text tag=\"h3\" className=\"inlineblock\" margin=\"20px 0 10px 0 !important\">The information given by your authentication provider</Text>\r\n                <Text tag=\"p\" className=\"text-left\">None of this information is shared with third parties, with the exception for Google Firebase, which handles authentication services.</Text>\r\n                <ol className=\"info-list\">\r\n                {renderUserParam('Your E-mail', props.user.email)}\r\n                {renderUserParam('Your Display Name', props.user.displayName)}\r\n                {renderUserParam('Phone Number', props.user.phoneNumber)}\r\n                {renderUserParam('Your Provider', props.user.provider)}\r\n                {renderUserParam('Your account creation date', props.user.createTime)}\r\n                {renderUserParam('Your last login date', props.user.lastTime)}\r\n                <ListItem><Text tag=\"h4\" >Your Display Photo</Text></ListItem>\r\n                {props.user.photoURL && <div className=\"info text-left user-icon\">\r\n                    \r\n                    <img src={props.user.photoURL} />\r\n                </div>}\r\n                </ol>\r\n                <Text tag=\"p\" className=\"text-center\">Deleting your account will permanently remove all your data and any payments you've made.</Text>\r\n               <div className=\"text-center\">\r\n               <Button onInput={activateDeleteAccount} compact padding=\"10px 40px\" margin=\"auto\">Delete your Account</Button>\r\n               </div>\r\n            </div>\r\n        </UserInfo>\r\n        }else{\r\n            return <Text tag=\"p\" className=\"text-center\">Your user information was not found.</Text>\r\n        }\r\n    }\r\n    const activateDeleteAccount = () => {\r\n        setDeleteAccount(true);\r\n    }\r\n    const deactivateDeleteAccount = () => {\r\n        setDeleteAccount(false);\r\n    }\r\n    const doDeleteAccount = async () => {\r\n        if(props.user && props.user.uid){\r\n            //sign user out, or will confuse google\r\n            //props.doSignOut();\r\n            let uid = props.user.uid;\r\n            setFsm(FSM_DELETING);\r\n            props.doSubscribe('deleteUserData', () => {return deletePlayer(uid)},\r\n            cloudThen((e) => {\r\n                log(`AccountPage deletePlayer firestore success`, e);\r\n                props.doSubscribe('deleteAccount', \r\n                    props.deleteUser(),\r\n                    (e)=>{\r\n                        log(`AccountPage doDeleteAccount delete account success`);\r\n                        setFsm(FSM_START)\r\n                        setPlayer(null);\r\n                        setDeleteSuccess(false);\r\n                    },\r\n                    cloudCatch, onError\r\n                );\r\n                \r\n            }), cloudCatch, onError)\r\n        }else{\r\n            setError(`Your user id is not available. We cannot delete your account with out your user id. Logging in again may fix this problem.`);\r\n        }\r\n    }\r\n\r\n    const renderDeleteModal = () => {\r\n        return <Modal id=\"delete-account-modal\" active={deleteAccount} onClose={deactivateDeleteAccount}>\r\n            {fsm !== FSM_DELETING && <div className=\"block text-center\">\r\n                <Text tag=\"h3\" className=\"block text-center\">Are you sure you want to delete your account?</Text>\r\n                <Text className=\"block text-center\">This will delete your user information, all of your exams, and your unlocked features</Text>\r\n                <Button onInput={deactivateDeleteAccount} compact>No</Button>\r\n                <Button onInput={doDeleteAccount} compact>Yes</Button>\r\n            </div>}\r\n            {fsm === FSM_DELETING && <LoadingWrapper>\r\n                <Loading delay={0} text={\"Deleting your account\"} />\r\n            </LoadingWrapper>}\r\n        </Modal>\r\n    }\r\n\r\n    const renderFeatures = () => {\r\n        return <React.Fragment>\r\n            <Text key=\"account-unlocked\" id=\"account-unlocked\" tag=\"h3\" className=\"text-left block\"\r\n                margin=\"20px 0 0 0 !important\">Unlocked Features</Text>\r\n            <Text tag=\"p\" className=\"text-left block\">These features require a Google Account. \r\n                They can be accessed from the report section of a game.</Text>\r\n            <FeatureStatusWrapper>\r\n                {getRefundView('Unlimited Reports', player[config.getUnlockedKey(config.PRODUCT_REPORT)], config.PRODUCT_REPORT)}\r\n                {getRefundView('Unlimited Exams', player[config.getUnlockedKey(config.PRODUCT_EXAM)], config.PRODUCT_EXAM)}\r\n \r\n            </FeatureStatusWrapper>\r\n        </React.Fragment>\r\n    }\r\n    const renderFsm = () => {\r\n        if(error){\r\n            return <Text key=\"account-error\" tag=\"p\" className=\"text-center\" >{error}</Text>\r\n        }else if(player){\r\n            return <React.Fragment>\r\n                 <Text key=\"your-account\" id=\"your-account\" tag=\"h3\" className=\"text-center\" \r\n                    fontSize=\"remL\">Your Account</Text>\r\n                {deleteSuccess && <Text key=\"account-delete\" id=\"account-delete\" \r\n                    className=\"block\">Your account was successfully deleted</Text>}\r\n                {renderFeatures()}\r\n                {renderUserInfo()}\r\n                {renderDeleteModal()}\r\n            </React.Fragment>\r\n        }else if(fsm === FSM_LOADING){\r\n            return <LoadingWrapper>\r\n            <Loading delay={0} text={\"Getting your account information\"} />\r\n            </LoadingWrapper>\r\n        }else if(fsm === FSM_START){\r\n            // return <Button key=\"account-sign-in\" id=\"account-sign-in\" compact onInput={doSignIn}>Sign In</Button>\r\n            return null;\r\n        }else{\r\n            return <Text key=\"account-offline\" text=\"You must be signed in to see your account\" />\r\n        }\r\n       \r\n    }\r\nreturn <Section>{renderFsm()}</Section>\r\n}\r\n\r\nconst ToggleView = (props) => {\r\n    const doSignIn = () => {\r\n        props.doSignIn({}, 0);\r\n    }\r\n    return <AnimatePresence>\r\n        {props.isSignedIn && <motion.div  key=\"account\" {...ANIM_LAYOUT_OVERLAP}><UserAccount {...props} /></motion.div>}\r\n        {!props.isSignedIn && <motion.div  key=\"account-btn\" {...ANIM_LAYOUT_OVERLAP}>\r\n            <Button onInput={doSignIn} compact bgColor=\"primaryD\" padding=\"10px 40px\">Sign In to Account</Button>\r\n        </motion.div>}\r\n    </AnimatePresence>\r\n}\r\nconst AuthenticatedUserAccount = Subscribable(\r\n    SignIn(ToggleView, getUrl(), false)\r\n);\r\n\r\nexport default AuthenticatedUserAccount;\r\n\r\n/*\r\n   &:before {\r\n    content: \"\\\\2022\"; \r\n    color: ${props => props.theme.primary};\r\n    font-weight: bold\r\n    display: inline-block; \r\n    width: 1em; \r\n    margin-left: -1em; \r\n  }\r\n*/\r\nconst ListItem = styled.div`\r\n\r\n`\r\nconst UserInfo = styled.section`\r\n    text-align: left;\r\n    margin-top: 50px;\r\n    margin: auto;\r\n    max-width: ${props => props.theme.mediaL};\r\n\r\n    .user-icon{\r\n        height: 250px;\r\n    }\r\n    .user-icon img{\r\n        float: left;\r\n        height: 200px;\r\n        max-width: 200px;\r\n        margin-right: 10px;\r\n    }\r\n    .info-list{\r\n        margin: auto;\r\n        max-width: ${props => props.theme.mediaM};\r\n    }\r\n`\r\nconst LoadingWrapper = styled.div`\r\n    position: relative;\r\n    height: 100px;\r\n    \r\n`\r\nconst FeatureStatusWrapper = styled.div`\r\n    text-align: center;\r\n    max-width: ${props => props.theme.mediaM};\r\n    margin: auto;\r\n`"],"sourceRoot":""}