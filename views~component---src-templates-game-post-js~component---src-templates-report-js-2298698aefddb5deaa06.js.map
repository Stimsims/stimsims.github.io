{"version":3,"sources":["webpack:///./src/mycomponents/game/Views/Katex/v1/Katex.css.js","webpack:///./src/mycomponents/game/Views/Katex/v1/Katex.js","webpack:///./src/mycomponents/game/Views/TextManager/TextManager.css.js","webpack:///./src/mycomponents/game/Views/TextManager/TextManager.js","webpack:///./src/mycomponents/views/Score/v1/Score.js","webpack:///./src/mycomponents/game/Views/Beta/index.js","webpack:///./src/mycomponents/views/Payment/index.js","webpack:///./src/mycomponents/game/report/SendReport.js","webpack:///./src/mycomponents/game/report/SubmitReport.js","webpack:///./src/mycomponents/game/report/Upload.js","webpack:///./src/mycomponents/views/DataStudio/index.js","webpack:///./src/mycomponents/game/report/Report.js","webpack:///./src/mycomponents/game/report/utilities.js"],"names":["Glow","styled","span","props","theme","getColor","glow","Highlight","highlight","EMPTY","Katex","console","log","handleClick","bind","state","id","Math","random","onClick","renderError","renderKatex","error","style","errorStyles","this","fallback","ERROR","latex","getLatex","prepend","makeGlow","children","className","onError","math","ev","mergeInput","out","render","Array","isArray","map","e","i","Kat","key","block","dontNudge","color","backgroundColor","fontSize","inline","React","PureComponent","displayName","display","textAlign","pointerEvents","div","text","getFontSize","mediaS","Hr","hr","neutralL","TextManagerWrapper","mediaL","spaceStyles","margin","withTheme","handleItemClick","disabled","item","target","onInput","viewProps","href","preventDefault","navigate","itemClick","useState","getBackgroundColor","getTextView","index","input","divide","space","leave","Text","tag","toasttool","showUI","bgColor","hasOwnProperty","str","tex","renderRegularText","hover","t","ti","Score","renderNotes","notes","split","s","push","inlineblock","nudgeDown","label","Label","bold","Bar","mini","height","Fill","score","primary","neutral","Beta","meta","complete","feedback","getPaymentType","type","config","PRODUCT_EXAM","PRODUCT_REPORT","Error","Subscribable","mustPay","setMustPay","postPayCheck","setPostPayCheck","eventId","setEventId","setError","useEffect","active","getUid","doCheckCustomerStatus","view","handleClose","onPaymentClosed","attempt","doSubscribe","checkCustomerStatus","paymentType","hasAccess","sendEvent","Event","onAccess","isCreating","setTimeout","sendError","cloudCatch","onPaymentComplete","hasPaid","Helmet","src","async","Fragment","Paypal","user","paymentValue","getPaymentAmount","VENDOR_PAYPAL","VENDOR_STRIPE","Loading","delay","embed","Modal","onClose","PAY","CreateView","setState","reportLink","setReportLink","uploadReport","colorReport","gameKeys","acFeature","url","globalHistory","location","origin","import","doc","buildDocument","game","data","title","isSample","createReport","onCreateReportReject","message","renderUpload","Button","compact","LinkStyle","val","isSignedIn","onChange","doSignIn","drivePermissions","didPay","sendTo","reportStyle","PAY_REPORT_VALUE","PAY_CURRENCY","SendReportTrigger","activate","width","styleTitle","position","top","left","transform","studentPermissions","retry","a","deactivate","doSignOut","SubmitReportTrigger","AuthenticatedReportView","SignIn","getUrlHash","getItem","setSendTo","setActive","storeItem","permissions","UploadWrapper","AnimateWrapper","UploadChild","ANIM_LAYOUT_OVERLAP","padding","IconButton","icon","SendReport","SubmitReport","getUrl","motion","DataStudioView","GoogleData","reports","m","Frame","frameBorder","border","allowFullScreen","getReportKey","hrStyles","total","Spacer","model","renderAnswers","answers","document","views","answer","d","name","TextManager","roundTo","length","renderFile","finalMark","assessment","documentreal","documentmcq","playTime","texts","start","sum","pt","Date","toLocaleString","minutes","seconds","floor","renderPlayTime","report","useMemo","Container","Upload","DataStudio","FONT_HEADING","fullColor","body","getText","getLink","getThinLine","primaryD","getSpace","renderTime","getScore","fontWeight","fontFamily","background","qtext","scoreName","ratio","filler","charCount","ceil","filledCount","join"],"mappings":"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","file":"views~component---src-templates-game-post-js~component---src-templates-report-js-2298698aefddb5deaa06.js","sourcesContent":["import styled from 'styled-components';\r\n//** a lazy clone of text.css.js */\r\n\r\nexport const Glow = styled.span`\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px; right: 0px;\r\n    color: transparent;\r\n    ${props => {\r\n        return `text-shadow: 0 0 1px #fff, 0 0 3px #fff, 0 0 4px ${props.theme.getColor(props.theme, props.glow)}, \r\n        0 0 5px ${props.theme.getColor(props.theme, props.glow)}, 0 0 8px ${props.theme.getColor(props.theme, props.glow)}, \r\n        0 0 10px ${props.theme.getColor(props.theme, props.glow)}, 0 0 15px ${props.theme.getColor(props.theme, props.glow)};`\r\n    }}\r\n    animation: glowO 9000ms ease 0ms infinite alternate;\r\n`\r\nexport const Highlight = styled.span`\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px; right: 0px;\r\n    color: transparent;\r\n    opacity: 0.6;\r\n    ${props => {\r\n        return `text-shadow: 0 0 1px #fff, 0 0 1px #fff, 0 0 2px ${props.theme.getColor(props.theme, props.highlight)}, \r\n        0 0 2px ${props.theme.getColor(props.theme, props.highlight)}, 0 0 3px ${props.theme.getColor(props.theme, props.highlight)}, \r\n        0 0 4px ${props.theme.getColor(props.theme, props.highlight)}, 0 0 8px ${props.theme.getColor(props.theme, props.highlight)};`\r\n    }}\r\n`\r\n//\r\n//z-index: ${props => props.theme.z2};\r\n// export const Highlight = styled.span`\r\n//     position: absolute;\r\n//     top: 0px;\r\n//     left: 0px; right: 0px;\r\n//     z-index: 1;\r\n//     color: transparent;\r\n//     opacity: 0.6;\r\n//     ${props => {\r\n//         return `text-shadow: 0 0 1px #fff, 0 0 3px #fff, 0 0 4px ${getColor(props)}, \r\n//         0 0 5px ${getColor(props)}, 0 0 6px ${getColor(props)}, \r\n//         0 0 8px ${getColor(props)}, 0 0 15px ${getColor(props)};`\r\n//     }}\r\n// `\r\n/*\r\nexport const Glow = styled.span`\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px; right: 0px;\r\n    z-index: 1;\r\n    color: transparent;\r\n    ${props => {\r\n        return `text-shadow: 0 0 3px #fff, 0 0 5px #fff, 0 0 8px ${getColor(props)}, \r\n        0 0 10px ${getColor(props)}, 0 0 15px ${getColor(props)}, \r\n        0 0 20px ${getColor(props)}, 0 0 30px ${getColor(props)};`\r\n    }}\r\n    animation: glowO 9000ms ease 0ms infinite alternate;\r\n`\r\n*/","//pure component that takes or makes a unique id and latex\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport {Glow, Highlight} from './Katex.css.js';\r\nimport { InlineMath, BlockMath } from 'react-katex';\r\nimport {log, ERROR} from 'utilities/Measure';\r\nimport './katex.css';\r\n\r\nconst EMPTY = {};\r\nexport default class Katex extends React.PureComponent{\r\n    constructor(props){\r\n        super(props);\r\n        console.log(`katex props`, props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.state = {\r\n            id: props.id?props.id:`katexNeedsId${Math.random()}`,\r\n            onClick: {onClick: this.handleClick},\r\n        }\r\n        \r\n        this.renderError = this.renderError.bind(this);\r\n        this.renderKatex = this.renderKatex.bind(this);\r\n        \r\n    }\r\n    renderError(error){\r\n        return <span>\r\n            <div style={errorStyles}>Error while rendering this expression:</div>\r\n            {this.props.fallback && this.renderKatex(this.props.fallback, \r\n                ()=>{log(`katex error parsing fallback ${this.props.fallback}`, null, ERROR)})}\r\n            {!this.props.fallback && \r\n            <div style={errorStyles}>{this.props.latex?this.props.latex:'no latex'}</div>}\r\n        </span>\r\n    }\r\n    getLatex(prepend, latex){\r\n        if(prepend) return prepend + latex;\r\n        return latex;\r\n    }\r\n    makeGlow(children){\r\n        if(this.props.glow){\r\n            return <div className=\"glow-parent\">\r\n            <Glow className=\"glow bg-glow\" glow={this.props.glow}>{children}</Glow>\r\n            <span className=\"glow top-glow\" >{children}</span>\r\n        </div>\r\n        }else if(this.props.highlight){\r\n            return <div className=\"glow-parent\">\r\n            <Highlight className=\"glow bg-glow\" glow={this.props.highlight}>{children}</Highlight>\r\n            <span className=\"glow top-glow\" >{children}</span>\r\n        </div>\r\n        }\r\n        return children;\r\n    }\r\n    renderKatex(prepend, latex, onError){\r\n        if(latex === \"\") return <p>null expression</p>\r\n            //return this.makeGlow(<InlineMath math={this.getLatex(prepend, latex)} renderError={onError} />)\r\n        return <InlineMath math={this.getLatex(prepend, latex)} renderError={onError} />\r\n    }\r\n    handleClick(ev){\r\n        this.props.mergeInput(this.props.id, this.props.out);\r\n    }\r\n    \r\n    render(){\r\n        if(!Array.isArray(this.props.latex)){\r\n            return(\r\n                <Kat id={this.state.id} key={this.state.id} className={this.props.className} \r\n                    {...this.props.out?this.state.onClick:EMPTY} block={this.props.block} dontNudge={this.props.dontNudge} //nudgeDown={!this.props.nudgeDown}\r\n                    color={this.props.color} backgroundColor={this.props.backgroundColor} \r\n                    fontSize={this.props.fontSize} inline={this.props.inline}>\r\n                    {this.renderKatex(this.props.prepend, this.props.latex && this.props.latex.latex?this.props.latex.latex:this.props.latex, this.renderError)}\r\n                </Kat>\r\n            )\r\n        }else{\r\n            return this.props.latex.map((e, i) => {\r\n                return <Kat id={`${this.state.id}-${i}`} key={`${this.state.id}-${i}`} className={this.props.className} \r\n               {...this.props.out?this.state.onClick:EMPTY} block={this.props.block} dontNudge={this.props.dontNudge}\r\n                color={this.props.color} backgroundColor={this.props.backgroundColor} \r\n                fontSize={this.props.fontSize} inline={this.props.inline}>\r\n                {this.renderKatex(this.props.prepend, e.latex?e.latex:e, this.renderError)}\r\n            </Kat>\r\n            })\r\n        }\r\n    }\r\n}\r\nKatex.displayName=\"Katex\";\r\nKatex.propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number\r\n    ]).isRequired,\r\n    latex: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.arrayOf(PropTypes.string),\r\n    ]),\r\n    block: PropTypes.bool,\r\n    dontNudge: PropTypes.bool,\r\n    fallback: PropTypes.string, //if katex throws an error during rendering\r\n    prepend: PropTypes.string,\r\n    color: PropTypes.string,\r\n    backgroundColor: PropTypes.string,\r\n    className: PropTypes.string,\r\n}\r\n\r\nconst errorStyles = {display: 'block', textAlign: 'center', pointerEvents: 'none'};\r\n\r\n//zindex keeps math equations above button opacity layer z-index: 2;\r\n//font-size: ${props => props.theme.getFontSize(props.theme, props.fontSize, '0.9')};  font-size:1em; \r\nconst Kat = styled.div`\r\n    color: ${props => props.theme.getColor(props.theme, props.color, props.theme.text)};\r\n    font-size: ${props => props.theme.getFontSize(props.theme, props.fontSize, '1')};\r\n    @media (min-width: ${props => props.theme.mediaS}){\r\n        font-size: ${props => props.theme.getFontSize(props.theme, props.fontSize, '1.5')};\r\n        \r\n    }\r\n    \r\n    overflow-x: auto;\r\n    overflow-y: hidden; \r\n    box-sizing: border-box;\r\n    padding: 3px 10px;\r\n    max-width: 100%;\r\n    ${props => {\r\n        //console.log('katex styled props', props);\r\n        return  props.backgroundColor?`background-color: ${props.theme.getColor(props.theme, props.backgroundColor, 'transparent')}};`:''\r\n    }}\r\n    ::-webkit-scrollbar {\r\n        height: 8px;\r\n    }\r\n    ::-webkit-scrollbar-track {\r\n        background-color: #271D29;\r\n        \r\n    }\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: #523957;\r\n        border-radius: 10px;\r\n    }\r\n    ${props => props.block?'':'display:inline;'}\r\n\r\n`\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const Hr = styled.hr`\r\n    margin: 10px 0px 0px 0px;\r\n    background-color: ${props => props.theme.getColor(props.theme, props.color, props.theme.neutralL)};\r\n`\r\n\r\nexport const TextManagerWrapper = styled.div`\r\n    max-width: ${props => props.theme.mediaL};\r\n    margin: auto;\r\n`","import React, {useState, useEffect} from 'react';\r\nimport {withTheme} from 'styled-components';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport Katex from 'game/Views/Katex/v1/Katex.js';\r\nimport {Hr} from './TextManager.css.js';\r\nimport './styles.css'\r\nimport { navigate } from \"gatsby\"\r\nimport {log} from 'utilities/Measure.js';\r\nimport {TextManagerWrapper} from './TextManager.css.js';\r\n\r\nconst EMPTY = {};\r\nconst TextView = (props) => {\r\n\r\n    const handleItemClick = (ev) => {\r\n        //get the name of the item\r\n        if(!props.disabled){\r\n           \r\n            let item = Array.isArray(props.text)?props.text[ev.target.id]:props;\r\n            if(item.onInput){\r\n                item.onInput(item.id || props.id, item, props.viewProps, props.mergeInput);\r\n            }else if(item.out){\r\n                props.mergeInput(item.id || props.id, item.out);\r\n            }else if(item.href){\r\n                ev.preventDefault();\r\n                navigate(item.href);\r\n            }else if(props.onInput){\r\n                props.onInput(item.id || props.id, item, props.viewProps, props.mergeInput);\r\n            }else if(props.out){\r\n                props.mergeInput(item.id || props.id, props.out);\r\n            }\r\n           \r\n        }\r\n\r\n    }\r\n    const [itemClick] = useState({onClick: handleItemClick})\r\n\r\n\r\n    const getColor = (color) => {\r\n        let c = 'text';\r\n        if(color && props.theme[color]){\r\n            c = props.theme[color];\r\n        }else if(color){\r\n            c = color;\r\n        }else{\r\n            c = props.color;\r\n        }\r\n        //log(`text getColor color ${color} props.color ${props.color} c ${c}`);\r\n        return c;\r\n    }\r\n    const getBackgroundColor = (color) => {\r\n        if(props.theme[color]) return props.theme[color];\r\n        return color?color:'transparent';\r\n    }\r\n    const renderRegularText = (str, tex = {}, id, index, input, out, color, bgColor, className) => {\r\n        return <Text \r\n        fontSize={props.fontSize}\r\n        color={ color} \r\n        backgroundColor={bgColor} \r\n        className={`${className || 'inline-block'}`}\r\n        {...tex}\r\n        tag={tex.tag}\r\n        margin=\"0px auto\"\r\n        viewProps={props.viewProps}\r\n        {...(out || input)?itemClick:EMPTY}\r\n        id={index}\r\n        key={id}\r\n        text={str}\r\n         />\r\n    }\r\n    const renderKatex = (latex, text, id, index, input, out,  color, bgColor, className, block) => {\r\n        return <Katex \r\n        color={color}\r\n        backgroundColor={bgColor}\r\n        className={`${className || 'inline-block'}`}  //inline-block makes them bump out vertically with text\r\n        {...text}\r\n        block={block}\r\n        viewProps={props.viewProps}\r\n        {...out || input?itemClick:EMPTY}\r\n        fontSize={text.fontSize || props.fontSize}\r\n        mergeInput={props.mergeInput}\r\n        key={id} id={index} \r\n    />\r\n    }\r\n    const getTextView = (text, id, index, input, out) => {\r\n        if(text.divide){\r\n            return <Hr key={index} id={index} color={getColor(text.color || 'secondary')} />\r\n        }else if(text.space){\r\n            return <div key={index} id={index} className=\"block\" style={spaceStyles} />\r\n        }\r\n        else if(text.href){\r\n            //TODO test text manager link view\r\n            if(text.leave){\r\n                return <Text key={index} id={index} tag=\"a\" href={text.href} target=\"_blank\" \r\n                    className={`${text.className || 'inline'}`}\r\n                    color={getColor(text.color || 'secondary')}>{text.text}</Text>\r\n            }else{\r\n                return <Text key={index} id={index} tag=\"a\" color={getColor(text.color || 'secondary')} \r\n                    className={`${text.className || 'inline'}`}\r\n                    onClick={text.onInput || handleItemClick}>{text.text}</Text>\r\n            }\r\n            \r\n        }\r\n        if(text.toasttool){\r\n            return <Text \r\n            {...text}\r\n            className={'inline'} \r\n            color={getColor(text.color)} \r\n            backgroundColor={getBackgroundColor(text.backgroundColor)} \r\n            tag=\"a\" key={index} id={index}\r\n            onClick={()=>{props.viewProps.showUI('toasttool', text.toasttool)}}\r\n            >{text.text}</Text>\r\n        }\r\n        else if(text && text.latex){\r\n            return renderKatex(text.latex, text, id, index, input, out, getColor(text.color), \r\n                getBackgroundColor(text.backgroundColor), text.className, text.block);\r\n        }else if(text.hasOwnProperty('text') || typeof text === 'string'  || typeof text === 'number'){\r\n            return renderRegularText(text.hasOwnProperty('text')?text.text:text, text.text?text:props, id, index, input, out, \r\n            getColor(text.text?text.color:props.color), getBackgroundColor(text.text?text.bgColor:props.bgColor), text.className);\r\n        }\r\n        return <Text \r\n            id={id}\r\n            color=\"red\"\r\n            className={'inline'} \r\n            >\r\n                Error: shouldn't have text here\r\n                {props.children || 'destroy this'}\r\n                {/* {'fuck this'} */}\r\n            </Text>\r\n    }\r\n\r\n    \r\n    \r\n    const displayText = () => {\r\n        if(Array.isArray(props.text)){\r\n            return props.text.map((t, ti) => {\r\n                if(t) return getTextView(t, `${t.id || props.id}${ti}`, ti,\r\n                    t.onInput || props.onInput, t.out || props.out);\r\n            })\r\n        }else{\r\n            //return getTextView(typeof props.text === 'object'?props.text:props, 0);\r\n            // /props\r\n            return getTextView(props, props.id, 0, props.onInput, props.out);\r\n        }\r\n    }\r\n    return <TextManagerWrapper \r\n    key={props.id} id={props.id}\r\n    className={`marginAuto z-mid item-large ${props.className || ''} ${props.hover?'text-hover':''}\r\n    ${props.disabled?'translucent':''}`}\r\n    >\r\n        {displayText()}\r\n    </TextManagerWrapper>\r\n}\r\n\r\n\r\nconst spaceStyles = {margin: '10px'};\r\n\r\nexport default withTheme(TextView);\r\n//maxWidth-large ","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Text from 'views/Text/Text/v1/Text';\r\n\r\nexport default class Score extends React.PureComponent{\r\n    renderNotes(){\r\n        if(this.props.notes){\r\n            let split = null;\r\n            let text = [];\r\n            this.props.notes.map(e => {\r\n                split = e.split(\"$$\");\r\n                return split.map((s, i) => {\r\n                    if(!s){\r\n                        return null;\r\n                    }else if(i % 2 === 0){\r\n                        text.push({text: s,  inlineblock: true});\r\n                    }else{\r\n                        text.push({latex: s,  inlineblock: true, nudgeDown: 2}); return;\r\n                    }\r\n                })\r\n             \r\n            })\r\n            return <Text id={`${this.props.label}notes`} key={`${this.props.label}notes`} \r\n                    text={text} />\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n            <div >\r\n                {this.props.label && <Label><Text tag=\"h5\" bold>{this.props.label}</Text></Label>}\r\n                {this.renderNotes()}\r\n                <Bar mini={this.props.mini} height={this.props.height}>\r\n                    <Fill score={this.props.score? this.props.score:0} />\r\n                </Bar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nScore.propTypes = {\r\n    score: PropTypes.number,\r\n    label: PropTypes.string,\r\n    height: PropTypes.number\r\n}\r\n\r\n/*\r\n    right: ${props => {\r\n        return (1 - props.score)*100;\r\n    }}%;\r\n*/\r\nconst Fill = styled.div`\r\n\r\n    background-color: ${props => props.theme.primary};\r\n    box-sizing: border-box;\r\n    width:${props => props.score*100}%;\r\n    height:100%;\r\n    animation: animWidthScale 4s ease forwards;\r\n    transform: scale(0, 1);\r\n    transform-origin: 0% 50%;\r\n`\r\nconst Bar = styled.div`\r\n    width: 100%;\r\n    height: ${props => props.height || '30px'};\r\n    background-color: ${props => props.theme.neutral};\r\n    position: relative;\r\n    padding:5px;\r\n`\r\nconst Label = styled.span`\r\n    margin: 0px;\r\n    margin-top:50px;\r\n`","import React from 'react';\r\nimport Text from 'views/Text/Text/v1/Text';\r\n\r\nconst Beta = (props) => {\r\n    return <div className=\"text-center\">\r\n        {!props.meta.complete &&  <Text id=\"beta-subheading\"  tag=\"h4\" color=\"text\"  text={'This game is in beta'} className=\"aligned-centered\" />}\r\n        {!props.meta.complete && props.meta.feedback &&\r\n            <div>\r\n                <Text>When you are finished, please fill out this \r\n                    <a href={props.meta.feedback} target=\"_blank\"> feedback form </a>\r\n                </Text>  \r\n            </div>}\r\n    </div>\r\n}\r\n\r\nexport default Beta;\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Helmet} from 'react-helmet';\r\nimport Modal from 'views/Modal/v1/Modal.js';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport Loading from 'views/Loading/v1/Loading.js';\r\nimport Stripe from 'apis/Stripe/Provider/index';\r\nimport {getUid} from 'utilities/Uid';\r\nimport {checkCustomerStatus, cloudCatch} from 'apis/firebase/cloudFunctions';\r\nimport Subscribable from 'views/hoc/Subscribable';\r\nimport {firestoreCatch} from 'apis/firebase/firestoreFunctions';\r\nimport {log, sendError, sendEvent} from 'utilities/Measure';\r\nimport {Event} from 'utilities/Create';\r\nimport {isDevelopment} from 'utilities/Validation';\r\nimport Paypal from 'apis/Paypal/index';\r\nimport config, {VENDOR_PAYPAL, VENDOR_STRIPE, getPaymentAmount} from 'cloudFunctions/dbConfig.js'\r\n\r\nconst PAYMENT_EXAM = 'exam', PAYMENT_REPORT = 'report';\r\nconst getPaymentType = (type) => {\r\n        switch(type){\r\n            case config.PRODUCT_EXAM: return config.PRODUCT_EXAM;\r\n            case config.PRODUCT_REPORT: return config.PRODUCT_REPORT;\r\n            default: throw Error(`invalid payment type!`)\r\n        }\r\n}\r\n// const getPaymentValue = (vendor, key) => {\r\n//     console.log(`payment getPaymentValue key ${key} exam ${config.PAY_EXAM_VALUE} report ${config.PAY_REPORT_VALUE}`);\r\n//     switch(key){\r\n//         case config.PRODUCT_EXAM: return config.PAY_EXAM_VALUE;\r\n//         case config.PRODUCT_REPORT: return config.PAY_REPORT_VALUE;\r\n//         default: throw Error(`invalid payment value!`)\r\n//     }\r\n// }\r\n//handles communication with stripe, calls onPaymentSuccess when payment recieved\r\nconst Payment = (props) => {\r\n    const [mustPay, setMustPay] = useState(false);\r\n    const [postPayCheck, setPostPayCheck] = useState(false);\r\n    const [eventId, setEventId] = useState(false);\r\n    const [error, setError] = useState(null);\r\n    useEffect(()=>{\r\n        log(`Payment effect active ${props.active} postPay ${postPayCheck}`)\r\n        if(props.active && !postPayCheck){\r\n            let eventId = getUid();\r\n            setEventId(eventId);\r\n            doCheckCustomerStatus(eventId);\r\n        }\r\n    }, [props.active, postPayCheck])\r\n    const handleClose = () => {\r\n        //setActive(false);\r\n        props.onPaymentClosed();\r\n    }\r\n    const doCheckCustomerStatus = (eventId, attempt = 1) => {\r\n          log(`Stripe payment Report firebase checkCustomerStatus eventId ${eventId} props`, props);\r\n          props.doSubscribe('paymentCustomerStatus', \r\n                ()=>{return checkCustomerStatus(eventId, props.paymentType)},\r\n                (e) => {\r\n                    if(e && e.hasAccess){ //if(false && e && e.data && e.data.hasAccess){\r\n                        //call client success\r\n                        sendEvent(new Event('payment', 'paymentCustomerStatus-hasAccess'));\r\n                        props.onAccess(true, false);\r\n                    }else if(mustPay || (e && e.isCreating)){\r\n                        sendEvent(new Event('payment', 'paymentCustomerStatus-reattempt', attempt));\r\n                        if(attempt <= 3){\r\n                            setTimeout(()=>{\r\n                                doCheckCustomerStatus(eventId, attempt + 1);\r\n                            }, 5000);\r\n                        }else{\r\n                            if(mustPay){\r\n                                sendError(`paymentCustomerStatus payment didnt register in database`);\r\n                                setError(`The Stimsims servers haven't been notified of your successful payment yet. \r\n                                Once your payment provider has updated us with your payment status, this feature will be available to you. \r\n                                Please try using this feature again in a few minutes.`);\r\n                            }else{\r\n                                sendError(`paymentCustomerStatus Unable to find your account`);\r\n                                setError('Unable to find your account');\r\n                            }\r\n                            setMustPay(false);\r\n                            setPostPayCheck(false);\r\n                        }\r\n                    }else if(!e  || e && e.error){\r\n                        sendError(`paymentCustomerStatus ${e.error}`);\r\n                        setError(e.error);\r\n                    }else if(!e){\r\n                        sendError(`paymentCustomerStatus something went wrong...`);\r\n                        setError(`something went wrong...`);\r\n                    }else if(!mustPay){\r\n                        //handlePayment\r\n                        sendEvent(new Event('payment', 'paymentCustomerStatus-mustPay'));\r\n                        setMustPay(true);\r\n                    }\r\n                },\r\n                cloudCatch,\r\n                setError\r\n            );\r\n      }\r\n      const onPaymentComplete = (hasAccess, hasPaid) => {\r\n          if(!hasAccess) throw Error('Payment onPaymentComplete should only be called if payment succeeded');\r\n          if(!eventId) throw Error('Payment onPaymentComplete requires an eventId, got ' + eventId);\r\n          setPostPayCheck(true);\r\n          doCheckCustomerStatus(eventId, null, true);\r\n      }\r\n      const renderStripe = () => {\r\n          return <div>\r\n                {props.children}\r\n                <Paypal user={props.user} \r\n                    onAccess={onPaymentComplete}  \r\n                    paymentType={getPaymentType(props.paymentType)} \r\n                    paymentValue={getPaymentAmount(VENDOR_PAYPAL, props.paymentType)} />\r\n                <Stripe \r\n                    user={props.user}\r\n                    onAccess={onPaymentComplete} \r\n                    eventId={eventId} \r\n                    paymentType={getPaymentType(props.paymentType)} \r\n                    paymentValue={getPaymentAmount(VENDOR_STRIPE, props.paymentType)}     \r\n                />\r\n          </div>\r\n      }\r\n      const wrapView = (view) => {\r\n          if(props.embed){\r\n            return props.active?view:null;\r\n          }else{\r\n              return <Modal onClose={handleClose} active={props.active} className=\"bg-grad-pp\">\r\n                  {view}\r\n            </Modal>\r\n          }\r\n      }\r\n        log(`Stripe Payment rendering active ${props.active} mustPay ${mustPay} postPayCheck ${postPayCheck} props`, props);\r\n\r\n        return <div >\r\n                    <Helmet>\r\n                        <script id=\"stripe-js\" src=\"https://js.stripe.com/v3/\" async />\r\n                        {/* <script id=\"paypal-js\" src=\"https://www.paypalobjects.com/api/checkout.js\" async /> */}\r\n                        {/* <script id=\"paypal-js\" src=\"https://www.paypal.com/sdk/js?client-id=sb&currency=AUD\" async /> */}\r\n                    </Helmet>\r\n                    {wrapView(\r\n                            <React.Fragment>\r\n                                {error && <div><Text className=\"text-center\" color=\"error\">{error}</Text></div>}\r\n                                {mustPay && !postPayCheck && !error &&  renderStripe()}\r\n                                {(!mustPay) && !error && <Loading delay={0} \r\n                                        text={\"Checking access\"}/>}\r\n                                {postPayCheck && !error && <Loading delay={0} \r\n                                                    text={\"Checking payment succeeded\"}/>}\r\n                            </React.Fragment>\r\n                    )}\r\n                    {!props.active && error && <Text >{error}</Text>}\r\n                </div>\r\n\r\n    \r\n}\r\n\r\n//const textWrapper = {margin: '20px 50px'};\r\n\r\nPayment.propTypes = {\r\n    text: PropTypes.string,\r\n    active: PropTypes.bool.isRequired,\r\n    onAccess: PropTypes.func,\r\n    paymentType: PropTypes.string.isRequired,\r\n    embed: PropTypes.bool\r\n}\r\n\r\nexport default Subscribable(Payment);\r\n\r\n","import React, {useEffect, useState} from 'react';\r\nimport {drivePermissions} from 'apis/config';\r\nimport Button from 'views/Button/v1/Button.js';\r\nimport {log} from 'utilities/Measure';\r\nimport Text from 'views/Text/Text/v1/Text.js';\r\nimport TextMan from 'game/Views/TextManager/TextManager';\r\nimport Loading from 'views/Loading/v1/Loading.js';\r\nimport {createReport, classroomThen} from 'apis/firebase/gapiFunctions';\r\nimport Payment from 'views/Payment/index';\r\nimport { globalHistory } from \"@reach/router\"\r\nimport {getSampleScore, buildDocument} from './utilities';\r\nimport {cloudCatch} from 'apis/firebase/cloudFunctions';\r\nimport {sendEvent, sendError} from 'utilities/Measure';\r\nimport gameKeys from 'games/keys.js';\r\nimport {Event} from 'utilities/Create';\r\nimport config from 'cloudFunctions/dbConfig.js'\r\n\r\nconst  START=\"start\", SUCCESS=\"success\", FAIL=\"fail\", PAY=\"pay\", \r\n    PAY_SUCCESS='paySuccess', LOADING = 'loading';\r\nconst STORAGE_VALUE = 'googleDrive';\r\nconst CreateView = (props) => {\r\n    const [state, setState] = useState(PAY);\r\n    const [reportLink, setReportLink] = useState(null);\r\n    const [error, setError] = useState(null);\r\n\r\n    const uploadReport = (colorReport) => {\r\n        sendEvent(new Event(gameKeys.acFeature, 'uploadReport', null, null));\r\n        setError(null);\r\n        setReportLink(null);\r\n        setState(LOADING);\r\n        let url = globalHistory.location.origin + \"/mathgames/\" + props.meta.import;\r\n        let doc = buildDocument(props.game, props.data, props.theme, props.meta.title, props.isSample, \r\n            colorReport, url);\r\n        props.doSubscribe('createReport', \r\n            ()=>{\r\n                return createReport(`${props.game.title} Performance Report`, doc);\r\n            },\r\n            e => {\r\n                setReportLink(e.reportLink);\r\n                setState(SUCCESS);\r\n            },\r\n            cloudCatch,\r\n            onCreateReportReject\r\n        )\r\n    }\r\n    const onCreateReportReject = (message) => {\r\n        setState(FAIL);\r\n        setReportLink(null);\r\n        setError(message);\r\n    }\r\n\r\n    const onChange = (id) => {\r\n        switch(id){\r\n            case FAIL: setState(PAY); break;\r\n            //case START:\r\n            case PAY:\r\n            //default: return props.isSignedIn?setState({...state, uploadClicked: true, state: PAY}):props.doSignIn()\r\n            default: return props.isSignedIn?setState(PAY):null\r\n        }\r\n    }\r\n\r\n    const renderUpload = () => {\r\n        if(state === PAY_SUCCESS){\r\n            return <React.Fragment>\r\n                        <TextMan color=\"orange\" className=\"block text-center\" text=\"Payment Successful\" />\r\n                        <Button onInput={ ()=>{uploadReport(true)}}   compact>Upload your report to Google Drive</Button>\r\n                </React.Fragment>\r\n        }\r\n        else if(state === START){\r\n            return <Button onInput={()=>{setState(PAY)}} compact>Upload</Button>\r\n        }\r\n        else if(state === LOADING){\r\n            return <Loading text=\"Uploading Report\"/>\r\n        }else if(state === SUCCESS){\r\n                return <React.Fragment>\r\n                <Text className=\"text-center\">Upload complete</Text>\r\n                <Text tag=\"p\" glow=\"secondary\" color=\"text\">\r\n                        <a href={reportLink} target=\"_blank\" style={LinkStyle}>View Report</a>\r\n                        </Text>\r\n                    {/* {renderUploadButton(false)} */}\r\n            </React.Fragment>\r\n        }else if(state === FAIL){\r\n            return <React.Fragment>\r\n                        <div>\r\n                        <Text color=\"orange\" className=\"block text-center\">Error: {error}</Text>\r\n                        </div>\r\n                        <Button id={FAIL} compact onInput={(id, val)=>{\r\n                            if(props.isSignedIn){\r\n                                onChange(id, val)\r\n                            }else{\r\n                                props.doSignIn(drivePermissions)\r\n                            }\r\n                        }} bgColor=\"secondaryD\">Restart</Button>\r\n                    </React.Fragment>\r\n        }\r\n\r\n    }\r\n    const onAccess = (hasAccess, didPay) => {\r\n        if(hasAccess === true){\r\n            uploadReport(true);\r\n            setState(LOADING);\r\n        }else{\r\n            //show fail\r\n            setState(FAIL);\r\n        }\r\n    }\r\n    const onPaymentClosed = () => {\r\n        setState(START)\r\n       \r\n    }\r\n    const renderWrapper = () => {\r\n        return <div key=\"report\" id=\"report\" style={reportStyle}>\r\n       {renderUpload()}\r\n        <Payment \r\n            user={props.user}\r\n            active={state === PAY} \r\n            embed\r\n            onAccess={onAccess} \r\n            paymentType={config.PRODUCT_REPORT} \r\n            onPaymentClosed={onPaymentClosed} \r\n        >\r\n            <Text tag=\"h4\" className=\"text-center block\"color=\"secondary\" margin=\"30px auto\">\r\n                Unlimited reports for all Stimsims math games: $ {config.PAY_REPORT_VALUE} {config.PAY_CURRENCY}</Text>\r\n        </Payment>\r\n       \r\n      </div>\r\n    }\r\n\r\n\r\n    const getModalView = () => {\r\n        return <div>\r\n            <Text tag=\"h3\" className=\"text-center block\">Upload Report to Google Drive</Text>\r\n\r\n            {renderWrapper()}\r\n        </div>\r\n    }\r\n    if(props.sendTo === STORAGE_VALUE){\r\n        return <React.Fragment>\r\n            {getModalView()}\r\n        </React.Fragment>\r\n    }else{\r\n        return null;\r\n    }\r\n\r\n}\r\n\r\nexport default CreateView ;\r\n\r\nexport const SendReportTrigger = (props) => {\r\n    return <Button margin=\"5px 0px\" onInput={()=>{\r\n        props.activate(drivePermissions, STORAGE_VALUE);\r\n    }}>Send to Google Drive</Button>\r\n}\r\n\r\n\r\nconst LinkStyle = {color: 'white'};\r\nconst reportStyle = {width:'100%'};\r\n","import React, {useEffect, useState} from 'react';\r\nimport SubmitAssignment from 'apis/classroom/SubmitCourseWork/index';\r\nimport {studentPermissions} from 'apis/config';\r\nimport Button from 'views/Button/v1/Button.js';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport {log} from 'utilities/Measure';\r\n\r\nconst STORAGE_VALUE = 'submitAssignment';\r\nconst styleTitle = {position: 'absolute', top:0, left: '50%', transform: 'translateX(-50%)'};\r\nconst CreateView = (props) => {\r\n   // const [active, setActive] = useState(true);\r\n    useEffect(()=>{\r\n        if(props.active){\r\n            props.doSignIn(studentPermissions);\r\n        }\r\n    }, [props.active])\r\n    const deactivate = () => {\r\n        //setActive(false);\r\n        props.deactivate();\r\n    };\r\n    const retry = async () => {\r\n        deactivate();\r\n        await props.doSignOut();\r\n    }\r\n\r\n\r\n    if(props.sendTo === STORAGE_VALUE){\r\n        return <React.Fragment>\r\n                <div style={styleTitle}>\r\n                    <Text text=\"Submit Assignment\" tag=\"h2\" className=\"text-center\"/>\r\n                </div>\r\n               <div>\r\n                    <SubmitAssignment {...props} retry={retry} />\r\n               </div>\r\n        </React.Fragment>\r\n    }else{\r\n        return null;\r\n    }\r\n    \r\n}\r\n\r\nexport default CreateView ;\r\n\r\nexport const SubmitReportTrigger = (props) => {\r\n    // if(props.sendTo && props.sendTo !== STORAGE_VALUE){\r\n    //     return null;\r\n    // }\r\n    return <Button margin=\"5px 0px\" onInput={()=>{\r\n       // props.setToastMessage('please sign in to submit assignment');\r\n        props.activate(studentPermissions, STORAGE_VALUE);\r\n    }}>Submit Assignment</Button>\r\n}","import React, {useState, useEffect} from 'react';\r\nimport styled, {withTheme} from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Text from 'views/Text/Text/v1/Text.js';\r\nimport IconButton from 'views/IconButton/v1/IconButton.js';\r\nimport {log} from 'utilities/Measure';\r\nimport {getUrl, getUrlHash} from 'utilities/Format';\r\nimport {storeItem, getItem} from 'utilities/Storage.js';\r\nimport SignIn from 'apis/SignIn/SignIn';\r\nimport Subscribable from 'views/hoc/Subscribable/index.js';\r\nimport SendReportToDrive, {SendReportTrigger} from './SendReport';\r\nimport SubmitReport, {SubmitReportTrigger} from './SubmitReport';\r\nimport Modal from 'views/Modal/v1/Modal';\r\nimport {motion, AnimatePresence} from 'framer-motion';\r\nimport {FADE, ANIM_LAYOUT_OVERLAP} from 'game/tree/Animations';\r\n\r\n\r\nconst STORAGE_ID = 'uploadTarget';\r\nconst  UploadView = (props) => {\r\n    log(`UploadView props url hash ${getUrlHash()}`, props);\r\n    const [error, setError] = useState(null);\r\n    const [sendTo, setSendTo] = useState(getItem(STORAGE_ID));\r\n    const [active, setActive] = useState(sendTo?true:false);\r\n\r\n    log(`Report ReportUpload sendTo ${sendTo} active ${active} signedIn? ${props.isSignedIn} error ${error} props`, props)\r\n\r\n    const deactivate = () => {\r\n        setActive(false);\r\n        setSendTo(null);\r\n        storeItem(STORAGE_ID, null);\r\n        props.doSignOut(); \r\n    }\r\n    const activate = (permissions, target) => {\r\n        storeItem(STORAGE_ID, target);\r\n        props.doSignIn(permissions); \r\n        // if(!props.isSignedIn){\r\n        //     props.doSignIn(permissions); \r\n        // }else{\r\n        //     setSendTo(target);\r\n        // }\r\n    \r\n        setActive(target?true:false);\r\n    }\r\n    // const setToastMessage = (text) => {\r\n    //     setToast({id: getHash(), text});\r\n    // }\r\n    return <UploadWrapper>\r\n            <AnimateWrapper>\r\n                <AnimatePresence>\r\n                {active && <UploadChild key=\"trigger\" {...ANIM_LAYOUT_OVERLAP}>\r\n                    <div className=\"text-center upload-child\">\r\n                        <div className=\"text-center\">\r\n                            <Text className=\"text-center block\">The free tool \r\n                            <a style={{padding: '0px 4px'}} target=\"_blank\" href=\"https://gsuite.google.com/marketplace/app/autolatex_equations/850293439076\"> Auto-Latex </a> \r\n                            is required to render the reports math equations correctly in Google Drive. Currently, \r\n                            add-ons can only be added to desktop browsers. The reports equations are not viewable on mobile devices.</Text>\r\n                        </div>\r\n                        <SendReportTrigger {...props} sendTo={sendTo} \r\n                        //setToastMessage={setToastMessage} \r\n                        deactivate={deactivate} activate={activate} />\r\n                        <SubmitReportTrigger \r\n                            {...props} \r\n                            sendTo={sendTo} \r\n                            //setToastMessage={setToastMessage} \r\n                            deactivate={deactivate} activate={activate}\r\n                        />\r\n                    </div>\r\n                </UploadChild>}\r\n        \r\n                {!active && <UploadChild key={'start'} id='start' {...ANIM_LAYOUT_OVERLAP}>\r\n                        <div className=\"text-center upload-child\">\r\n                            <Text tag=\"h4\" className=\"inline\">Upload Report:</Text>\r\n                            <IconButton key={'startbtn'} icon={`icon-cloud-upload`} glow color=\"secondary\"  className=\"jump\" \r\n                                onInput={()=>{\r\n                                        setActive(true);\r\n                                        setSendTo(null);\r\n                                    }\r\n                                } \r\n                            />\r\n                    </div>\r\n                </UploadChild>}\r\n            </AnimatePresence>\r\n        </AnimateWrapper>\r\n        <Modal active={sendTo && props.isSignedIn} onClose={deactivate} className=\"bg-grad-pp\">\r\n            <SendReportToDrive {...props} sendTo={sendTo} deactivate={deactivate} activate={activate} />\r\n            <SubmitReport {...props} sendTo={sendTo} deactivate={deactivate} activate={activate} />\r\n        </Modal>\r\n        {/* {toast && <ToastTool id={toast.id} text={toast.text} timeout={3000} />} */}\r\n    </UploadWrapper>\r\n}\r\nconst LinkStyle = {color: 'white'};\r\nUploadView.propTypes = {\r\n    data: PropTypes.object,\r\n    game: PropTypes.object\r\n}\r\n\r\nconst GOOGLE_DRIVE = 'tgd';\r\nconst GOOGLE_CLASS = 'tgc';\r\n\r\nconst selectOptions = [\r\n    {label: 'to Google Drive', key: GOOGLE_DRIVE},\r\n    {label: 'as assignment to Google Classroom', key: GOOGLE_CLASS},\r\n]\r\n\r\n/*\r\nSelectView.propTypes = {\r\n    options: PropTypes.array.isRequired,\r\n    text: PropTypes.string,\r\n    nullOption: PropTypes.bool,\r\n    onInput: PropTypes.func,\r\n    creatable: PropTypes.bool\r\n}\r\n*/\r\n\r\nconst AuthenticatedReportView = Subscribable(SignIn(UploadView, getUrl(), true));\r\n\r\nexport default AuthenticatedReportView;\r\n\r\nconst AnimateWrapper = styled.div`\r\n    height: 200px;\r\n    width:100%;\r\n    \r\n`\r\nconst UploadChild = styled(motion.div)`\r\n    height:100%;\r\n    width:100%;\r\n    .upload-child{\r\n        width:100%;\r\n        position:absolute;\r\n        top:50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n    }\r\n`\r\n\r\nconst UploadWrapper = styled.div`\r\n    text-align: center;\r\n    width:100%;\r\n \r\n    p, a{\r\n        display: inline-block\r\n    }\r\n    .panel-1, panel-2{\r\n        width:49%;\r\n        display: inline-block;\r\n        text-align: center;\r\n    }\r\n`\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Text from 'views/Text/Text/v1/Text';\r\n\r\nconst DataStudioView = (props) => {\r\n    //<Text tag=\"h1\" className=\"text-xlarge text-center\" color=\"primary\">Average Player Performance</Text>\r\n    return <div>\r\n        {props.text &&  <Text tag=\"h1\" className=\"text-xlarge text-center\" color=\"primary\">{props.text}</Text>}\r\n            <GoogleData>\r\n            {props.reports.map((m, i) => {\r\n                return <Frame key={i}>\r\n                    <iframe width=\"100%\" src={m}\r\n                    frameBorder=\"0\" border=\"0\" allowFullScreen></iframe>\r\n                </Frame>\r\n            })}\r\n        </GoogleData>\r\n    </div>\r\n}\r\n\r\nexport default DataStudioView;\r\n\r\nconst GoogleData = styled.div`\r\n    margin: auto;\r\n`\r\n\r\nconst Frame = styled.div`\r\ntext-align: center;\r\n    iframe {\r\n        margin: auto;\r\n        box-sizing: border-box;\r\n        width: 100%; \r\n        max-width: ${props => props.theme.mediaL};\r\n        height: 79.7vw; \r\n        max-height: 700px;\r\n    }\r\n`","import React, {useState, useEffect, useMemo} from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport styled, {withTheme} from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport Score from 'views/Score/v1/Score.js';\r\nimport Select from 'views/Select/v2/Select.js';\r\nimport Text from 'views/Text/Text/v1/Text.js';\r\nimport Beta from 'game/Views/Beta/index.js';\r\nimport TextManager from 'game/Views/TextManager/TextManager';\r\nimport Upload from './Upload.js';\r\nimport {sendError, sendEvent, log} from 'utilities/Measure.js'; \r\nimport {propsAllowNullOrUndefined} from 'utilities/Validation.js';\r\nimport {roundTo} from 'utilities/Format.js';\r\nimport DataStudio from 'views/DataStudio/index';\r\n\r\nexport const getReportKey = (title) => `report-${title}`;\r\nexport const REPORT_KEY = 'REPORT_DATA';\r\nconst UNLOADED = 0, SUBHEADING_COLOR = 'secondaryD', HEADING_COLOR = 'secondary';\r\nconst MOCK_MODEL = [\r\n    {id: 'honey', name: 'honey', description: 'intensity of honey', score: 0.8, userValue: 12, modelValue: 13}\r\n]\r\n\r\n//game document\r\nexport const MOCK_GAME_DOC = {document: [\r\n    {\"id\": \"test-sum\", \"tag\": \"score\", \"text\": \"Picked the correct temperature\"}\r\n]}\r\nexport const MOCK_DATA = {\r\n    model: MOCK_MODEL,\r\n    finalScore: 0.7,\r\n    mcq: {\r\n        [`test-sum`]: {total: 3, score: 2, notes: ['user incorrectly answered that 1+2=5']}\r\n    }\r\n}\r\n\r\nconst  Report = (props) => {\r\n    log(`Report props`, props);\r\n    const [model] = useState(props.data && props.data.model || []);\r\n    const [error, setError] = useState(null);\r\n   \r\n    // const [dataCount] = useState(props.data && props.data.mcq?Object.keys(props.data.mcq).length:0);\r\n\r\n    useEffect(()=>{\r\n        if(!props.data){\r\n            //error state - every game should produce data to analyse\r\n            sendError(`my error:report provided null data ` + props.data, false); //sendError = (description, fatal) \r\n        }\r\n    }, [])\r\n\r\n    const renderAnswers = (answers, document) => {\r\n        let views = [];\r\n        let answer = null;\r\n        document.map((d, i) => {\r\n            if(d.tag === 'score'){\r\n                answer = answers[d.id];\r\n               if(d.name){\r\n                views.push(<TextManager id={`${d.id}-name`} key={`${d.id}-name`} text={[\r\n                    {text: d.name, tag: 'h4', color: 'primary', bold:true}\r\n                ]} />)\r\n               }\r\n               if(d.text){\r\n                views.push(<TextManager id={`${d.id}-name`} key={`${d.id}-name`} text={[\r\n                    {text: d.text, tag: 'h5', color: 'secondary', bold:true}\r\n                ]} />)\r\n               }\r\n                //tag=\"h5\" bold\r\n                if(!answer || !answer.total){\r\n                    \r\n                    views.push(<TextManager id={`${d.id}-score`} key={`${d.id}-score`} text={[\r\n                        {text: `Question not asked during game`, className: 'block'},\r\n                        {divide: true}\r\n                    ]} />)\r\n                }else{\r\n                    views.push(<Score id={d.id} key={d.id} score={answer.score/answer.total} \r\n                        label={`${roundTo((answer.score/answer.total)*100, 1)}%  \r\n                        of ${answer.total} question${answer.total> 1?'s':''}`}/>)\r\n                    if(answer.notes && answer.notes.length > 0){\r\n                        // views.push(<Text tag=\"p\" className=\"text-left\">Mistakes:</Text>)\r\n                        views.push(<TextManager id={`${d.id}-notes`} key={`${d.id}-notes`} text={answer.notes} />)\r\n                    }\r\n                }\r\n                views.push(<Spacer id={`${d.id}-spacer`} key={`${d.id}-spacer`} />)\r\n            }else{\r\n                views.push(<Text id={d.id} key={d.id} fontSize=\"remM\" color=\"secondary\" className=\"text-center\">{d.text}</Text>)\r\n            }\r\n\r\n        });\r\n        return views;\r\n    }\r\n    const renderPlayTime = (playTime) => {\r\n        //sum the seconds between \r\n        let texts = [];\r\n        let start = 0, sum = 0;\r\n        texts.push({divide: true})\r\n        texts.push({divide: true})\r\n        texts.push({space: true});\r\n        texts.push({text: `Play Time`, tag: 'h3', className: 'block text-center'});\r\n        playTime.map(pt => {\r\n            if(start === 0){\r\n                start = pt;\r\n                texts.push({text: `Played from ${new Date(pt).toLocaleString()}`})\r\n            }else{\r\n                sum += (pt - start);\r\n                texts.push({text: `to ${new Date(pt).toLocaleString()}`});\r\n                texts.push({space: true});\r\n                start = 0;\r\n            }\r\n        })\r\n        let minutes = sum/(60*1000);\r\n        let seconds = minutes - Math.floor(minutes);\r\n        seconds = Math.floor(seconds*60);\r\n        minutes = Math.floor(minutes);\r\n        texts.push({text: `Total Time (mm:ss): ${minutes}:${seconds}`, className: 'text-center block'});\r\n        texts.push({divide: true})\r\n        texts.push({divide: true});\r\n        return <TextManager id=\"playtime\" key=\"playtime\" className=\"text-center\" text={texts} />\r\n    }\r\n    const renderFile = (meta, data) => {\r\n        let views = [\r\n            <Text id=\"heading\" key=\"heading\" tag=\"h2\" fontSize=\"remL\" className=\"text-center\" color={HEADING_COLOR}  >\r\n            {meta.title} Performance Report</Text>\r\n        ];\r\n       \r\n       views.push(<TextManager id=\"finalscore\" key=\"finalscore\"  text={[\r\n                {space: true},\r\n                {text: 'Final Score', tag: 'h2', className: 'block text-center'},\r\n                {text: `${roundTo(data.finalMark*100, 2)}%`, tag: 'h2', fontSize: 'remXL', color: 'primary', className: 'block text-center'},\r\n        ]} />)\r\n  \r\n        views.push(<Text id=\"proximity\" key=\"proximity\" tag=\"h3\" margin=\"50px 0px 0px 0px\"  color=\"secondary\" \r\n                        className=\"text-center\">Real Questions</Text>)\r\n        views.push(<Text id=\"proximity-article\" key=\"proximity-article\" \r\n                        className=\"text-center block\" tag=\"a\" href=\"/blog/real-math-questions/\" \r\n                        target=\"_blank\">What are real questions?</Text>)\r\n        views = [...views, ...renderAnswers(props.data.assessment, meta.documentreal)];\r\n        views.push(<Text id=\"mcq\" key=\"mcq\" tag=\"h3\" color=\"secondary\" \r\n                        className=\"text-center\">Multiple Choice Questions</Text>)\r\n        views.push(<Text id=\"mcq-article\" key=\"mcq-article\" \r\n                        className=\"text-center block\" tag=\"a\" href=\"/blog/branching-math-game-tests/\" \r\n                        target=\"_blank\">Why are there unanswered questions?</Text>)\r\n        views = [...views, ...renderAnswers(props.data.assessment, meta.documentmcq)];\r\n        views.push(renderPlayTime(data.playTime));\r\n        return views;\r\n    }\r\n\r\n\r\n    //let body = structureBody(template, this.props.theme);\r\n    const report = useMemo(() => {\r\n        if(props.meta && props.data){\r\n            return renderFile(props.meta, props.data)\r\n        }else{\r\n            return <div><Text color=\"g1\">No data found</Text></div>\r\n        }\r\n    }, \r\n    [props.meta, props.data]);\r\n\r\n    if(props.data && props.meta){\r\n        return(\r\n            <Container >\r\n                <div className=\"upload-wrapper\">\r\n                    <Upload data={props.data} game={props.meta} meta={props.meta}  {...props} />\r\n                </div>\r\n                <Beta meta={props.meta} />\r\n                {report}\r\n                {error && <p>{error}</p>}\r\n                <hr style={hrStyles} />\r\n                \r\n                <DataStudio \r\n                    text=\"Aggregate Player Performance\"\r\n                    reports={props.meta.reports}\r\n                />\r\n            </Container>\r\n        )\r\n    }else{\r\n        return <Container>\r\n\r\n            <Helmet>\r\n                <script id=\"stripe-js\" src=\"https://js.stripe.com/v3/\" async></script>\r\n            </Helmet>\r\n    \r\n            <Beta meta={props.meta} />\r\n            <Text tag=\"h2\" className=\"text-xlarge text-center\" color=\"primary\">Your Performance</Text>\r\n            <Text tag=\"p\" className=\"text-center\" fontSize=\"remM\">No data found</Text>\r\n            <Text tag=\"p\" className=\"text-center\" fontSize=\"remM\">This is an error, it has been logged.</Text>\r\n            <Text tag=\"p\" className=\"text-center\" fontSize=\"remM\">Please try playing again.</Text>\r\n        </Container>\r\n    }\r\n   \r\n    \r\n}\r\nconst hrStyles = {width: '100%', backgroundColor: 'grey'};\r\n\r\nReport.propTypes = {\r\n    data: PropTypes.oneOfType([\r\n        propsAllowNullOrUndefined,\r\n        PropTypes.object\r\n      ]),\r\n    game: PropTypes.oneOfType([\r\n        propsAllowNullOrUndefined,\r\n        PropTypes.object\r\n      ]),\r\n}\r\n\r\nexport default withTheme(Report);\r\n\r\n\r\nconst Spacer = styled.div`\r\n    \r\n    margin-bottom: 50px;\r\n    margin-top: 10px;\r\n`\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    margin: 0 auto; \r\n    padding:0;\r\n    box-sizing: border-box;\r\n    max-width: ${props => props.theme.mediaL};\r\n\r\n    .upload-wrapper{\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        min-height: 200px;\r\n        width:100%;\r\n    }\r\n`\r\nconst FinalScore = styled.div`\r\n    width:100%;\r\n    .panel-1, .panel-2{\r\n        text-align:center;\r\n        width:49%;\r\n        display: inline-block;\r\n    }\r\n`\r\n","\r\nimport {roundTo} from 'utilities/Format';\r\n\r\nexport const getSampleScore = () => {\r\n    let total = Math.round(Math.random()*10);\r\n    let score = Math.random()>0.5?total:Math.round(Math.random()*total);\r\n    let notes = [];\r\n    if(score < total){\r\n        notes.push(`sample note: you answered $$a=2*b$$ when the answer was $$a=3*b$$`);\r\n    }\r\n    return {total, score, notes};\r\n}\r\n// const SUBHEADING_COLOR = 'g3', HEADING_COLOR = 'g2', TEXT_COLOR = 'docText';\r\nconst GOOGLE_DOC_HEADING = 'docPrimary', GOOGLE_DOC_SUBHEADING  = 'docSecondary', GOOGLE_DOC_TEXT = 'docText', DOC_LINK = 'docTertiary';\r\nconst FONT_HEADING = 'Playfair-Display', FONT_TEXT = 'Roboto';\r\nconst SIZE_P = 16, SIZE_H1 = 48, SIZE_H2 = 36, SIZE_H3 = 24, SIZE_H4 = 18;\r\nconst WEIGHT_HEADING = 400, WEIGHT_TEXT = 200;\r\n//&quot;Roboto&quot\r\n//max-width:468px;\r\nexport const buildDocument = (game, data,  theme, title, isSample, fullColor, url) => {\r\n    let body = `<html><head><game content=\"text/html; charset=UTF-8\" http-equiv=\"content-type\"></head>\r\n    <body style=\"padding:72px 72px 72px 72px;font-family:${FONT_TEXT}\">`;\r\n        body +=  getText(`${title} Report`, 'h1', SIZE_H1, WEIGHT_HEADING, theme[GOOGLE_DOC_HEADING], 'center', FONT_HEADING);\r\n        body += getText(`This is an automatically generated performance report based on the owner of this document's \r\n        choices in the math game '${title}'. \r\n        It shows their question answers and scores given during the course of play.\r\n        '${title}' can be played <a href=\"${url}\" style=\"color:${theme[DOC_LINK]}\">here</a> at the Stimsims website`, 'p', SIZE_P, WEIGHT_TEXT, theme[GOOGLE_DOC_TEXT], 'center', null, null);\r\n        //body += getText(`'${title}' can be played <a href=\"${url}\" style=\"color:${theme[DOC_LINK]}\">here</a> at the Stimsims website`, 'p', SIZE_P, WEIGHT_TEXT, theme[GOOGLE_DOC_TEXT], 'center', null, null);\r\n        body += `<div style=\"color:white;margin:5px;\">IIIIIIIIIIIIIIIIIIIII</div>`;\r\n        //, please use the free math rendering Google Docs tool\r\n        body +=  getText(`How to View the Math Equations`, 'h3', SIZE_H3, WEIGHT_HEADING, theme[GOOGLE_DOC_TEXT], 'center', FONT_HEADING);\r\n        body += getText(`(for desktop users only, this may work on mobiles in the future) To view the math equations, please use the free Google documents tool (doesn't work on phones) \r\n        ${getLink('Auto-Latex', 'https://chrome.google.com/webstore/detail/auto-latex-equations/iaainhiejkciadlhlodaajgbffkebdog?utm_source=tex_stackoverflow_183358', SIZE_P, WEIGHT_TEXT, theme[DOC_LINK], 'center', theme)}.\r\n        Once installed, convert the equations by clicking Add-ons > Auto-Latex Equations > start > Render Equations`, 'p', SIZE_P, WEIGHT_TEXT, theme[GOOGLE_DOC_TEXT], 'left', null, null, theme);\r\n        body += `<div style=\"color:white;margin:20px;\">IIIIIIIIIIIIIIIIIIIII</div>`;\r\n   \r\n        body += `${getThinLine(theme)}`;\r\n        body += `${getText('Final Score', 'h2', SIZE_H1, WEIGHT_HEADING, theme.primaryD, 'center', FONT_HEADING)}`;\r\n        body += `${getText( `${roundTo(data.finalMark*100, 1)}%`, 'h2', 96, WEIGHT_HEADING, theme.primaryD, 'center', FONT_HEADING)}`;\r\n        body += `${getThinLine(theme)}`;\r\n        body += `${getSpace()}`;\r\n        body += `${getText('Real Questions', 'h2', SIZE_H2, WEIGHT_HEADING, theme[GOOGLE_DOC_HEADING], 'center', FONT_HEADING)}`;\r\n        body += `${getText('<a href=\"https://stimsims.com/blog/real-math-questions/\" target=\"_blank\">What are real questions?</a>', 'p', SIZE_P, WEIGHT_HEADING, theme[GOOGLE_DOC_TEXT], 'center', FONT_TEXT)}`;\r\n        body += `${getText('These questions score players on how closely they can model secret, randomized simulation values in the game. These questions contribute to the final score.', \r\n        'p', SIZE_P, WEIGHT_TEXT, theme[GOOGLE_DOC_TEXT], 'center', FONT_TEXT)}`;\r\n        body += renderAnswers(data.assessment, game.documentreal, theme);\r\n        body += `${getSpace()}`;\r\n        body += `${getText('Multiple Choice Questions', 'h2', SIZE_H2, WEIGHT_HEADING, theme[GOOGLE_DOC_HEADING], 'center', FONT_HEADING)}`;\r\n        body += `${getText('<a href=\"https://stimsims.com/blog/branching-math-game-tests/\" target=\"_blank\">Why are there unanswered questions?</a>', 'p', SIZE_P, WEIGHT_HEADING, theme[GOOGLE_DOC_TEXT], 'center', FONT_TEXT)}`;\r\n        body += `${getText(`There are a wide variety of multiple choice questions asked through the course of play. \r\n            Depending on the players choices, some may not be asked at all. These questions do not contribute to the final score.`, \r\n            'p', SIZE_P, WEIGHT_TEXT, theme[GOOGLE_DOC_TEXT], 'center', FONT_TEXT)}`;\r\n        body += renderAnswers(data.assessment, game.documentmcq, theme);\r\n        body += renderTime(data.playTime, theme);\r\n        //views = addViews('Linear Equations', documentCreateLinear, data, views);\r\n        body += `\r\n        </body></html>\r\n        `\r\n        return body;\r\n    }\r\nconst renderTime = (playTime, theme) => {\r\n    let text = '';\r\n    let start = 0, sum = 0;\r\n\r\n    text += `${getSpace()}`;\r\n    text += `${getText('Play Time', 'h3', SIZE_H3, WEIGHT_HEADING, theme[GOOGLE_DOC_HEADING], 'center', FONT_HEADING)}`;\r\n    playTime.map(pt => {\r\n        if(start === 0){\r\n            start = pt;\r\n        }else{\r\n            sum += (pt - start);\r\n            text += `${getText(`Played from ${new Date(start).toLocaleString()} to ${new Date(pt).toLocaleString()}`, \r\n                        'p', SIZE_P, WEIGHT_HEADING, 'black', 'center', FONT_HEADING)}`;\r\n            start = 0;\r\n        }\r\n    })\r\n    let minutes = sum/(60*1000);\r\n    let seconds = minutes - Math.floor(minutes);\r\n    seconds = Math.floor(seconds*60);\r\n    minutes = Math.floor(minutes);\r\n    text += `${getText(`Total Time (mm:ss): ${minutes}:${seconds}`, 'p', SIZE_P, WEIGHT_HEADING, 'black', 'center', FONT_HEADING)}`;\r\n    text += `${getSpace()}`;\r\n    text += `${getThinLine(theme)}`;\r\n    return text;\r\n}\r\n    const renderAnswers = (answers, document, theme) => {\r\n        let answer = null;\r\n        return `<div style=\"color:white;\">\r\n            ${document.map(d => {\r\n                answer = answers[d.id] || null;\r\n                if(answer){\r\n                    return `\r\n                    ${getScore(d.id, d.name, d.text, answer.score, answer.total, answer.notes, \r\n                        theme[GOOGLE_DOC_TEXT], theme[DOC_LINK], theme[GOOGLE_DOC_TEXT], theme)}\r\n                        ${getThinLine(theme)}\r\n                    `\r\n                }else{\r\n                    return `\r\n                        ${getText(`Question not asked during game`, 'p', SIZE_P, WEIGHT_TEXT, theme[GOOGLE_DOC_TEXT], 'center', FONT_TEXT)}\r\n                        ${getThinLine(theme)}\r\n                    `;\r\n                }\r\n                \r\n            })}\r\n        </div>`\r\n    }\r\n\r\n\r\nconst getText = (text, tag = 'p', fontSize = '14', fontWeight = WEIGHT_TEXT, color = theme[GOOGLE_DOC_TEXT], textAlign = 'left', fontFamily = 'roboto') => {\r\n   let t = `<${tag} style=\"font-family:${fontFamily};font-weight:${fontWeight};display:inline;padding:0px;margin:0px;color:${color};font-size:${fontSize}px;text-align:${textAlign}\">\r\n               ${text}\r\n           </${tag}>`\r\n   return t;\r\n}\r\nconst getLink = (text, href, fontSize = '14', fontWeight = WEIGHT_HEADING, color = 'black', textAlign = 'left', theme) => {\r\n   return `<a href=\"${href}\" style=\"display:inline;font-weight:${fontWeight};text-align:${textAlign};padding:0;margin:auto;color:${color};font-size:${fontSize}px;\">${text}</a>`\r\n}\r\nconst getSpace = () => {\r\n    return  `<div style=\"color:white;margin:10px;\">IIIIIIIIIIIIIIIIIIIII</div>`;\r\n}\r\nconst getThinLine = (theme) => {\r\n    ///return `<hr style=\"stroke:5px;height:3px;background-color:red;color:cyan;\" />`\r\n    return `<p style=\"color:${theme[GOOGLE_DOC_TEXT]};font-size:24px;font-weight:${WEIGHT_HEADING};text-align:center;\" >------------</p>`\r\n}\r\nconst getThickLine = (theme) => {\r\n    return `<hr style=\"border:5px solid red;height:5px;background-color:red;color:cyan;\" />`\r\n}\r\nconst getScore = (id, name, text, score = 0, total = 0, notes, color, highlight, background, theme) => {\r\n        let fontSize = 8;\r\n        let qtext = getText(`${text}`, 'h4', SIZE_H4, WEIGHT_HEADING, theme[GOOGLE_DOC_SUBHEADING],'center', FONT_HEADING)\r\n        let scoreName = getText(`${roundTo((score/total)*100)}% on ${total} question${total > 1?'s':''}`, \r\n        'h4', SIZE_H4, WEIGHT_TEXT, theme[GOOGLE_DOC_TEXT],'center', FONT_TEXT);\r\n        //Build Score Bar View\r\n        let ratio = score / total\r\n        let filler = ratio<=0?2:ratio >=1?1:0; //minor adjustments\r\n        let charCount = Math.ceil(fontSize*32) + filler;\r\n        let filledCount = Math.floor(ratio*charCount);\r\n        let filled = '';\r\n        let empty = '';\r\n        \r\n        for(let i = 0; i<=charCount; i++){\r\n            if(i<=filledCount){\r\n                filled += 'i';\r\n            }else{\r\n                empty += 'i';\r\n            }\r\n        }\r\n        return `<div>\r\n        ${qtext}\r\n        ${scoreName}\r\n        ${notes && notes.length > 0?`<div>\r\n            ${getText(notes.map((e, i) => {\r\n                if(e && e.text){\r\n                    return getText(e.text, 'span', SIZE_P, WEIGHT_TEXT, theme[GOOGLE_DOC_TEXT],'left', FONT_TEXT);\r\n                    //return e.text;\r\n                }else if(e && e.latex){\r\n                    return getText(`$$${e.latex}$$`, 'span', 15, WEIGHT_TEXT, theme[GOOGLE_DOC_TEXT],'left', FONT_TEXT);\r\n                    //return `$$${e.latex}$$`;\r\n                }else if(e && e.space){\r\n                    return '';\r\n                }else if(e && e.divide){\r\n                    return getThinLine(theme);\r\n                }else if(e){\r\n                    return getText(e, 'span', SIZE_P, WEIGHT_TEXT, theme[GOOGLE_DOC_TEXT],'left', FONT_TEXT);\r\n                }else{\r\n                    return '';\r\n                }\r\n            }).join(' '),  'p', SIZE_P, WEIGHT_TEXT, theme[GOOGLE_DOC_TEXT],'left', FONT_TEXT)}\r\n        </div>`:''}\r\n        </div>\r\n        `;\r\n    //}\r\n}\r\n\r\n\r\n"],"sourceRoot":""}