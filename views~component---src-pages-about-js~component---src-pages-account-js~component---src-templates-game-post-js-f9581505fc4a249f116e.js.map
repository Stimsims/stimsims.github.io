{"version":3,"sources":["webpack:///./src/mycomponents/views/SEO/Meta/Meta.js"],"names":["Meta","props","query","render","title","site","siteMetadata","description","iconAlt","img","getHost","card","type","meta","url","getFullUrl","name","content","property","date","tags","map","t","key","style","position","opacity","height","overflow","children","displayName"],"mappings":"qKAKMA,EAAO,SAACC,GACN,OACI,kBAAC,cAAD,CACIC,MAAK,aAgBLC,OAAS,SAAAD,GACL,IAAIE,EAAQH,EAAMG,MAAOH,EAAMG,MAAMF,EAAMG,KAAKC,aAAaF,MACzDG,EAAcN,EAAMM,YAAYN,EAAMM,YAAYL,EAAMG,KAAKC,aAAaC,YAC1EC,EAAUP,EAAMM,YAAaN,EAAMM,YAAYL,EAAMG,KAAKC,aAAaE,QAEvEC,EAAMR,EAAMQ,IAAIR,EAAMQ,IAAOC,oBAAvB,qBACNC,EAAOV,EAAMQ,IAAI,sBAAsB,UACvCG,EAAOX,EAAMY,KAAMZ,EAAMY,KAAKD,KAAK,UACnCE,EAAMC,uBACV,OAAO,6BACH,kBAAC,IAAD,KAII,0BAAMC,KAAK,cAAcC,QAASV,IAClC,0BAAMW,SAAS,sBAAsBD,QAASV,IAC9C,0BAAMW,SAAS,iBAAiBD,QAASV,IAEzC,0BAAMW,SAAS,WAAWD,QAASR,IACnC,0BAAMS,SAAS,QAAQD,QAASR,IAEhC,0BAAMO,KAAK,eAAeC,QAASN,IACnC,0BAAMK,KAAK,eAAeC,QAAQ,cAClC,0BAAMD,KAAK,kBAAkBC,QAAQ,iBACrC,0BAAMD,KAAK,qBAAqBC,QAAQ,wBACxC,0BAAMD,KAAK,gBAAgBC,QAASb,IAEnCK,GAAO,0BAAMO,KAAK,gBAAgBC,QAASR,IAC3CD,GAAW,0BAAMQ,KAAK,oBAAoBC,QAAST,IACpD,0BAAMU,SAAS,WAAWD,QAASb,IAElCQ,GAAQ,0BAAMM,SAAS,UAAUD,QAASL,IAC3C,0BAAMM,SAAS,SAASD,QAASH,IAEjC,0BAAMI,SAAS,eAAeD,QAASf,EAAMG,KAAKC,aAAaF,QAC9DH,EAAMkB,MAAQ,0BAAMD,SAAS,4BAA4BD,QAAShB,EAAMkB,OACxElB,EAAMmB,MAAQnB,EAAMmB,KAAKC,KAAI,SAAAC,GAC1B,OAAO,0BAAMC,IAAKD,EAAGJ,SAAS,iBAAiBD,QAASK,QAIhE,yBAAKE,MAAO,CAACC,SAAU,WAAYC,QAAS,EAAGC,OAAQ,OAAQC,SAAU,WACrE,2BAAIrB,GACHN,EAAM4B,YA5DvB,UAmEZ7B,EAAK8B,YAAY,OAEF9B","file":"views~component---src-pages-about-js~component---src-pages-account-js~component---src-templates-game-post-js-f9581505fc4a249f116e.js","sourcesContent":["import React from 'react';\r\nimport {Helmet} from 'react-helmet';\r\nimport { StaticQuery, graphql } from \"gatsby\";\r\nimport {getFullUrl, getUrl, getHost} from 'utilities/Format';\r\n\r\nconst Meta = (props) => {\r\n        return (\r\n            <StaticQuery\r\n                query={graphql`\r\n                query MetaQuery {\r\n                    site {\r\n                        siteMetadata {\r\n                           ...siteDataFragment\r\n                        }\r\n                    }\r\n                    headerImage: file(relativePath: { regex: \"/favicon/\" }) {\r\n                        childImageSharp{\r\n                          fixed(width: 512, height: 512) {\r\n                              ...GatsbyImageSharpFixed\r\n                          }\r\n                        }\r\n                      }\r\n                }\r\n                `}\r\n                render={ query => {\r\n                    let title = props.title? props.title:query.site.siteMetadata.title;\r\n                    let description = props.description?props.description:query.site.siteMetadata.description;\r\n                    let iconAlt = props.description? props.description:query.site.siteMetadata.iconAlt;\r\n                    //if an image is passed in, it will be a large one\r\n                    let img = props.img?props.img:`${getHost()}/stimsims-icon.png`;\r\n                    let card = props.img?'summary_large_image':\"summary\"; //odds are it'll be a landscape\r\n                    let type = props.meta? props.meta.type:'website';\r\n                    let url = getFullUrl();\r\n                    return <div>\r\n                        <Helmet>\r\n                                {/* <meta property=\"og:image\" \r\n                            content='https://thumbor.forbes.com/thumbor/960x0/https%3A%2F%2Fblogs-images.forbes.com%2Ferikkain%2Ffiles%2F2018%2F01%2Fmario.jpg' />\r\n                            <meta property=\"description\" content='mario test description' /> */}\r\n                            <meta name=\"description\" content={description} />\r\n                            <meta property=\"twitter:description\" content={description} />\r\n                            <meta property=\"og:description\" content={description} />\r\n\r\n                            <meta property=\"og:image\" content={img} />\r\n                            <meta property=\"image\" content={img} />\r\n\r\n                            <meta name=\"twitter:card\" content={card} />\r\n                            <meta name=\"twitter:site\" content=\"@stimsims\" />\r\n                            <meta name=\"twitter:creator\" content=\"@vcb20860594\" />\r\n                            <meta name=\"twitter:creator:id\" content=\"1178559874868736006\" />\r\n                            <meta name=\"twitter:title\" content={title} />\r\n                    \r\n                            {img && <meta name=\"twitter:image\" content={img} />}\r\n                            {iconAlt && <meta name=\"twitter:image:alt\" content={iconAlt} />}\r\n                            <meta property=\"og:title\" content={title} />\r\n                        \r\n                            {type && <meta property=\"og:type\" content={type} />}\r\n                            <meta property=\"og:url\" content={url} />\r\n                \r\n                            <meta property=\"og:site_name\" content={query.site.siteMetadata.title} />\r\n                            {props.date && <meta property=\"og:article:published_time\" content={props.date} />}\r\n                            {props.tags && props.tags.map(t => {\r\n                                return <meta key={t} property=\"og:article:tag\" content={t} />\r\n                            })}\r\n                        </Helmet>\r\n                        \r\n                        <div style={{position: 'absolute', opacity: 0, height: '50px', overflow: 'hidden'}}>\r\n                            <p>{description}</p>\r\n                            {props.children}\r\n                        </div>\r\n                    </div>\r\n                }}\r\n            />\r\n        )\r\n}\r\nMeta.displayName=\"Meta\"\r\n\r\nexport default Meta;"],"sourceRoot":""}