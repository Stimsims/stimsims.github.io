{"version":3,"sources":["webpack:///./src/utilities/Time.js","webpack:///./src/utilities/Views.js"],"names":["gameDate","getTimeString","date","Date","toDateString","Error","getMathLogViews","mathlog","haveText","haveDivider","glow","className","onInput","views","Array","isArray","map","e","i","push","divide","text","t","ti","key","latex","nudgeDown","dontNudge","equation","index"],"mappings":"wJAIIA,EAAW,KAkCR,SAASC,EAAcC,GAC1B,GAAGA,EAGC,OAFS,IAAIC,KAAKD,GACLE,eAGb,IAAIJ,EAAU,MAAMK,MAAM,2DAC1B,OAAOL,EAASI,iB,4FC3CXE,EAAkB,SAACC,EAASC,EAAUC,EAAaC,EAAMC,EAAWC,GAE7E,IAAIC,EAAQ,GACZ,OAAIN,GACAO,MAAMC,QAAQR,KAAUA,EAAU,CAACA,IAEvCA,EAAQS,KAAI,SAACC,EAAGC,GAGTT,GAAaI,EAAMM,KAAK,CAACC,QAAQ,IACjCH,EAAEI,MAAQb,IACNM,MAAMC,QAAQE,EAAEI,MACfJ,EAAEI,KAAKL,KAAI,SAACM,EAAGC,GACXV,EAAMM,KAAN,eAAYK,IAAQN,EAAL,IAAUK,EAAV,SAAwBD,EAAEG,MAAF,eAASC,WAAU,EAAMC,WAAW,GAASL,GAA7C,iBAAoDA,QAG/FT,EAAMM,KAAN,eAAYK,IAAQN,EAAL,SAAkBD,KAMtCA,EAAEW,UACDf,EAAMM,KAAN,eAAYK,IAAQN,EAAL,MAAaW,MAAOX,EAAGR,KAAMA,IAAOQ,EAAcQ,WAAW,EAAMd,UAC1Ee,WAAW,GAASV,EAAEW,SAD9B,CACwCjB,UAAU,SAAUA,QAG7DE,GAxBa","file":"63-9f34035e453a88e4923f.js","sourcesContent":["//new Date(year, monthIndex [, day [, hours [, minutes [, seconds [, milliseconds]]]]]);\r\nimport {log} from './Measure.js';\r\n\r\nvar gameTime = {year: 0, month: 0, day: 0, hour: 0, min: 0};\r\nvar gameDate = null;\r\n\r\nexport const setTime = (timeObj) => {\r\n    //toDateString() => Sun, Jul 11 1999\r\n    gameTime = {...gameTime, ...timeObj};\r\n    gameDate = new Date(gameTime.year, gameTime.month, gameTime.day, gameTime.hour);\r\n} \r\n\r\n\r\n/**\r\n * Adds time to a date. Modelled after MySQL DATE_ADD function.\r\n * Example: dateAdd(new Date(), 'minute', 30)  //returns 30 minutes from now.\r\n * https://stackoverflow.com/a/1214753/18511\r\n * \r\n * @param date  Date to start with\r\n * @param interval  One of: year, quarter, month, week, day, hour, minute, second\r\n * @param units  Number of units of the given interval to add.\r\n */\r\nexport function addTime(interval = 'day', units = 0) {\r\n    switch(interval) {\r\n      case 'year'   :  gameTime.year += units; break;\r\n      case 'month'  :  gameTime.month += units; break;\r\n      case 'day'    :  gameTime.day += units; break;\r\n      case 'hour'   :  gameTime.hour += units;  break;\r\n      case 'min'   :   gameTime.min += units;  break;\r\n    }\r\n    gameDate = new Date(gameTime.year, gameTime.month, gameTime.day, gameTime.hour);\r\n}\r\n\r\nexport function getTime(){\r\n    if(!gameDate) throw Error(`Time.js getTime gameDate has not been initialized`);\r\n    return gameDate.getTime();\r\n}\r\n\r\nexport function getTimeString(date){\r\n    if(date){\r\n        let da = new Date(date);\r\n        let st =  da.toDateString();\r\n        return st;\r\n    }else{\r\n        if(!gameDate) throw Error(`Time.js getTimeString gameDate has not been initialized`);\r\n        return gameDate.toDateString();\r\n    }\r\n\r\n}\r\n\r\nexport const getCurrentTime = () => {\r\n    return new Date().getTime();\r\n}\r\n\r\n// module.exports = {\r\n//     setTime, addTime, getTime, getTimeString\r\n// }","import {log} from './Measure.js';\r\n\r\nexport const getMathLogViews = (mathlog, haveText, haveDivider, glow, className, onInput) => {\r\n   // debugger;\r\n    let views = [];\r\n    if(!mathlog) return null;\r\n    if(!Array.isArray(mathlog)) mathlog = [mathlog];\r\n\r\n    mathlog.map((e, i) => {\r\n      //  if(haveDivider) views.push({divide: true})\r\n\r\n        if(haveDivider) views.push({divide: true})\r\n        if(e.text && haveText){\r\n            if(Array.isArray(e.text)){\r\n                e.text.map((t, ti) => {\r\n                    views.push({key: `${i}-${ti}-text`, ...t.latex?{nudgeDown:true, dontNudge: true, ...t}:{...t}})\r\n                })\r\n            }else{\r\n                views.push({key: `${i}-text`, ...e});\r\n            }\r\n           \r\n        }\r\n\r\n\r\n        if(e.equation){\r\n            views.push({key: `${i}-eq`, index: i, glow: glow===i?true:false, nudgeDown: true, onInput,\r\n                    dontNudge: true, ...e.equation, className: `block ${className}`});\r\n        }\r\n    });\r\n    return views;\r\n}\r\n\r\n\r\n"],"sourceRoot":""}