{"version":3,"sources":["webpack:///./node_modules/nerdamer/nerdamer.core.js"],"names":["bigInt","nerdamer","imports","_","Parser","bigDec","set","precision","Groups","PRIMES","CUSTOM_OPERATORS","Settings","init_primes","exclude","suppress_errors","PARSE2NUMBER","SAFE","IMAGINARY","FUNCTION_MODULES","Math","ALLOW_CHARS","USE_MULTICHARACTER_VARS","POWER_OPERATOR","VALIDATION_REGEX","ALIASES","POSITIVE_MULTIPLIERS","CACHE","SILENCE_WARNINGS","PRECISION","VECTOR","PARENTHESIS","SQRT","ABS","FACTORIAL","DOUBLEFACTORIAL","LONG_PI","LONG_E","PI","E","LOG","LOG10","LOG10_LATEX","MAX_EXP","roots","i","j","nthpow","pow","N","P","S","EX","FN","PL","CB","CP","CONST_HASH","EXPRESSIONS","VARS","RESERVED","WARNINGS","err","msg","ErrorObj","Error","customError","name","message","this","undefined","error","stack","prototype","Object","create","isReserved","value","indexOf","allSame","arr","last","l","length","equals","warn","push","SHOW_WARNINGS","console","validateName","typ","test","InvalidVariableNameError","scientificToDecimal","num","nsign","sign","abs","parts","String","toLowerCase","split","e","pop","coeff_array","slice","zero","Array","join","dec","isPrime","n","q","floor","sqrt","isNumber","_isFraction","isSymbol","multiplier","toDecimal","obj","Symbol","isExpression","Expression","_variables","poly","vars","c","add","isNaN","group","prevgroup","previousGroup","power","x","symbols","firstObject","args","sort","isVector","Vector","isMatrix","Matrix","isSet","Set","isNumericSymbol","symbol","isArray","isInt","toString","isNegative","lessThan","stringify","o","inBrackets","str","format","call","arguments","shift","new_str","replace","match","index","arg","keys","key","both","setFunction","params_array","body","parse","functions","mapped_function","params","arrayMin","min","apply","decompose_fn","fn","wrt","as_obj","ax","a","b","t","expand","clone","stripVar","subtract","divide","nround","s","Number","MAX_VALUE","round","each","hasOwnProperty","even","evenFraction","arrayUnique","item","removeDuplicates","condition","conditionType","seen","temp","reserveNames","_remove","indexOrKey","result","splice","block","setting","f","opt","current_setting","retval","arguments2Array","evaluate","generatePrimes","upto","allNumbers","allConstants","isPi","isE","isConstant","DivisionByZero","ParseError","UndefinedError","MaximumIterationsReached","NerdamerTypeError","ParityError","OperatorError","OutOfRangeError","DimensionError","ValueLimitExceededError","NerdamerValueError","SolveError","exceptions","Big","cos","sin","Math2","csc","sec","cot","tan","acsc","asin","asec","acos","acot","atan","erf","exp","diff","h","median","_len","values","_key","half","fromContinued","contd","fractions","whole","continuedFraction","w","absn","ni","done","EPSILON","idx","bigpow","p","Frac","isInteger","den","nthroot","gamma","z","C","g","bigfactorial","times","bigLog","quick","k","r","invert","multiply","factorial","is_int","NaN","dfactorial","GCD","map","QGCD","gcd","negate","LCM","factor","ifactors","ifactor","factors","updateHash","sfactor","prime","lt","rho","xf","cz","mod","minus","sm","boxfactor","max","d","safety","fib","y","integer_part","simpson","step","get_value","side","v","dx","xi","num_integrate","tol","maxdepth","state","maxDepthCount","nanEncountered","fa","fm","fb","adsimp","V0","depth","f1","f2","sl","sr","s2","m","V1","V2","integrate","Ci","sum","n2","log","Si","Ei","Infinity","Shi","Chi","cosh","Li","gamma_incomplete","rect","sinc","tri","A","dk","dk0","d0","xk","powb","dk_dec","gte","xn","ld","same_delta","delta","decimal","_text","option","useGroup","decp","asHash","wrapCondition","asDecimal","valueOf","frac","exec","negative","quotient","digits","passed","numer","denom","divmod","remainder","operator","om","collectSymbols","txt","pg","pwg","fname","isComposite","charAt","cv","parens","elements","text","Scientific","startsWith","substr","isScientific","fromScientific","convert","simple","Fraction","isInfinity","imaginary","bin","preprocessors","names","actions","Slice","upper","lower","start","end","Collection","Token","node","node_type","column","type","OPERATOR","operators","FUNCTION","precedence","MAX_PRECEDENCE","leftAssoc","append","getItems","pretty_print","collection","is_prefix","VARIABLE_OR_LITERAL","UNIT","KEYWORD","classes","complex","prec","re","im","sinh","removeDen","sq","fromArray","_sqrt","_log","tanh","sech","csch","coth","acosh","asinh","atanh","asech","acsch","acoth","realpart","imagpart","hyp","atan2","greaterThan","symfunction","trig","isImaginary","getQuadrant","isLinear","trigh","infinity","units","action","prefix","postfix","operation","overloaded","overloadAction","overloadLeftAssoc","vectorFn","brackets","id","is_open","is_close","maps_to","SYMBOLIC_MIN_MAX","symMinMax","_symbol","cf","sigfigs","scientific","pfactor","identity","mat","determinant","cols","rows","transpose","vec1","vec2","dot","cross","vector","tolerance","matrix","M","col_index","col","rationalize","l2","conjugate","theta","toPolarFormArray","original","getDenom","getNum","getval","aval","bval","set1","set2","union","contains","intersection","difference","intersects","is_subset","ostr","override","which","with_what","restore","what","extend","force_call","fn_name","callfunction","allowed_args","fn_settings","num_allowed_args","is_array","min_args","max_args","num_args","error_msg","numericArgs","USE_BIG","fmodules","fmodule","findFunction","bigConvert","operator_filter_regex","filter","RegExp","setOperator","postif","getOperator","aliasOperator","getOperators","getBrackets","Node","token","left","right","initConstants","CONSTANTS","peekers","pre_operator","post_operator","pre_function","post_function","callPeekers","tokenize","trim","regex","L","lpos","tokens","scopes","target","open_brackets","has_space","addScope","scope_type","new_scope","goUp","get_operator_str","start_at","substring","chunkify","operator_str","_operators","ch","add_token","at","add_function","set_last_position","position","last_token_is_numeric","bracket","pair","prev","nxt","is_operator","toRPN","output","prefixes","collapse","destination","next","previous","next_is_operator","last_on_stack","parseRPN","rpn","substitutions","pi","Q","is_comma","fromSet","ans","parent","fn_args","ret","getter","il","element","subbed","isUnit","toHTML","indent","tab","repeat","html","tree","location","group1","group2","first","before","g1","g2","prepare_expression","toObject","expression_string","objectify","isConversion","chunkAtCommas","chunks","rem_brackets","ms","distributeMultiplier","toUnitMultiplier","V","symbol1","symbol2","retnum","retden","is_negative","img","setPower","qa","tw","nn","unwrapPARENS","toLinear","rem","isOne","asbig","numVal","base","log_sym","log_base","img_part","sIsConstant","toExponential","isFinite","pn","sym","hascomposites","sp","sub","composites","non_composites","isDenom","prod","finalResult","testSQRT","absEquals","testPow","fct","primeFactors","toTeX","expression_or_obj","TeX","cdot","nobj","LaTeX","braces","expr","argSplit","latex","clean","new_num","new_den","getFunction","addPreprocessor","order","shift_cells","PreprocessorError","getPreprocessors","removePreprocessor","subs","aIsSymbol","bIsSymbol","unit","Unit","aneg","bneg","inf","ap","bp","h1","h2","powEQ","v1","v2","aIsComposite","bIsComposite","PN","PNEQ","valEQ","attach","insert","shell","canIterate","bothPL","bIsMatrix","eachElement","row","dimensions","toFixed","bnum","bden","a_pow","ONN","u","gt","_a","_b","distributeExponent","combine","bm","p1","p2","isSymbolP1","isSymbolP2","toEX","logV","n1","ndiv","ddiv","ps","isMatrixB","isMatrixA","isVectorA","isVectorB","aIsZero","bIsZero","nre","nim","bIsConstant","aIsConstant","bIsInt","multiplyPower","sgn","aa","a1","b1","c1","neg_num","nr","tn","evenr","evenp","evennp","_result","isEX","pt","IGNORE_E","comma","percent","assign","function_assign","bool2Symbol","eq","lte","log10","LOG10E","trunc","ceil","getExpression","expression_number","asType","expression","text_","first_arg","buildFunction","Build","build","variables","isFraction","isPolynomial","isPoly","for_symbol","otype","callback","numerator","denominator","hasFunction","containsFunction","variable","coeff","exponent","removeLeadingZeroes","removeTrailingZeroes","dot_location","zeroes","leadingZeroes","copy","rounded","next_two","ed","is_neg","isFrac","m_dc","simplify","neg","narr","unshift","qcompare","isnegative","lcm","div","unwrapSQRT","all","isSimple","powSimp","powers","mfactors","out_","in_","xt","multivariate","exclude_x","toArray","hasFunc","fn_group","same_pow","a_is_unit_multiplier","find","needle","nargs","isMonomial","isSQRT","check_all","check_symbols","retainSign","isSymbolic","isInverse","properties","keepSign","deep","power_only","is_one","cp","isImgSymbol","keyForGroup","existing","hash","contents","is_parens","sort_fn","expand_symbol","collected","concat","isCombination","opts","qc","quickConversion","fullConversion","parseInt","d1","d2","parser","keep","space","LaTeXArray","rowTeX","m_array","v_array","formatFrac","p_array","greek","alpha","beta","epsilon","zeta","eta","iota","kappa","lambda","mu","nu","omnikron","sigma","tau","upsilon","phi","chi","psi","omega","Gamma","Delta","Epsilon","Theta","Lambda","Xi","Pi","Sigma","Phi","Psi","Omega","arccos","ker","limsup","arcsin","deg","lg","ln","Pr","sup","arctan","det","hom","lim","LN","dim","liminf","inverted","t_varray","input","den_map","num_map","num_c","den_c","setBrackets","container","counter","laTex","combine_power","isBracketed","formatP","tp","merge","mn","md","vn","vd","top","bottom","glue","is_pow","square","brace","angle","filterTokens","filtered","raw_tokens","parse_next","get","items","lw","rl","el","arrayPrefill","val","custom","modulus","eql","toUnitVector","angleFrom","mod1","mod2","product","theta_val","isParallelTo","isAntiparallelTo","isPerpendicularTo","B","magnitude","tex","F","zeroMatrix","raw_values","raw","nc","isSquare","toRightTriangular","isSingular","augment","np","els","divisor","new_element","ki","imatrix","kp","inverse_elements","nel","nj","canMultiplyFromLeft","sameSize","MM","kj","toVector","newline","to_decimal","row_tex","_union","remove","_intersection","dependencies","_rename","reformat","deps","getProperName","continued_fraction","compileDependencies","dep_string","replacements","components","getArgsDeps","arg_array","supplements","f_array","ftext","xports","ftext_complex","cc","ft","ftext_function","bn","alias","Function","LOG_FNS","Utils","allNumeric","arrayAddSlices","slices","arrayClone","new_array","arrayMax","arraySum","clearU","indx","comboSort","combined","na","nb","compare","sym1","sym2","comparison","scope","random","convertToVector","customType","fillHoles","getCoeffs","coeffs","term","getU","importFunctions","isVariableSymbol","nroots","_roots","root","range","sameSign","separate","stringReplace","from","to","with_str","groups","PARSER","libExports","fndec","multi_options","convertToLaTeX","convertFromLaTeX","version","add_on","getWarnings","setConstant","constant","getConstant","getCore","getEquation","reserved","asArray","clear","equation_number","keep_EXPRESSIONS_fixed","flush","expressions","asObject","asLaTeX","register","core","parent_obj","visible","numargs","validVarName","varname","supported","numEquations","numExpressions","setVar","getVar","clearVars","load","loader","getVars","api","linker","replaceFunction","new_num_args","withOperator","htmlTree","addPeeker","removePeeker","BASE","MAX_INT","MAX_INT_ARR","smallToArray","LOG_MAX_INT","Integer","radix","parseValue","parseBase","BigInteger","isSmall","SmallInteger","isPrecise","arrayToSmall","compareAbs","createArray","truncate","l_a","l_b","carry","addAny","addSmall","a_l","b_l","borrow","subtractSmall","multiplyLong","a_i","multiplySmall","shiftLeft","multiplySmallAndArray","divModSmall","divModAny","self","quotientDigit","divisorMostSignificantDigit","divMod1","guess","xlen","highx","highy","check","part","reverse","divMod2","qSign","mSign","isBasicPrime","isEven","isDivisibleBy","lesser","millerRabinTest","nPrev","modPow","plus","subtractAny","small","l1","multiplyKaratsuba","ac","bd","abcd","_multiplyBySmall","over","isZero","isPositive","isOdd","compareTo","notEquals","neq","greater","greaterOrEquals","geq","lesserOrEquals","leq","strict","bits","bitLength","logN","isProbablePrime","iterations","randBetween","modInv","lastT","lastR","newT","one","newR","powersOfTwo","powers2Length","highestPower2","shift_isSmall","bitwise","xSign","ySign","xRem","not","yRem","xDigit","yDigit","xDivMod","yDivMod","toJSNumber","roughLOB","shiftRight","remQuo","and","or","xor","integerLogarithm","tmp","absBase","charCodeAt","charCode","parseBaseFromArray","digit","toBase","out","toBaseString","parseStringValue","decimalPlace","parseNumberValue","toJSON","minusOne","isInstance","low","restricted","module","exports","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","O","D","absoluteValue","constructor","comparedTo","cmp","cosine","sd","W","J","cubeRoot","cbrt","Z","decimalPlaces","dp","dividedBy","dividedToIntegerBy","divToInt","greaterThanOrEqualTo","hyperbolicCosine","hyperbolicSine","hyperbolicTangent","inverseCosine","isNeg","inverseHyperbolicCosine","inverseHyperbolicSine","inverseHyperbolicTangent","inverseSine","inverseTangent","isPos","lessThanOrEqualTo","logarithm","U","naturalExponential","H","naturalLogarithm","negated","sine","squareRoot","tangent","mul","toBinary","toDecimalPlaces","toDP","R","toFraction","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","T","LN10","toPrecision","toSignificantDigits","toSD","truncated","G","I","search","$","K","X","Y","en","rn","sn","on","un","cn","defaults","getRandomValues","randomBytes","hn","an","dn","gn","wn","Nn","En","Mn","yn","qn","Uint32Array","On","Fn","An","Dn","Zn","Pn","Rn","Ln","Un","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","isDecimal","hypot","log2","Decimal"],"mappings":"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","file":"88347bea-e527ebd8082d35ee868d.js","sourcesContent":["require(\"core-js/modules/es6.typed.uint32-array\");\n\nrequire(\"core-js/modules/es6.regexp.search\");\n\nrequire(\"core-js/modules/es6.date.to-json\");\n\nrequire(\"core-js/modules/es6.string.repeat\");\n\nrequire(\"core-js/modules/es6.string.trim\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.array.filter\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nrequire(\"core-js/modules/es6.string.sub\");\n\nrequire(\"core-js/modules/es6.math.trunc\");\n\nrequire(\"core-js/modules/es6.math.log10\");\n\nrequire(\"core-js/modules/es6.math.atanh\");\n\nrequire(\"core-js/modules/es6.math.acosh\");\n\nrequire(\"core-js/modules/es6.math.asinh\");\n\nrequire(\"core-js/modules/es6.math.tanh\");\n\nrequire(\"core-js/modules/es6.math.sinh\");\n\nrequire(\"core-js/modules/es6.math.cosh\");\n\nrequire(\"core-js/modules/es6.number.epsilon\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.date.to-string\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.array.is-array\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.array.sort\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.math.sign\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.object.create\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\n/*\r\n * Author : Martin Donk\r\n * Website : http://www.nerdamer.com\r\n * Email : martin.r.donk@gmail.com\r\n * Source : https://github.com/jiggzson/nerdamer\r\n */\n\n/* global trig, trigh, Infinity, define, arguments2Array, NaN */\n//externals ====================================================================\n\n/* BigInterger.js v1.6.40 https://github.com/peterolson/BigInteger.js/blob/master/LICENSE */\n//var nerdamerBigInt = typeof nerdamerBigInt !== 'undefined' ? nerdamerBigInt : require(\"big-integer\");\n\n/* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\n//var nerdamerBigDecimal = typeof nerdamerBigDecimal !== 'undefined' ? nerdamerBigDecimal : require('big.js');\nvar nerdamer = function (imports) {\n  \"use strict\"; //version ====================================================================== \n\n  var version = '1.1.4'; //inits ========================================================================\n\n  var _ = new Parser(); //nerdamer's parser\n  //import bigInt\n\n\n  var bigInt = imports.bigInt;\n  var bigDec = imports.bigDec; //set the precision to js precision\n\n  bigDec.set({\n    precision: 250\n  });\n  var Groups = {}; //container of pregenerated primes\n\n  var PRIMES = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, 1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609, 1613, 1619, 1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, 1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931, 1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999, 2003, 2011, 2017, 2027, 2029, 2039, 2053, 2063, 2069, 2081, 2083]; //Settings ===================================================================== \n\n  var CUSTOM_OPERATORS = {};\n  var Settings = {\n    //the max number up to which to cache primes. Making this too high causes performance issues\n    init_primes: 1000,\n    exclude: [],\n    //If you don't care about division by zero for example then this can be set to true. \n    //Has some nasty side effects so choose carefully.\n    suppress_errors: false,\n    //the global used to invoke the libary to parse to a number. Normally cos(9) for example returns\n    //cos(9) for convenience but parse to number will always try to return a number if set to true. \n    PARSE2NUMBER: false,\n    //this flag forces the a clone to be returned when add, subtract, etc... is called\n    SAFE: false,\n    //the symbol to use for imaginary symbols\n    IMAGINARY: 'i',\n    //the modules used to link numeric function holders\n    FUNCTION_MODULES: [Math],\n    //Allow certain characters\n    ALLOW_CHARS: ['π'],\n    //Allow nerdamer to convert multi-character variables\n    USE_MULTICHARACTER_VARS: true,\n    //Allow changing of power operator\n    POWER_OPERATOR: '^',\n    //The variable validation regex\n    //VALIDATION_REGEX: /^[a-z_][a-z\\d\\_]*$/i\n    VALIDATION_REGEX: /^[a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ∞][0-9a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]*$/i,\n    //Aliases\n    ALIASES: {\n      'π': 'pi',\n      '∞': 'Infinity'\n    },\n    POSITIVE_MULTIPLIERS: false,\n    //Cached items\n    CACHE: {},\n    //Print out warnings or not\n    SILENCE_WARNINGS: false,\n    //Precision\n    PRECISION: 80,\n    //function mappings\n    VECTOR: 'vector',\n    PARENTHESIS: 'parens',\n    SQRT: 'sqrt',\n    ABS: 'abs',\n    FACTORIAL: 'factorial',\n    DOUBLEFACTORIAL: 'dfactorial',\n    //reference pi and e\n    LONG_PI: '3.14159265358979323846264338327950288419716939937510582097494459230781640628620899862803482534211706798214' + '808651328230664709384460955058223172535940812848111745028410270193852110555964462294895493038196',\n    LONG_E: '2.718281828459045235360287471352662497757247093699959574966967627724076630353547594571382178525166427427466' + '39193200305992181741359662904357290033429526059563073813232862794349076323382988075319525101901',\n    PI: Math.PI,\n    E: Math.E,\n    LOG: 'log',\n    LOG10: 'log10',\n    LOG10_LATEX: 'log_{10}',\n    MAX_EXP: 200000\n  };\n\n  (function () {\n    Settings.CACHE.roots = {};\n    var x = 40,\n        y = 40;\n\n    for (var i = 2; i <= x; i++) {\n      for (var j = 2; j <= y; j++) {\n        var nthpow = bigInt(i).pow(j);\n        Settings.CACHE.roots[nthpow + '-' + j] = i;\n      }\n    }\n  })(); //Add the groups. These have been reorganized as of v0.5.1 to make CP the highest group\n  //The groups that help with organizing during parsing. Note that for FN is still a function even \n  //when it's raised to a symbol, which typically results in an EX\n\n\n  var N = Groups.N = 1,\n      // A number\n  P = Groups.P = 2,\n      // A number with a rational power e.g. 2^(3/5). \n  S = Groups.S = 3,\n      // A single variable e.g. x. \n  EX = Groups.EX = 4,\n      // An exponential\n  FN = Groups.FN = 5,\n      // A function\n  PL = Groups.PL = 6,\n      // A symbol/expression having same name with different powers e.g. 1/x + x^2\n  CB = Groups.CB = 7,\n      // A symbol/expression composed of one or more variables through multiplication e.g. x*y\n  CP = Groups.CP = 8; // A symbol/expression composed of one variable and any other symbol or number x+1 or x+y\n\n  var CONST_HASH = Settings.CONST_HASH = '#';\n  var PARENTHESIS = Settings.PARENTHESIS;\n  var SQRT = Settings.SQRT;\n  var ABS = Settings.ABS;\n  var FACTORIAL = Settings.FACTORIAL;\n  var DOUBLEFACTORIAL = Settings.DOUBLEFACTORIAL; //the storage container \"memory\" for parsed expressions\n\n  var EXPRESSIONS = []; //variables\n\n  var VARS = {}; //the container used to store all the reserved functions\n\n  var RESERVED = [];\n  var WARNINGS = [];\n  /**\r\n   * Use this when errors are suppressible\r\n   * @param {String} msg\r\n   * @param {object} ErrorObj \r\n   */\n\n  var err = function err(msg, ErrorObj) {\n    if (!Settings.suppress_errors) {\n      if (ErrorObj) throw new ErrorObj(msg);else throw new Error(msg);\n    }\n  }; //Utils ======================================================================== \n\n\n  var customError = function customError(name) {\n    var E = function E(message) {\n      this.name = name;\n      this.message = message !== undefined ? message : '';\n      var error = new Error(this.message);\n      error.name = this.name;\n      this.stack = error.stack;\n    }; //create an empty error\n\n\n    E.prototype = Object.create(Error.prototype);\n    return E;\n  };\n  /**\r\n   * Checks to see if value is one of nerdamer's reserved names\r\n   * @param {String} value\r\n   * @return boolean\r\n   */\n\n\n  var isReserved = function isReserved(value) {\n    return RESERVED.indexOf(value) !== -1;\n  };\n  /**\r\n   * Checks to see that all symbols in array are the same\r\n   * @param {Symbol[]} arr\r\n   * @returns {bool}\r\n   */\n\n\n  var allSame = function allSame(arr) {\n    var last = arr[0];\n\n    for (var i = 1, l = arr.length; i < l; i++) {\n      if (!arr[i].equals(last)) return false;\n    }\n\n    return true;\n  };\n  /**\r\n   * Used to pass warnings or low severity errors about the library\r\n   * @param msg\r\n   */\n\n\n  var warn = function warn(msg) {\n    WARNINGS.push(msg);\n\n    if (Settings.SHOW_WARNINGS && console && console.warn) {\n      console.warn(msg);\n    }\n  };\n  /**\r\n   * Enforces rule: \"must start with a letter or underscore and \r\n   * can have any number of underscores, letters, and numbers thereafter.\"\r\n   * @param name The name of the symbol being checked\r\n   * @param {String} typ - The type of symbols that's being validated\r\n   * @throws {Exception}  - Throws an exception on fail\r\n   */\n\n\n  var validateName = function validateName(name, typ) {\n    typ = typ || 'variable';\n    if (Settings.ALLOW_CHARS.indexOf(name) !== -1) return;\n    var regex = Settings.VALIDATION_REGEX;\n\n    if (!regex.test(name)) {\n      throw new InvalidVariableNameError(name + ' is not a valid ' + typ + ' name');\n    }\n  };\n  /**\r\n   * Convert number from scientific format to decimal format\r\n   * @param {Number} num\r\n   */\n\n\n  var scientificToDecimal = function scientificToDecimal(num) {\n    var nsign = Math.sign(num); //remove the sign\n\n    num = Math.abs(num); //if the number is in scientific notation remove it\n\n    if (/\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num)) {\n      var zero = '0',\n          parts = String(num).toLowerCase().split('e'),\n          //split into coeff and exponent\n      e = parts.pop(),\n          //store the exponential part\n      l = Math.abs(e),\n          //get the number of zeros\n      sign = e / l,\n          coeff_array = parts[0].split('.');\n\n      if (sign === -1) {\n        l = l - coeff_array[0].length;\n\n        if (l < 0) {\n          num = coeff_array[0].slice(0, l) + '.' + coeff_array[0].slice(l) + (coeff_array.length === 2 ? coeff_array[1] : '');\n        } else {\n          num = zero + '.' + new Array(l + 1).join(zero) + coeff_array.join('');\n        }\n      } else {\n        var dec = coeff_array[1];\n        if (dec) l = l - dec.length;\n\n        if (l < 0) {\n          num = coeff_array[0] + dec.slice(0, l) + '.' + dec.slice(l);\n        } else {\n          num = coeff_array.join('') + new Array(l + 1).join(zero);\n        }\n      }\n    }\n\n    return nsign < 0 ? '-' + num : num;\n  };\n  /**\r\n   * Checks if number is a prime number\r\n   * @param {Number} n - the number to be checked\r\n   */\n\n\n  var isPrime = function isPrime(n) {\n    var q = Math.floor(Math.sqrt(n));\n\n    for (var i = 2; i <= q; i++) {\n      if (n % i === 0) return false;\n    }\n\n    return true;\n  };\n  /**\r\n   * Checks if n is a number\r\n   * @param {any} n \r\n   */\n\n\n  var isNumber = function isNumber(n) {\n    return /^\\d+\\.?\\d*$/.test(n);\n  };\n  /**\r\n   * Checks to see if an array contains only numeric values\r\n   * @param {Array} arr \r\n   */\n\n\n  var allNumeric = function allNumeric(arr) {\n    for (var i = 0; i < arr.length; i++) {\n      if (!isNumber(arr[i])) return false;\n    }\n\n    return true;\n  };\n  /**\r\n   * Checks to see if a number or Symbol is a fraction\r\n   * @param {Number|Symbol} num\r\n   * @returns {boolean}\r\n   */\n\n\n  var _isFraction = function isFraction(num) {\n    if (isSymbol(num)) return _isFraction(num.multiplier.toDecimal());\n    return num % 1 !== 0;\n  };\n  /**\r\n   * Checks to see if the object provided is a Symbol\r\n   * @param {Object} obj\r\n   */\n\n\n  var isSymbol = function isSymbol(obj) {\n    return obj instanceof Symbol;\n  };\n  /**\r\n   * Checks to see if the object provided is an Expression\r\n   * @param {Object} obj\r\n   */\n\n\n  var isExpression = function isExpression(obj) {\n    return obj instanceof Expression;\n  };\n  /**\r\n   * This method traverses the symbol structure and grabs all the variables in a symbol. The variable\r\n   * names are then returned in alphabetical order.\r\n   * @param {Symbol} obj\r\n   * @param {Boolean} poly \r\n   * @param {Object} vars - An object containing the variables. Do not pass this in as it generated \r\n   * automatically. In the future this will be a Collector object.\r\n   * @returns {String[]} - An array containing variable names\r\n   */\n\n\n  var _variables = function variables(obj, poly, vars) {\n    vars = vars || {\n      c: [],\n      add: function add(value) {\n        if (this.c.indexOf(value) === -1 && isNaN(value)) this.c.push(value);\n      }\n    };\n\n    if (isSymbol(obj)) {\n      var group = obj.group,\n          prevgroup = obj.previousGroup;\n      if (group === EX) _variables(obj.power, poly, vars);\n\n      if (group === CP || group === CB || prevgroup === CP || prevgroup === CB) {\n        for (var x in obj.symbols) {\n          _variables(obj.symbols[x], poly, vars);\n        }\n      } else if (group === S || prevgroup === S) {\n        //very crude needs fixing. TODO\n        if (!(obj.value === 'e' || obj.value === 'pi' || obj.value === Settings.IMAGINARY)) vars.add(obj.value);\n      } else if (group === PL || prevgroup === PL) {\n        _variables(firstObject(obj.symbols), poly, vars);\n      } else if (group === EX) {\n        if (!isNaN(obj.value)) vars.add(obj.value);\n\n        _variables(obj.power, poly, vars);\n      } else if (group === FN && !poly) {\n        for (var i = 0; i < obj.args.length; i++) {\n          _variables(obj.args[i], poly, vars);\n        }\n      }\n    }\n\n    return vars.c.sort();\n  };\n  /**\r\n   * Returns the sum of an array\r\n   * @param {Array} arr\r\n   * @returns {Symbol}\r\n   */\n\n\n  var arraySum = function arraySum(arr) {\n    var sum = new Symbol(0);\n    arr.map(function (x) {\n      sum = _.add(sum, x);\n    });\n    return sum;\n  };\n  /**\r\n   * Separates out the variables into terms of variabls. \r\n   * e.g. x+y+x*y+sqrt(2)+pi returns \r\n   * {x: x, y: y, x y: x*y, constants: sqrt(2)+pi\r\n   * @param {type} symbol\r\n   * @param {type} o\r\n   * @returns {undefined}\r\n   * @throws {Error} for expontentials\r\n   */\n\n\n  var separate = function separate(symbol, o) {\n    symbol = _.expand(symbol);\n    o = o || {};\n\n    var insert = function insert(key, sym) {\n      if (!o[key]) o[key] = new Symbol(0);\n      o[key] = _.add(o[key], sym.clone());\n    };\n\n    symbol.each(function (x) {\n      if (x.isConstant('all')) insert('constants', x);else if (x.group === S) {\n        insert(x.value, x);\n      } else if (x.group === FN && (x.fname === ABS || x.fname === '')) {\n        separate(x.args[0]);\n      } else if (x.group === EX || x.group === FN) {\n        throw new Error('Unable to separate. Term cannot be a function!');\n      } else {\n        insert(_variables(x).join(' '), x);\n      }\n    });\n    return o;\n  };\n  /**\r\n   * Fills holes in an array with zero symbol or generates one with n zeroes\r\n   * @param {Array} arr \r\n   * @param {Number} n \r\n   */\n\n\n  var fillHoles = function fillHoles(arr, n) {\n    n = n || arr.length;\n\n    for (var i = 0; i < n; i++) {\n      var sym = arr[i];\n      if (!sym) arr[i] = new Symbol(0);\n    }\n\n    return arr;\n  };\n  /**\r\n   * \r\n   * Checks to see if the object provided is a Vector\r\n   * @param {Object} obj\r\n   */\n\n\n  var isVector = function isVector(obj) {\n    return obj instanceof Vector;\n  };\n  /**\r\n   * Checks to see if the object provided is a Matrix\r\n   * @param {Object} obj\r\n   */\n\n\n  var isMatrix = function isMatrix(obj) {\n    return obj instanceof Matrix;\n  };\n\n  var isSet = function isSet(obj) {\n    return obj instanceof Set;\n  };\n  /**\r\n   * Checks to see if a symbol is in group N\r\n   * @param {Symbol} symbol\r\n   */\n\n\n  var isNumericSymbol = function isNumericSymbol(symbol) {\n    return symbol.group === N || symbol.group === P;\n  };\n  /**\r\n   * Checks to see if a symbol is a variable with no multiplier nor power\r\n   * @param {Symbol} symbol\r\n   */\n\n\n  var isVariableSymbol = function isVariableSymbol(symbol) {\n    return symbol.group === S && symbol.multiplier.equals(1) && symbol.power.equals(1);\n  };\n  /**\r\n   * Checks to see if the object provided is an Array\r\n   * @param {Object} arr\r\n   */\n\n\n  var isArray = function isArray(arr) {\n    return Array.isArray(arr);\n  };\n  /**\r\n   * Checks to see if a number is an integer\r\n   * @param {Number} num\r\n   */\n\n\n  var isInt = function isInt(num) {\n    return /^[-+]?\\d+e?\\+?\\d*$/gim.test(num.toString());\n  };\n  /**\r\n   * @param {Number|Symbol} obj\r\n   * @returns {boolean}\r\n   */\n\n\n  var isNegative = function isNegative(obj) {\n    if (isSymbol(obj)) {\n      obj = obj.multiplier;\n    }\n\n    return obj.lessThan(0);\n  };\n  /**\r\n   * Safely stringify object\r\n   * @param o\r\n   */\n\n\n  var stringify = function stringify(o) {\n    if (!o) return o;\n    return String(o);\n  };\n  /**\r\n   * @param {String} str\r\n   * @returns {String} - returns a formatted string surrounded by brackets\r\n   */\n\n\n  var inBrackets = function inBrackets(str) {\n    return '(' + str + ')';\n  };\n  /**\r\n   * A helper function to replace parts of string\r\n   * @param {String} str - The original string\r\n   * @param {Integer} from - The starting index\r\n   * @param {Integer} to - The ending index\r\n   * @param {String} with_str - The replacement string\r\n   * @returns {String} - A formatted string\r\n   */\n\n\n  var stringReplace = function stringReplace(str, from, to, with_str) {\n    return str.substr(0, from) + with_str + str.substr(to, str.length);\n  };\n  /**\r\n   * the Parser uses this to check if it's allowed to convert the obj to type Symbol\r\n   * @param {Object} obj\r\n   * @returns {boolean}\r\n   */\n\n\n  var customType = function customType(obj) {\n    return obj !== undefined && obj.custom;\n  };\n  /**\r\n   * Checks to see if numbers are both negative or are both positive\r\n   * @param {Number} a\r\n   * @param {Number} b\r\n   * @returns {boolean}\r\n   */\n\n\n  var sameSign = function sameSign(a, b) {\n    return a < 0 === b < 0;\n  };\n  /**\r\n   * A helper function to replace multiple occurences in a string. Takes multiple arguments\r\n   * @example format('{0} nice, {0} sweet', 'something')\r\n   * //returns 'something nice, something sweet'\r\n   */\n\n\n  var format = function format() {\n    var args = [].slice.call(arguments),\n        str = args.shift();\n    var new_str = str.replace(/{(\\d+)}/g, function (match, index) {\n      var arg = args[index];\n      return typeof arg === 'function' ? arg() : arg;\n    });\n    return new_str;\n  };\n  /**\r\n   * Generates an array with values within a range. Multiplies by a step if provided\r\n   * @param {Number} start\r\n   * @param {Number} end\r\n   * @param {Number} step\r\n   */\n\n\n  var range = function range(start, end, step) {\n    var arr = [];\n    step = step || 1;\n\n    for (var i = start; i <= end; i++) {\n      arr.push(i * step);\n    }\n\n    return arr;\n  };\n  /**\r\n   * Returns an array of all the keys in an array\r\n   * @param {Object} obj\r\n   * @returns {Array}\r\n   */\n\n\n  var keys = Object.keys;\n  /**\r\n   * Returns the first encountered item in an object. Items do not have a fixed order in objects \r\n   * so only use if you need any first random or if there's only one item in the object\r\n   * @param {Object} obj\r\n   * @param {String} key Return this key as first object\r\n   * @param {Boolean} both\r\n   * @returns {*}\r\n   */\n\n  var firstObject = function firstObject(obj, key, both) {\n    for (var x in obj) {\n      break;\n    }\n\n    if (key) return x;\n    if (both) return {\n      key: x,\n      obj: obj[x]\n    };\n    return obj[x];\n  };\n  /**\r\n   * Substitutes out variables for two symbols, parses them to a number and them compares them numerically\r\n   * @param {Symbol} sym1\r\n   * @param {Symbol} sym2\r\n   * @param {String[]} vars - an optional array of variables to use\r\n   * @returns {bool}\r\n   */\n\n\n  var compare = function compare(sym1, sym2, vars) {\n    var n = 5; //a random number between 1 and 5 is good enough\n\n    var scope = {}; // scope object with random numbers generated using vars\n\n    var comparison;\n\n    for (var i = 0; i < vars.length; i++) {\n      scope[vars[i]] = new Symbol(Math.floor(Math.random() * n) + 1);\n    }\n\n    block('PARSE2NUMBER', function () {\n      comparison = _.parse(sym1, scope).equals(_.parse(sym2, scope));\n    });\n    return comparison;\n  };\n  /**\r\n   * Is used to set a user defined function using the function assign operator\r\n   * @param {String} name\r\n   * @param {String[]} params_array\r\n   * @param {String} body\r\n   * @returns {Boolean}\r\n   */\n\n\n  var setFunction = function setFunction(name, params_array, body) {\n    validateName(name);\n\n    if (!isReserved(name)) {\n      params_array = params_array || _variables(_.parse(body));\n      _.functions[name] = [_.mapped_function, params_array.length, {\n        name: name,\n        params: params_array,\n        body: body\n      }];\n      return body;\n    }\n\n    return null;\n  };\n  /**\r\n   * Returns the minimum number in an array\r\n   * @param {Array} arr\r\n   * @returns {Number} \r\n   */\n\n\n  var arrayMax = function arrayMax(arr) {\n    return Math.max.apply(undefined, arr);\n  };\n  /**\r\n   * Returns the maximum number in an array\r\n   * @param {Array} arr\r\n   * @returns {Number} \r\n   */\n\n\n  var arrayMin = function arrayMin(arr) {\n    return Math.min.apply(undefined, arr);\n  };\n  /**\r\n   * Clones array with clonable items\r\n   * @param {Array} arr\r\n   * @returns {Array}\r\n   */\n\n\n  var arrayClone = function arrayClone(arr) {\n    var new_array = [],\n        l = arr.length;\n\n    for (var i = 0; i < l; i++) {\n      new_array[i] = arr[i].clone();\n    }\n\n    return new_array;\n  };\n  /**\r\n   * Fills numbers between array values\r\n   * @param {Numbers[]} arr\r\n   * @param {Integer} slices\r\n   */\n\n\n  var arrayAddSlices = function arrayAddSlices(arr, slices) {\n    slices = slices || 20;\n    var retval = [];\n    var c, delta, e;\n    retval.push(arr[0]); //push the beginning\n\n    for (var i = 0; i < arr.length - 1; i++) {\n      c = arr[i];\n      delta = arr[i + 1] - c; //get the difference\n\n      e = delta / slices; //chop it up in the desired number of slices\n\n      for (var j = 0; j < slices; j++) {\n        c += e; //add the mesh to the last slice\n\n        retval.push(c);\n      }\n    }\n\n    return retval;\n  };\n  /**\r\n  * Gets nth roots of a number\r\n  * @param {Symbol} symbol\r\n  * @returns {Vector}\r\n  */\n\n\n  var nroots = function nroots(symbol) {\n    var a, b;\n\n    if (symbol.group === FN && symbol.fname === '') {\n      a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\n      b = _.parse(symbol.power);\n    } else if (symbol.group === P) {\n      a = _.parse(symbol.value);\n      b = _.parse(symbol.power);\n    }\n\n    if (a && b && a.group === N && b.group === N && a.multiplier.isNegative()) {\n      var _roots = [];\n      var parts = Symbol.toPolarFormArray(evaluate(symbol));\n      var r = parts[0]; //var r = _.parse(a).abs().toString();\n      //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\n\n      var x = _.arg(a);\n\n      var n = b.multiplier.den.toString();\n      var p = b.multiplier.num.toString();\n      var formula = '(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})';\n\n      for (var i = 0; i < n; i++) {\n        var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\n\n        _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\n      }\n\n      return Vector.fromArray(_roots);\n    } else if (symbol.isConstant(true, true)) {\n      var sign = symbol.sign();\n      var x = evaluate(symbol.abs());\n\n      var root = _.sqrt(x);\n\n      var _roots = [root.clone(), root.negate()];\n      if (sign < 0) _roots = _roots.map(function (x) {\n        return _.multiply(x, Symbol.imaginary());\n      });\n    } else {\n      _roots = [_.parse(symbol)];\n    }\n\n    return Vector.fromArray(_roots);\n  };\n  /**\r\n   * Sorts and array given 2 parameters\r\n   * @param {String} a\r\n   * @param {String} b\r\n   */\n\n\n  var comboSort = function comboSort(a, b) {\n    var l = a.length,\n        combined = []; //the linker\n\n    for (var i = 0; i < a.length; i++) {\n      combined.push([a[i], b[i]]); //create the map\n    }\n\n    combined.sort(function (x, y) {\n      return x[0] - y[0];\n    });\n    var na = [],\n        nb = [];\n\n    for (i = 0; i < l; i++) {\n      na.push(combined[i][0]);\n      nb.push(combined[i][1]);\n    }\n\n    return [na, nb];\n  };\n  /**\r\n   * TODO: Pick a more descriptive name and better description\r\n   * Breaks a function down into it's parts wrt to a variable, mainly coefficients\r\n   * Example a*x^2+b wrt x\r\n   * @param {Symbol} fn\r\n   * @param {String} wrt\r\n   * @param {bool} as_obj\r\n   */\n\n\n  var decompose_fn = function decompose_fn(fn, wrt, as_obj) {\n    wrt = String(wrt); //convert to string\n\n    var ax, a, x, b;\n\n    if (fn.group === CP) {\n      var t = _.expand(fn.clone()).stripVar(wrt);\n\n      ax = _.subtract(fn.clone(), t.clone());\n      b = t;\n    } else ax = fn.clone();\n\n    a = ax.stripVar(wrt);\n    x = _.divide(ax.clone(), a.clone());\n    b = b || new Symbol(0);\n    if (as_obj) return {\n      a: a,\n      x: x,\n      ax: ax,\n      b: b\n    };\n    return [a, x, ax, b];\n  };\n  /**\r\n   * Rounds a number up to x decimal places\r\n   * @param {Number} x\r\n   * @param {Number} s\r\n   */\n\n\n  var nround = function nround(x, s) {\n    if (isInt(x)) {\n      if (x >= Number.MAX_VALUE) return x.toString();\n      return Number(x);\n    }\n\n    s = typeof s === 'undefined' ? 14 : s;\n    return Math.round(x * Math.pow(10, s)) / Math.pow(10, s);\n  };\n  /**\r\n   * Is used for u-substitution. Gets a suitable u for substitution. If for\r\n   * instance a is used in the symbol then it keeps going down the line until\r\n   * one is found that's not in use. If all letters are taken then it\r\n   * starts appending numbers. \r\n   * IMPORTANT! It assumes that the substitution will be undone\r\n   * beore the user gets to interact with the object again.\r\n   * @param {Symbol} symbol\r\n   */\n\n\n  var getU = function getU(symbol) {\n    //start with u\n    var u = 'u',\n        //start with u\n    v = u,\n        //init with u\n    c = 0,\n        //postfix number\n    vars = _variables(symbol); //make sure this variable isn't reserved and isn't in the variable list\n\n\n    while (!(RESERVED.indexOf(v) === -1 && vars.indexOf(v) === -1)) {\n      v = u + c++;\n    } //get an empty slot. It seems easier to just push but the\n    //problem is that we may have some which are created by clearU\n\n\n    for (var i = 0, l = RESERVED.length; i <= l; i++) {\n      //reserved cannot equals false or 0 so we can safely check for a falsy type\n      if (!RESERVED[i]) {\n        RESERVED[i] = v; //reserve the variable\n\n        break;\n      }\n    }\n\n    return v;\n  };\n  /**\r\n   * Clears the u variable so it's no longer reserved\r\n   * @param {String} u\r\n   */\n\n\n  var clearU = function clearU(u) {\n    var indx = RESERVED.indexOf(u);\n    if (indx !== -1) RESERVED[indx] = undefined;\n  };\n  /**\r\n   * Loops through each item in object and calls function with item as param\r\n   * @param {Object|Array} obj\r\n   * @param {Function} fn \r\n   */\n\n\n  var each = function each(obj, fn) {\n    if (isArray(obj)) {\n      var l = obj.length;\n\n      for (var i = 0; i < l; i++) {\n        fn.call(obj, i);\n      }\n    } else {\n      for (var x in obj) {\n        if (obj.hasOwnProperty(x)) fn.call(obj, x);\n      }\n    }\n  };\n  /**\r\n   * Checks to see if a number is an even number\r\n   * @param {Number} num\r\n   * @returns {boolean}\r\n   */\n\n\n  var even = function even(num) {\n    return num % 2 === 0;\n  };\n  /**\r\n   * Checks to see if a fraction is divisible by 2\r\n   * @param {Number} num\r\n   * @returns {boolean}\r\n   */\n\n\n  var evenFraction = function evenFraction(num) {\n    return 1 / (num % 1) % 2 === 0;\n  };\n  /**\r\n   * Strips duplicates out of an array\r\n   * @param {Array} arr\r\n   */\n\n\n  var arrayUnique = function arrayUnique(arr) {\n    var l = arr.length,\n        a = [];\n\n    for (var i = 0; i < l; i++) {\n      var item = arr[i];\n      if (a.indexOf(item) === -1) a.push(item);\n    }\n\n    return a;\n  };\n  /**\r\n   * Removes duplicates from an array. Returns a new array\r\n   * @param {Array} arr\r\n   * @param {Function} condition\r\n   */\n\n\n  var removeDuplicates = function removeDuplicates(arr, condition) {\n    var conditionType = typeof condition;\n\n    if (conditionType !== 'function' || conditionType === 'undefined') {\n      condition = function condition(a, b) {\n        return a === b;\n      };\n    }\n\n    var seen = [];\n\n    while (arr.length) {\n      var a = arr[0]; //only one element left so we're done\n\n      if (arr.length === 1) {\n        seen.push(a);\n        break;\n      }\n\n      var temp = [];\n      seen.push(a); //we already scanned these\n\n      for (var i = 1; i < arr.length; i++) {\n        var b = arr[i]; //if the number is outside the specified tolerance\n\n        if (!condition(a, b)) temp.push(b);\n      } //start over with the remainder\n\n\n      arr = temp;\n    }\n\n    return seen;\n  };\n  /**\r\n   * Reserves the names in an object so they cannot be used as function names\r\n   * @param {Object} obj\r\n   */\n\n\n  var reserveNames = function reserveNames(obj) {\n    var add = function add(item) {\n      if (RESERVED.indexOf(item) === -1) RESERVED.push(item);\n    };\n\n    if (typeof obj === 'string') add(obj);else {\n      each(obj, function (x) {\n        add(x);\n      });\n    }\n  };\n  /**\r\n   * Removes an item from either an array or an object. If the object is an array, the index must be \r\n   * specified after the array. If it's an object then the key must be specified\r\n   * @param {Object|Array} obj\r\n   * @param {Integer} indexOrKey\r\n   */\n\n\n  var _remove = function remove(obj, indexOrKey) {\n    var result;\n\n    if (isArray(obj)) {\n      result = obj.splice(indexOrKey, 1)[0];\n    } else {\n      result = obj[indexOrKey];\n      delete obj[indexOrKey];\n    }\n\n    return result;\n  };\n  /**\r\n   * Creates a temporary block in which one of the global settings is temporarily modified while\r\n   * the function is called. For instance if you want to parse directly to a number rather than have a symbolic\r\n   * answer for a period you would set PARSE2NUMBER to true in the block.\r\n   * @example block('PARSE2NUMBER', function(){//symbol being parsed to number}, true);\r\n   * @param {String} setting - The setting being accessed\r\n   * @param {Function} f \r\n   * @param {boolean} opt - The value of the setting in the block\r\n   * @param {String} obj - The obj of interest. Usually a Symbol but could be any object\r\n   */\n\n\n  var block = function block(setting, f, opt, obj) {\n    var current_setting = Settings[setting];\n    Settings[setting] = opt === undefined ? true : !!opt;\n    var retval = f.call(obj);\n    Settings[setting] = current_setting;\n    return retval;\n  };\n  /**\r\n   * provide a mechanism for accessing functions directly. Not yet complete!!! \r\n   * Some functions will return undefined. This can maybe just remove the \r\n   * function object at some point when all functions are eventually \r\n   * housed in the global function object. Returns ALL parser available \r\n   * functions. Parser.functions may not contain all functions\r\n   */\n\n\n  var importFunctions = function importFunctions() {\n    var o = {};\n\n    for (var x in _.functions) {\n      o[x] = _.functions[x][0];\n    }\n\n    return o;\n  };\n  /**\r\n   * Converts function arguments to an array. Now used by gcd and lcm in Algebra.js :)\r\n   * @param {Array|object} obj\r\n   */\n\n\n  var arguments2Array = function arguments2Array(obj) {\n    return [].slice.call(obj);\n  };\n  /**\r\n   * Returns the coefficients of a symbol\r\n   * @param {Symbol} symbol\r\n   * @param {Symbol} wrt\r\n   */\n\n\n  var getCoeffs = function getCoeffs(symbol, wrt) {\n    var coeffs = []; //we loop through the symbols and stick them in their respective \n    //containers e.g. y*x^2 goes to index 2\n\n    symbol.each(function (term) {\n      if (term.contains(wrt)) {\n        //we want only the coefficient which in this case will be everything but the variable\n        //e.g. a*b*x -> a*b if the variable to solve for is x\n        var coeff = term.stripVar(wrt),\n            x = _.divide(term.clone(), coeff.clone()),\n            p = x.power.toDecimal();\n      } else {\n        coeff = term;\n        p = 0;\n      }\n\n      var e = coeffs[p]; //if it exists just add it to it\n\n      coeffs[p] = e ? _.add(e, coeff) : coeff;\n    }, true);\n\n    for (var i = 0; i < coeffs.length; i++) {\n      if (!coeffs[i]) coeffs[i] = new Symbol(0);\n    } //fill the holes\n\n\n    return coeffs;\n  };\n  /**\r\n   * As the name states. It forces evaluation of the expression \r\n   * @param {Symbol} symbol\r\n   * @param {Symbol} o\r\n   */\n\n\n  var evaluate = function evaluate(symbol, o) {\n    return block('PARSE2NUMBER', function () {\n      return _.parse(symbol, o);\n    }, true);\n  };\n  /**\r\n   * Converts an array to a vector. Consider moving this to Vector.fromArray\r\n   * @param {String[]|String|Symbol|Number|Number[]} x \r\n   */\n\n\n  var convertToVector = function convertToVector(x) {\n    if (isArray(x)) {\n      var vector = new Vector([]);\n\n      for (var i = 0; i < x.length; i++) {\n        vector.elements.push(convertToVector(x[i]));\n      }\n\n      return vector;\n    } //Ensure that a nerdamer ready object is returned\n\n\n    if (!isSymbol(x)) return _.parse(x);\n    return x;\n  };\n  /**\r\n   * Generates prime numbers up to a specified number\r\n   * @param {Number} upto \r\n   */\n\n\n  var generatePrimes = function generatePrimes(upto) {\n    //get the last prime in the array\n    var last_prime = PRIMES[PRIMES.length - 1] || 2; //no need to check if we've already encountered the number. Just check the cache.\n\n    for (var i = last_prime; i < upto; i++) {\n      if (isPrime(i)) PRIMES.push(i);\n    }\n  };\n  /**\r\n   * Checks to see if all arguments are numbers\r\n   * @param {object} args\r\n   */\n\n\n  var allNumbers = function allNumbers(args) {\n    for (var i = 0; i < args.length; i++) {\n      if (args[i].group !== N) return false;\n    }\n\n    return true;\n  };\n  /*\r\n   * Checks if all arguments aren't just all number but if they\r\n   * are constants as well e.g. pi, e.\r\n   * @param {object} args \r\n   */\n\n\n  var allConstants = function allConstants(args) {\n    for (var i = 0; i < args.length; i++) {\n      if (args[i].isPi() || args[i].isE()) continue;\n      if (!args[i].isConstant(true)) return false;\n    }\n\n    return true;\n  }; //Exceptions ===================================================================\n  //Is thrown for division by zero\n\n\n  var DivisionByZero = customError('DivisionByZero'); //Is throw if an error occured during parsing\n\n  var ParseError = customError('ParseError'); //Is thrown if the expression results in undefined\n\n  var UndefinedError = customError('UndefinedError'); //Is throw if a function exceeds x amount of iterations\n\n  var MaximumIterationsReached = customError('MaximumIterationsReached'); //Is thrown if the parser receives an incorrect type\n\n  var NerdamerTypeError = customError('NerdamerTypeError'); //Is thrown if bracket parity is not correct\n\n  var ParityError = customError('ParityError'); //Is thrown if an unexpectd or incorrect operator is encountered\n\n  var OperatorError = customError('OperatorError'); //Is thrown if an index is out of range.\n\n  var OutOfRangeError = customError('OutOfRangeError'); //Is thrown if dimensions are incorrect. Mostly for matrices\n\n  var DimensionError = customError('DimensionError'); //Is thrown if variable name violates naming rule\n\n  var InvalidVariableNameError = customError('InvalidVariableNameError'); //Is thrown if the limits of the library are exceeded for a function\n  //This can be that the function become unstable passed a value\n\n  var ValueLimitExceededError = customError('ValueLimitExceededError'); //Is throw if the value is an incorrect LH or RH value\n\n  var NerdamerValueError = customError('NerdamerValueError'); //Is throw if the value is an incorrect LH or RH value\n\n  var SolveError = customError('SolveError');\n  var exceptions = {\n    DivisionByZero: DivisionByZero,\n    ParseError: ParseError,\n    UndefinedError: UndefinedError,\n    MaximumIterationsReached: MaximumIterationsReached,\n    NerdamerTypeError: NerdamerTypeError,\n    ParityError: ParityError,\n    OperatorError: OperatorError,\n    OutOfRangeError: OutOfRangeError,\n    DimensionError: DimensionError,\n    InvalidVariableNameError: InvalidVariableNameError,\n    ValueLimitExceededError: ValueLimitExceededError,\n    NerdamerValueError: NerdamerValueError,\n    SolveError: SolveError\n  }; //Big ========================================================================== \n\n  var Big = {\n    cos: function cos(x) {\n      return new Symbol(bigDec.cos(x.multiplier.toDecimal()));\n    },\n    sin: function sin(x) {\n      return new Symbol(bigDec.sin(x.multiplier.toDecimal()));\n    }\n  }; //Math2 ======================================================================== \n  //This object holds additional functions for nerdamer. Think of it as an extension of the Math object.\n  //I really don't like touching objects which aren't mine hence the reason for Math2. The names of the \n  //functions within are pretty self-explanatory.\n  //NOTE: DO NOT USE INLINE COMMENTS WITH THE MATH2 OBJECT! THIS BREAK DURING COMPILATION OF BUILDFUNCTION.\n\n  var Math2 = {\n    csc: function csc(x) {\n      return 1 / Math.sin(x);\n    },\n    sec: function sec(x) {\n      return 1 / Math.cos(x);\n    },\n    cot: function cot(x) {\n      return 1 / Math.tan(x);\n    },\n    acsc: function acsc(x) {\n      return Math.asin(1 / x);\n    },\n    asec: function asec(x) {\n      return Math.acos(1 / x);\n    },\n    acot: function acot(x) {\n      return Math.PI / 2 - Math.atan(x);\n    },\n    // https://gist.github.com/jiggzson/df0e9ae8b3b06ff3d8dc2aa062853bd8\n    erf: function erf(x) {\n      var t = 1 / (1 + 0.5 * Math.abs(x));\n      var result = 1 - t * Math.exp(-x * x - 1.26551223 + t * (1.00002368 + t * (0.37409196 + t * (0.09678418 + t * (-0.18628806 + t * (0.27886807 + t * (-1.13520398 + t * (1.48851587 + t * (-0.82215223 + t * 0.17087277)))))))));\n      return x >= 0 ? result : -result;\n    },\n    diff: function diff(f) {\n      var h = 0.001;\n\n      var derivative = function derivative(x) {\n        return (f(x + h) - f(x - h)) / (2 * h);\n      };\n\n      return derivative;\n    },\n    median: function median() {\n      for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n        values[_key] = arguments[_key];\n      }\n\n      values.sort(function (a, b) {\n        return a - b;\n      });\n      var half = Math.floor(values.length / 2);\n      if (values.length % 2) return values[half];\n      return (values[half - 1] + values[half]) / 2.0;\n    },\n\n    /*\r\n     * Reverses continued fraction calculation\r\n     * @param {obj} contd\r\n     * @returns {Number}\r\n     */\n    fromContinued: function fromContinued(contd) {\n      var arr = contd.fractions.slice();\n      var e = 1 / arr.pop();\n\n      for (var i = 0, l = arr.length; i < l; i++) {\n        e = 1 / (arr.pop() + e);\n      }\n\n      return contd.sign * (contd.whole + e);\n    },\n\n    /*\r\n     * Calculates continued fractions\r\n     * @param {Number} n\r\n     * @param {Number} x The number of places\r\n     * @returns {Number}\r\n     */\n    continuedFraction: function continuedFraction(n, x) {\n      x = x || 20;\n      var sign = Math.sign(n);\n      /*store the sign*/\n\n      var absn = Math.abs(n);\n      /*get the absolute value of the number*/\n\n      var whole = Math.floor(absn);\n      /*get the whole*/\n\n      var ni = absn - whole;\n      /*subtract the whole*/\n\n      var c = 0;\n      /*the counter to keep track of iterations*/\n\n      var done = false;\n      var epsilon = 1e-14;\n      var max = 1e7;\n      var e, w;\n      var retval = {\n        whole: whole,\n        sign: sign,\n        fractions: []\n      };\n      /*start calculating*/\n\n      while (!done && ni !== 0) {\n        /*invert and get the whole*/\n        e = 1 / ni;\n        w = Math.floor(e);\n\n        if (w > max) {\n          /*this signals that we may have already gone too far*/\n          var d = Math2.fromContinued(retval) - n;\n          if (d <= Number.EPSILON) break;\n        }\n        /*add to result*/\n\n\n        retval.fractions.push(w);\n        /*move the ni to the decimal*/\n\n        ni = e - w;\n        /*ni should always be a decimal. If we have a whole number then we're in the rounding errors*/\n\n        if (ni <= epsilon || c >= x - 1) done = true;\n        c++;\n      }\n      /*cleanup 1/(n+1/1) = 1/(n+1) so just move the last digit one over if it's one*/\n\n\n      var idx = retval.fractions.length - 1;\n\n      if (retval.fractions[idx] === 1) {\n        retval.fractions.pop();\n        /*increase the last one by one*/\n\n        retval.fractions[--idx]++;\n      }\n\n      return retval;\n    },\n    bigpow: function bigpow(n, p) {\n      if (!(n instanceof Frac)) n = Frac.create(n);\n      if (!(p instanceof Frac)) p = Frac.create(p);\n      var retval = new Frac(0);\n\n      if (p.isInteger()) {\n        retval.num = n.num.pow(p.toString());\n        retval.den = n.den.pow(p.toString());\n      } else {\n        var num = Frac.create(Math.pow(n.num, p.num));\n        var den = Frac.create(Math.pow(n.den, p.num));\n        retval.num = Math2.nthroot(num, p.den.toString());\n        retval.den = Math2.nthroot(den, p.den);\n      }\n\n      return retval;\n    },\n    //http://stackoverflow.com/questions/15454183/how-to-make-a-function-that-computes-the-factorial-for-numbers-with-decimals\n    gamma: function gamma(z) {\n      var g = 7;\n      var C = [0.99999999999980993, 676.5203681218851, -1259.1392167224028, 771.32342877765313, -176.61502916214059, 12.507343278686905, -0.13857109526572012, 9.9843695780195716e-6, 1.5056327351493116e-7];\n      if (z < 0.5) return Math.PI / (Math.sin(Math.PI * z) * Math2.gamma(1 - z));else {\n        z -= 1;\n        var x = C[0];\n\n        for (var i = 1; i < g + 2; i++) {\n          x += C[i] / (z + i);\n        }\n\n        var t = z + g + 0.5;\n        return Math.sqrt(2 * Math.PI) * Math.pow(t, z + 0.5) * Math.exp(-t) * x;\n      }\n    },\n    //factorial\n    bigfactorial: function bigfactorial(x) {\n      var retval = new bigInt(1);\n\n      for (var i = 2; i <= x; i++) {\n        retval = retval.times(i);\n      }\n\n      return new Frac(retval);\n    },\n    //https://en.wikipedia.org/wiki/Logarithm#Calculation\n    bigLog: function bigLog(x) {\n      varn\n      if (CACHE[x]) {\n        return Frac.quick.apply(null, CACHE[x].split('/'));\n      }\n\n      x = new Frac(x);\n      var n = 80;\n      var retval = new Frac(0);\n      var a = x.subtract(new Frac(1));\n      var b = x.add(new Frac(1));\n\n      for (var i = 0; i < n; i++) {\n        var t = new Frac(2 * i + 1);\n        var k = Math2.bigpow(a.divide(b), t);\n        var r = t.clone().invert().multiply(k);\n        retval = retval.add(r);\n      }\n\n      return retval.multiply(new Frac(2));\n    },\n    //the factorial function but using the big library instead\n    factorial: function factorial(x) {\n      var is_int = x % 1 === 0;\n      /*factorial for negative integers is complex infinity according to Wolfram Alpha*/\n\n      if (is_int && x < 0) return NaN;\n      if (!is_int) return Math2.gamma(x + 1);\n      var retval = 1;\n\n      for (var i = 2; i <= x; i++) {\n        retval = retval * i;\n      }\n\n      return retval;\n    },\n    //double factorial\n    //http://mathworld.wolfram.com/DoubleFactorial.html\n    dfactorial: function dfactorial(x) {\n      if (isInt(x)) {\n        var even = x % 2 === 0;\n        /* If x = even then n = x/2 else n = (x-1)/2*/\n\n        var n = even ? x / 2 : (x + 1) / 2;\n        /*the return value*/\n\n        var r = new Frac(1);\n        /*start the loop*/\n\n        if (even) for (var i = 1; i <= n; i++) {\n          r = r.multiply(new Frac(2).multiply(new Frac(i)));\n        } else for (var i = 1; i <= n; i++) {\n          r = r.multiply(new Frac(2).multiply(new Frac(i)).subtract(new Frac(1)));\n        }\n      } else {\n        /*Not yet extended to bigNum*/\n        r = Math.pow(2, (1 + 2 * x - Math.cos(Math.PI * x)) / 4) * Math.pow(Math.PI, (Math.cos(Math.PI * x) - 1) / 4) * Math2.gamma(1 + x / 2);\n      }\n      /*done*/\n\n\n      return r;\n    },\n    GCD: function GCD() {\n      var args = arrayUnique([].slice.call(arguments).map(function (x) {\n        return Math.abs(x);\n      })).sort(),\n          a = Math.abs(args.shift()),\n          n = args.length;\n\n      while (n-- > 0) {\n        var b = Math.abs(args.shift());\n\n        while (true) {\n          a %= b;\n\n          if (a === 0) {\n            a = b;\n            break;\n          }\n\n          b %= a;\n          if (b === 0) break;\n          ;\n        }\n      }\n\n      return a;\n    },\n    QGCD: function QGCD() {\n      var args = [].slice.call(arguments);\n      var a = args[0];\n\n      for (var i = 1; i < args.length; i++) {\n        var b = args[i];\n        var sign = a.isNegative() && b.isNegative() ? -1 : 1;\n        a = b.gcd(a);\n        if (sign < 0) a.negate();\n      }\n\n      return a;\n    },\n    LCM: function LCM(a, b) {\n      return a * b / Math2.GCD(a, b);\n    },\n    //pow but with the handling of negative numbers\n    //http://stackoverflow.com/questions/12810765/calculating-cubic-root-for-negative-number\n    pow: function pow(b, e) {\n      if (b < 0) {\n        if (Math.abs(e) < 1) {\n          /*nth root of a negative number is imaginary when n is even*/\n          if (1 / e % 2 === 0) return NaN;\n          return -Math.pow(Math.abs(b), e);\n        }\n      }\n\n      return Math.pow(b, e);\n    },\n    factor: function factor(n) {\n      n = Number(n);\n      var sign = Math.sign(n);\n      /*store the sign*/\n\n      /*move the number to absolute value*/\n\n      n = Math.abs(n);\n      var ifactors = Math2.ifactor(n);\n      var factors = new Symbol();\n      factors.symbols = {};\n      factors.group = CB;\n\n      for (var x in ifactors) {\n        var factor = new Symbol(1);\n        factor.group = P;\n        /*cheat a little*/\n\n        factor.value = x;\n        factor.power = new Symbol(ifactors[x]);\n        factors.symbols[x] = factor;\n      }\n\n      factors.updateHash();\n\n      if (n === 1) {\n        factors = new Symbol(n);\n      }\n      /*put back the sign*/\n\n\n      if (sign < 0) factors.negate();\n      return factors;\n    },\n\n    /**\r\n     * Uses trial division\r\n     * @param {Integer} n - the number being factored\r\n     * @param {object} factors -  the factors object\r\n     * @returns {object}\r\n     */\n    sfactor: function sfactor(n, factors) {\n      factors = factors || {};\n      var r = Math.floor(Math.sqrt(n));\n      var lcprime = PRIMES[PRIMES.length - 1];\n      /*a one-time cost... Hopefully ... And don't bother for more than a million*/\n\n      /*takes too long*/\n\n      if (r > lcprime && n < 1e6) generatePrimes(r);\n      var l = PRIMES.length;\n\n      for (var i = 0; i < l; i++) {\n        var prime = PRIMES[i];\n        /*trial division*/\n\n        while (n % prime === 0) {\n          n = n / prime;\n          factors[prime] = (factors[prime] || 0) + 1;\n        }\n      }\n\n      if (n > 1) factors[n] = 1;\n      return factors;\n    },\n\n    /**\r\n     * Pollard's rho\r\n     * @param {Integer} n\r\n     * @returns {object}\r\n     */\n    ifactor: function ifactor(n) {\n      n = String(n);\n      if (n === '0') return {\n        '0': 1\n      };\n      n = new bigInt(n);\n      /*convert to bigInt for safety*/\n\n      var sign = n.sign ? -1 : 1;\n      n = n.abs();\n      var factors = {};\n      /*factor object being returned.*/\n\n      if (n.lt('65536')) {\n        /*less than 2^16 just use trial division*/\n        factors = Math2.sfactor(n, factors);\n      } else {\n        var add = function add(e) {\n          if (!e.isPrime()) {\n            factors = Math2.sfactor(e, factors);\n          } else factors[e] = (factors[e] || 0) + 1;\n        };\n\n        while (!n.abs().equals(1)) {\n          if (n.isPrime()) {\n            add(n);\n            break;\n          } else {\n            var factor;\n\n            (function () {\n              var rho = function rho(c) {\n                var xf = new bigInt(c),\n                    cz = 2,\n                    x = new bigInt(c),\n                    factor = new bigInt(1);\n\n                while (factor.equals(1)) {\n                  for (var i = 0; i <= cz && factor.equals(1); i++) {\n                    x = x.pow(2).add(1).mod(n);\n                    factor = bigInt.gcd(x.minus(xf).abs(), n);\n                  }\n\n                  cz = cz * 2;\n                  xf = x;\n                }\n\n                if (factor.equals(n)) {\n                  return rho(c + 1);\n                }\n\n                return factor;\n              };\n\n              factor = rho(2);\n              add(factor);\n              /*divide out the factor*/\n\n              n = n.divide(factor);\n            })();\n          }\n        }\n      }\n      /*put the sign back*/\n\n\n      if (sign === -1) {\n        var sm = arrayMin(keys(factors));\n        /*/get the smallest number*/\n\n        factors['-' + sm] = factors[sm];\n        delete factors[sm];\n      }\n\n      return factors;\n    },\n    //factors a number into rectangular box. If sides are primes that this will be\n    //their prime factors. e.g. 21 -> (7)(3), 133 -> (7)(19)\n    boxfactor: function boxfactor(n, max) {\n      max = max || 200; //stop after this number of iterations\n\n      var c,\n          r,\n          d = Math.floor(5 / 12 * n),\n          //the divisor\n      i = 0,\n          //number of iterations\n      safety = false;\n\n      while (true) {\n        c = Math.floor(n / d);\n        r = n % d;\n        if (r === 0) break; //we're done\n\n        if (safety) return [n, 1];\n        d = Math.max(r, d - r);\n        i++;\n        safety = i > max;\n      }\n\n      return [c, d, i];\n    },\n    fib: function fib(n) {\n      var sign = Math.sign(n);\n      n = Math.abs(n);\n      sign = even(n) ? sign : Math.abs(sign);\n      var a = 0,\n          b = 1,\n          f = 1;\n\n      for (var i = 2; i <= n; i++) {\n        f = a + b;\n        a = b;\n        b = f;\n      }\n\n      return f * sign;\n    },\n    mod: function mod(x, y) {\n      return x % y;\n    },\n    //http://mathworld.wolfram.com/IntegerPart.html\n    integer_part: function integer_part(x) {\n      var sign = Math.sign(x);\n      return sign * Math.floor(Math.abs(x));\n    },\n    simpson: function simpson(f, a, b, step) {\n      var get_value = function get_value(f, x, side) {\n        var v = f(x);\n        var d = 0.000000000001;\n\n        if (isNaN(v)) {\n          v = f(side === 1 ? x + d : x - d);\n        }\n\n        return v;\n      };\n\n      step = step || 0.0001; //calculate the number of intervals\n\n      var n = Math.abs(Math.floor((b - a) / step)); //simpson's rule requires an even number of intervals. If it's not then add 1\n\n      if (n % 2 !== 0) n++; //get the interval size\n\n      var dx = (b - a) / n; //get x0\n\n      var retval = get_value(f, a, 1); //get the middle part 4x1+2x2+4x3 ...\n      //but first set a flag to see if it's even or odd. \n      //The first one is odd so we start there\n\n      var even = false; //get x1\n\n      var xi = a + dx; //the coefficient\n\n      var c, k; //https://en.wikipedia.org/wiki/Simpson%27s_rule\n\n      for (var i = 1; i < n; i++) {\n        c = even ? 2 : 4;\n        k = c * get_value(f, xi, 1);\n        retval += k; //flip the even flag\n\n        even = !even; //increment xi\n\n        xi += dx;\n      } //add xn\n\n\n      return (retval + get_value(f, xi, 2)) * (dx / 3);\n    },\n\n    /**\r\n     * https://github.com/scijs/integrate-adaptive-simpson\r\n     * @param {Function} f - the function being integrated\r\n     * @param {Number} a - lower bound\r\n     * @param {Number} b - upper bound\r\n     * @param {Number} tol - step width\r\n     * @param {Number} maxdepth\r\n     * @returns {Number}\r\n     */\n    num_integrate: function num_integrate(f, a, b, tol, maxdepth) {\n      if (maxdepth < 0) throw new Error('max depth cannot be negative');\n      /* This algorithm adapted from pseudocode in:*/\n\n      /* http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf*/\n\n      function adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {\n        if (state.nanEncountered) {\n          return NaN;\n        }\n\n        var h, f1, f2, sl, sr, s2, m, V1, V2, err;\n        h = b - a;\n        f1 = f(a + h * 0.25);\n        f2 = f(b - h * 0.25);\n        /* Simple check for NaN:*/\n\n        if (isNaN(f1)) {\n          state.nanEncountered = true;\n          return;\n        }\n        /* Simple check for NaN:*/\n\n\n        if (isNaN(f2)) {\n          state.nanEncountered = true;\n          return;\n        }\n\n        sl = h * (fa + 4 * f1 + fm) / 12;\n        sr = h * (fm + 4 * f2 + fb) / 12;\n        s2 = sl + sr;\n        err = (s2 - V0) / 15;\n\n        if (state.maxDepthCount > 1000 * maxdepth) {\n          return;\n        }\n\n        if (depth > maxdepth) {\n          state.maxDepthCount++;\n          return s2 + err;\n        } else if (Math.abs(err) < tol) {\n          return s2 + err;\n        } else {\n          m = a + h * 0.5;\n          V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);\n\n          if (isNaN(V1)) {\n            state.nanEncountered = true;\n            return NaN;\n          }\n\n          V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);\n\n          if (isNaN(V2)) {\n            state.nanEncountered = true;\n            return NaN;\n          }\n\n          return V1 + V2;\n        }\n      }\n\n      function integrate(f, a, b, tol, maxdepth) {\n        var state = {\n          maxDepthCount: 0,\n          nanEncountered: false\n        };\n\n        if (tol === undefined) {\n          tol = 1e-9;\n        }\n\n        if (maxdepth === undefined) {\n          /*Issue #458 - This was lowered because of performance issues. */\n\n          /*This was suspected from before but is now confirmed with this issue*/\n          maxdepth = 45;\n        }\n\n        var fa = f(a);\n        var fm = f(0.5 * (a + b));\n        var fb = f(b);\n        var V0 = (fa + 4 * fm + fb) * (b - a) / 6;\n        var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);\n\n        if (state.maxDepthCount > 0) {\n          warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');\n        }\n\n        if (state.nanEncountered) {\n          throw new Error('Function does not converge over interval!');\n        }\n\n        return result;\n      }\n\n      var retval;\n\n      try {\n        retval = integrate(f, a, b, tol, maxdepth);\n      } catch (e) {\n        /*fallback to non-adaptive*/\n        return Math2.simpson(f, a, b);\n      }\n\n      return nround(retval, 12);\n    },\n    //https://en.wikipedia.org/wiki/Trigonometric_integral\n    //CosineIntegral\n    Ci: function Ci(x) {\n      var n = 20,\n\n      /*roughly Euler–Mascheroni*/\n      g = 0.5772156649015329,\n          sum = 0;\n\n      for (var i = 1; i < n; i++) {\n        /*cache 2n*/\n        var n2 = 2 * i;\n        sum += Math.pow(-1, i) * Math.pow(x, n2) / (n2 * Math2.factorial(n2));\n      }\n\n      return Math.log(x) + g + sum;\n    },\n\n    /*SineIntegral*/\n    Si: function Si(x) {\n      var n = 20,\n          sum = 0;\n\n      for (var i = 0; i < n; i++) {\n        var n2 = 2 * i;\n        sum += Math.pow(-1, i) * Math.pow(x, n2 + 1) / ((n2 + 1) * Math2.factorial(n2 + 1));\n      }\n\n      return sum;\n    },\n\n    /*ExponentialIntegral*/\n    Ei: function Ei(x) {\n      if (Number(x) === 0) return -Infinity;\n      var n = 30,\n          g = 0.5772156649015328606,\n\n      /*roughly Euler–Mascheroni*/\n      sum = 0;\n\n      for (var i = 1; i < n; i++) {\n        sum += Math.pow(x, i) / (i * Math2.factorial(i));\n      }\n\n      return g + Math.abs(Math.log(x)) + sum;\n    },\n\n    /*Hyperbolic Sine Integral*/\n\n    /*http://mathworld.wolfram.com/Shi.html*/\n    Shi: function Shi(x) {\n      var n = 30,\n          sum = 0,\n          k,\n          t;\n\n      for (var i = 0; i < n; i++) {\n        k = 2 * i;\n        t = k + 1;\n        sum += Math.pow(x, t) / (t * t * Math2.factorial(k));\n      }\n\n      return sum;\n    },\n\n    /*the cosine integral function*/\n    Chi: function Chi(x) {\n      var dx, g, f;\n      dx = 0.001;\n      g = 0.5772156649015328606;\n\n      f = function f(t) {\n        return (Math.cosh(t) - 1) / t;\n      };\n\n      return Math.log(x) + g + Math2.num_integrate(f, 0.002, x, dx);\n    },\n\n    /*the log integral*/\n    Li: function Li(x) {\n      return Math2.Ei(Math2.bigLog(x));\n    },\n\n    /*the gamma incomplete function*/\n    gamma_incomplete: function gamma_incomplete(n, x) {\n      var t = n - 1,\n          sum = 0,\n          x = x || 0;\n\n      for (var i = 0; i < t; i++) {\n        sum += Math.pow(x, i) / Math2.factorial(i);\n      }\n\n      return Math2.factorial(t) * Math.exp(-x) * sum;\n    },\n\n    /*\r\n     * Heaviside step function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n     * Specification : http://mathworld.wolfram.com/HeavisideStepFunction.html\r\n     * if x > 0 then 1\r\n     * if x == 0 then 1/2\r\n     * if x < 0 then 0\r\n     */\n    step: function step(x) {\n      if (x > 0) return 1;\n      if (x < 0) return 0;\n      return 0.5;\n    },\n\n    /*\r\n     * Rectangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n     * Specification : http://mathworld.wolfram.com/RectangleFunction.html\r\n     * if |x| > 1/2 then 0\r\n     * if |x| == 1/2 then 1/2\r\n     * if |x| < 1/2 then 1\r\n     */\n    rect: function rect(x) {\n      var x = Math.abs(x);\n      if (x === 0.5) return x;\n      if (x > 0.5) return 0;\n      return 1;\n    },\n\n    /*\r\n     * Sinc function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n     * Specification : http://mathworld.wolfram.com/SincFunction.html\r\n     * if x == 0 then 1\r\n     * otherwise sin(x)/x\r\n     */\n    sinc: function sinc(x) {\n      if (x.equals(0)) return 1;\n      return Math.sin(x) / x;\n    },\n\n    /*\r\n     * Triangle function - Moved from Special.js (originally contributed by Brosnan Yuen)\r\n     * Specification : http://mathworld.wolfram.com/TriangleFunction.html\r\n     * if |x| >= 1 then 0\r\n     * if |x| < then 1-|x|\r\n     */\n    tri: function tri(x) {\n      x = Math.abs(x);\n      if (x >= 1) return 0;\n      return 1 - x;\n    },\n    //https://en.wikipedia.org/wiki/Nth_root_algorithm\n    nthroot: function nthroot(A, n) {\n      /*make sure the input is of type Frac*/\n      if (!(A instanceof Frac)) A = new Frac(A.toString());\n      if (!(n instanceof Frac)) n = new Frac(n.toString());\n      if (n.equals(1)) return A;\n      /*begin algorithm*/\n\n      var xk = A.divide(new Frac(2));\n      /*x0*/\n\n      var e = new Frac(1e-15);\n      var dk, dk0, d0;\n      var a = n.clone().invert(),\n          b = n.subtract(new Frac(1));\n\n      do {\n        var powb = Math2.bigpow(xk, b);\n        var dk_dec = a.multiply(A.divide(powb).subtract(xk)).toDecimal(25);\n        dk = Frac.create(dk_dec);\n        if (d0) break;\n        xk = xk.add(dk);\n        /*check to see if there's no change from the last xk*/\n\n        var dk_dec = dk.toDecimal();\n        d0 = dk0 ? dk0 === dk_dec : false;\n        dk0 = dk_dec;\n      } while (dk.abs().gte(e));\n\n      return xk;\n    },\n\n    /*https://gist.github.com/jiggzson/0c5b33cbcd7b52b36132b1e96573285f*/\n\n    /*Just the square root function but big :)*/\n    sqrt: function sqrt(n) {\n      if (!(n instanceof Frac)) n = new Frac(n);\n      var xn, d, ld, same_delta;\n      var c = 0;\n      /*counter*/\n\n      var done = false;\n      var delta = new Frac(1e-20);\n      xn = n.divide(new Frac(2));\n      var safety = 1000;\n\n      do {\n        /*break if we're not converging*/\n        if (c > safety) throw new Error('Unable to calculate square root for ' + n);\n        xn = xn.add(n.divide(xn)).divide(new Frac(2));\n        xn = new Frac(xn.decimal(30));\n        /*get the difference from the true square*/\n\n        d = n.subtract(xn.multiply(xn));\n        /*if the square of the calculated number is close enough to the number*/\n\n        /*we're getting the square root or the last delta was the same as the new delta*/\n\n        /*then we're done*/\n\n        same_delta = ld ? ld.equals(d) : false;\n        if (d.clone().abs().lessThan(delta) || same_delta) done = true;\n        /*store the calculated delta*/\n\n        ld = d;\n        c++;\n        /*increase the counter*/\n      } while (!done);\n\n      return xn;\n    }\n  }; //link the Math2 object to Settings.FUNCTION_MODULES\n\n  Settings.FUNCTION_MODULES.push(Math2);\n  reserveNames(Math2); //reserve the names in Math2\n  //Polyfills ==================================================================== \n  //https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/\n\n  Math.sign = Math.sign || function (x) {\n    x = +x; // convert to a number\n\n    if (x === 0 || isNaN(x)) {\n      return x;\n    }\n\n    return x > 0 ? 1 : -1;\n  };\n\n  Math.cosh = Math.cosh || function (x) {\n    var y = Math.exp(x);\n    return (y + 1 / y) / 2;\n  };\n\n  Math.sech = Math.sech || function (x) {\n    return 1 / Math.cosh(x);\n  };\n\n  Math.csch = Math.csch || function (x) {\n    return 1 / Math.sinh(x);\n  };\n\n  Math.coth = Math.coth || function (x) {\n    return 1 / Math.tanh(x);\n  };\n\n  Math.sinh = Math.sinh || function (x) {\n    var y = Math.exp(x);\n    return (y - 1 / y) / 2;\n  };\n\n  Math.tanh = Math.tanh || function (x) {\n    if (x === Infinity) {\n      return 1;\n    } else if (x === -Infinity) {\n      return -1;\n    } else {\n      var y = Math.exp(2 * x);\n      return (y - 1) / (y + 1);\n    }\n  };\n\n  Math.asinh = Math.asinh || function (x) {\n    if (x === -Infinity) {\n      return x;\n    } else {\n      return Math.log(x + Math.sqrt(x * x + 1));\n    }\n  };\n\n  Math.acosh = Math.acosh || function (x) {\n    return Math.log(x + Math.sqrt(x * x - 1));\n  };\n\n  Math.atanh = Math.atanh || function (x) {\n    return Math.log((1 + x) / (1 - x)) / 2;\n  };\n\n  Math.log10 = Math.log10 || function (x) {\n    return Math.log(x) * Math.LOG10E;\n  };\n\n  Math.trunc = Math.trunc || function (x) {\n    if (isNaN(x)) {\n      return NaN;\n    }\n\n    if (x > 0) {\n      return Math.floor(x);\n    }\n\n    return Math.ceil(x);\n  }; //Global functions ============================================================= \n\n  /**\r\n   * This method will return a hash or a text representation of a Symbol, Matrix, or Vector. \r\n   * If all else fails it *assumes* the object has a toString method and will call that.\r\n   * \r\n   * @param {Object} obj\r\n   * @param {String} option get is as a hash \r\n   * @param {int} useGroup\r\n   * @returns {String}\r\n   */\n\n\n  function _text(obj, option, useGroup, decp) {\n    var asHash = option === 'hash',\n        //whether to wrap numbers in brackets\n    wrapCondition = undefined,\n        opt = asHash ? undefined : option,\n        asDecimal = opt === 'decimal' || opt === 'decimals';\n    if (asDecimal && typeof decp === 'undefined') decp = 16;\n\n    function toString(obj) {\n      switch (option) {\n        case 'decimals':\n        case 'decimal':\n          wrapCondition = wrapCondition || function (str) {\n            return false;\n          };\n\n          return obj.valueOf();\n\n        case 'recurring':\n          wrapCondition = wrapCondition || function (str) {\n            return str.indexOf(\"'\") !== -1;\n          };\n\n          var str = obj.toString(); //verify that the string is actually a fraction\n\n          var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\n          if (frac.length === 0) return str; //split the fraction into the numerator and denominator\n\n          var parts = frac[0].split('/');\n          var negative = false;\n          var m = Number(parts[0]);\n\n          if (m < 0) {\n            m = -m;\n            negative = true;\n          }\n\n          var n = Number(parts[1]);\n          if (!n) n = 1; //https://softwareengineering.stackexchange.com/questions/192070/what-is-a-efficient-way-to-find-repeating-decimal#comment743574_192081\n\n          var quotient = Math.floor(m / n),\n              c = 10 * (m - quotient * n);\n          quotient = quotient.toString() + \".\";\n\n          while (c && c < n) {\n            c *= 10;\n            quotient += \"0\";\n          }\n\n          var digits = \"\",\n              passed = [],\n              i = 0;\n\n          while (true) {\n            if (typeof passed[c] !== 'undefined') {\n              var prefix = digits.slice(0, passed[c]),\n                  cycle = digits.slice(passed[c]),\n                  result = quotient + prefix + \"'\" + cycle + \"'\";\n              return (negative ? \"-\" : \"\") + result.replace(\"'0'\", \"\").replace(/\\.$/, \"\");\n            }\n\n            var q = Math.floor(c / n),\n                r = c - q * n;\n            passed[c] = i;\n            digits += q.toString();\n            i += 1;\n            c = 10 * r;\n          }\n\n        case 'mixed':\n          wrapCondition = wrapCondition || function (str) {\n            return str.indexOf('/') !== -1;\n          };\n\n          var str = obj.toString(); //verify that the string is actually a fraction\n\n          var frac = /^-?\\d+(?:\\/\\d+)?$/.exec(str);\n          if (frac.length === 0) return str; //split the fraction into the numerator and denominator\n\n          var parts = frac[0].split('/');\n          var numer = new bigInt(parts[0]);\n          var denom = new bigInt(parts[1]);\n          if (denom.equals(0)) denom = new bigInt(1); //return the quotient plus the remainder\n\n          var divmod = numer.divmod(denom);\n          var quotient = divmod.quotient;\n          var remainder = divmod.remainder;\n          var operator = parts[0][0] === '-' || quotient.equals(0) || remainder.equals(0) ? '' : '+';\n          return (quotient.equals(0) ? '' : quotient.toString()) + operator + (remainder.equals(0) ? '' : remainder.toString() + '/' + parts[1]);\n\n        default:\n          wrapCondition = wrapCondition || function (str) {\n            return str.indexOf('/') !== -1;\n          };\n\n          return obj.toString();\n      }\n    } //if the object is a symbol\n\n\n    if (isSymbol(obj)) {\n      var multiplier = '',\n          power = '',\n          sign = '',\n          group = obj.group || useGroup,\n          value = obj.value; //if the value is to be used as a hash then the power and multiplier need to be suppressed\n\n      if (!asHash) {\n        //use asDecimal to get the object back as a decimal\n        var om = toString(obj.multiplier);\n\n        if (om == '-1') {\n          sign = '-';\n          om = '1';\n        } //only add the multiplier if it's not 1\n\n\n        if (om != '1') multiplier = om; //use asDecimal to get the object back as a decimal\n\n        var p = obj.power ? toString(obj.power) : ''; //only add the multiplier \n\n        if (p != '1') {\n          //is it a symbol\n          if (isSymbol(p)) {\n            power = _text(p, opt);\n          } else {\n            power = p;\n          }\n        }\n      }\n\n      switch (group) {\n        case N:\n          multiplier = ''; //round if requested\n\n          var m = decp && asDecimal ? obj.multiplier.toDecimal(decp) : toString(obj.multiplier); //if it's numerical then all we need is the multiplier\n\n          value = obj.multiplier == '-1' ? '1' : m;\n          power = '';\n          break;\n\n        case PL:\n          value = obj.collectSymbols().map(function (x) {\n            var txt = _text(x, opt, useGroup, decp);\n\n            if (txt == '0') txt = '';\n            return txt;\n          }).sort().join('+').replace(/\\+\\-/g, '-');\n          break;\n\n        case CP:\n          value = obj.collectSymbols().map(function (x) {\n            var txt = _text(x, opt, useGroup, decp);\n\n            if (txt == '0') txt = '';\n            return txt;\n          }).sort().join('+').replace(/\\+\\-/g, '-');\n          break;\n\n        case CB:\n          value = obj.collectSymbols(function (symbol) {\n            var g = symbol.group; //both groups will already be in brackets if their power is greater than 1\n            //so skip it.\n\n            if ((g === PL || g === CP) && symbol.power.equals(1) && symbol.multiplier.equals(1)) {\n              return inBrackets(_text(symbol, opt));\n            }\n\n            return _text(symbol, opt);\n          }).join('*');\n          break;\n\n        case EX:\n          var pg = obj.previousGroup,\n              pwg = obj.power.group; //PL are the exception. It's simpler to just collect and set the value\n\n          if (pg === PL) value = obj.collectSymbols(_text, opt).join('+').replace('+-', '-');\n\n          if (!(pg === N || pg === S || pg === FN) && !asHash) {\n            value = inBrackets(value);\n          }\n\n          if ((pwg === CP || pwg === CB || pwg === PL || obj.power.multiplier.toString() != '1') && power) {\n            power = inBrackets(power);\n          }\n\n          break;\n      }\n\n      if (group === FN) {\n        value = obj.fname + inBrackets(obj.args.map(function (symbol) {\n          return _text(symbol, opt);\n        }).join(','));\n      } //TODO: Needs to be more efficient. Maybe. \n\n\n      if (group === FN && obj.fname in CUSTOM_OPERATORS) {\n        var a = _text(obj.args[0]);\n\n        var b = _text(obj.args[1]);\n\n        if (obj.args[0].isComposite()) //preserve the brackets\n          a = inBrackets(a);\n        if (obj.args[1].isComposite()) //preserve the brackets\n          b = inBrackets(b);\n        value = a + CUSTOM_OPERATORS[obj.fname] + b;\n      } //wrap the power since / is less than ^\n      //TODO: introduce method call isSimple\n\n\n      if (power && group !== EX && wrapCondition(power)) {\n        power = inBrackets(power);\n      } //the following groups are held together by plus or minus. They can be raised to a power or multiplied\n      //by a multiplier and have to be in brackets to preserve the order of precedence\n\n\n      if ((group === CP || group === PL) && (multiplier && multiplier != '1' || sign === '-') || (group === CB || group === CP || group === PL) && power && power != '1' || !asHash && group === P && value == -1 || obj.fname === PARENTHESIS) {\n        value = inBrackets(value);\n      }\n\n      if (decp && (option === 'decimal' || option === 'decimals' && multiplier)) multiplier = nround(multiplier, decp); //add the sign back\n\n      var c = sign + multiplier;\n      if (multiplier && wrapCondition(multiplier)) c = inBrackets(c);\n      if (power < 0) power = inBrackets(power); //add the multiplication back\n\n      if (multiplier) c = c + '*';\n      if (power) power = Settings.POWER_OPERATOR + power; //this needs serious rethinking. Must fix\n\n      if (group === EX && value.charAt(0) === '-') value = inBrackets(value);\n      var cv = c + value;\n      if (obj.parens) cv = inBrackets(cv);\n      return cv + power;\n    } else if (isVector(obj)) {\n      var l = obj.elements.length,\n          c = [];\n\n      for (var i = 0; i < l; i++) {\n        c.push(obj.elements[i].text(option));\n      }\n\n      return '[' + c.join(',') + ']';\n    } else {\n      try {\n        return obj.toString();\n      } catch (e) {\n        return '';\n      }\n    }\n  }\n  /**\r\n   * Calculates prime factors for a number\r\n   * @param {int} num\r\n   * @returns {Array}\r\n   */\n\n\n  function primeFactors(num) {\n    if (isPrime(num)) return [num];\n    var l = num,\n        i = 1,\n        factors = [],\n        epsilon = 2.2204460492503130808472633361816E-16;\n\n    while (i < l) {\n      var quotient = num / i;\n      var whole = Math.floor(quotient);\n      var remainder = quotient - whole;\n\n      if (remainder <= epsilon && i > 1) {\n        if (PRIMES.indexOf(i) !== -1) PRIMES[i] = i;\n        factors.push(i);\n        l = whole;\n      }\n\n      i++;\n    }\n\n    return factors.sort(function (a, b) {\n      return a - b;\n    });\n  }\n\n  ; //Expression ===================================================================   \n\n  /** \r\n   * This is what nerdamer returns. It's sort of a wrapper around the symbol class and \r\n   * provides the user with some useful functions. If you want to provide the user with extra\r\n   * library functions then add them to this class's prototype.\r\n   * @param {Symbol} symbol\r\n   * @returns {Expression} wraps around the Symbol class\r\n   */\n\n  function Expression(symbol) {\n    //we don't want arrays wrapped\n    this.symbol = symbol;\n  }\n  /**\r\n   * Returns stored expression at index. For first index use 1 not 0.\r\n   * @param {bool} asType  \r\n   * @param {Integer} expression_number \r\n   */\n\n\n  Expression.getExpression = function (expression_number, asType) {\n    if (expression_number === 'last' || !expression_number) expression_number = EXPRESSIONS.length;\n    if (expression_number === 'first') expression_number = 1;\n    var index = expression_number - 1,\n        expression = EXPRESSIONS[index],\n        retval = expression ? new Expression(expression) : expression;\n    return retval;\n  };\n\n  Expression.prototype = {\n    /**\r\n     * Returns the text representation of the expression\r\n     * @param {String} opt - option of formatting numbers\r\n     * @param {Number} n The number of significant figures\r\n     * @returns {String}\r\n     */\n    text: function text(opt, n) {\n      n = n || 19;\n      opt = opt || 'decimals';\n      if (this.symbol.text_) return this.symbol.text_(opt);\n      return _text(this.symbol, opt, undefined, n);\n    },\n\n    /**\r\n     * Returns the latex representation of the expression\r\n     * @param {String} option - option for formatting numbers\r\n     * @returns {String}\r\n     */\n    latex: function latex(option) {\n      if (this.symbol.latex) return this.symbol.latex(option);\n      return LaTeX.latex(this.symbol, option);\n    },\n    valueOf: function valueOf() {\n      return this.symbol.valueOf();\n    },\n\n    /**\r\n     * Evaluates the expression and tries to reduce it to a number if possible.\r\n     * If an argument is given in the form of %{integer} it will evaluate that expression.\r\n     * Other than that it will just use it's own text and reparse\r\n     * @returns {Expression}\r\n     */\n    evaluate: function evaluate() {\n      var first_arg = arguments[0],\n          expression,\n          idx = 1; //Enable getting of expressions using the % so for example %1 should get the first expression\n\n      if (typeof first_arg === 'string') {\n        expression = first_arg.charAt(0) === '%' ? Expression.getExpression(first_arg.substr(1)).text() : first_arg;\n      } else if (first_arg instanceof Expression || isSymbol(first_arg)) {\n        expression = first_arg.text();\n      } else {\n        expression = this.symbol.text();\n        idx--;\n      }\n\n      var subs = arguments[idx] || {};\n      return new Expression(block('PARSE2NUMBER', function () {\n        return _.parse(expression, subs);\n      }, true));\n    },\n\n    /**\r\n     * Converts a symbol to a JS function. Pass in an array of variables to use that order instead of \r\n     * the default alphabetical order\r\n     * @param vars {Array}\r\n     */\n    buildFunction: function buildFunction(vars) {\n      return Build.build(this.symbol, vars);\n    },\n\n    /**\r\n     * Checks to see if the expression is just a plain old number\r\n     * @returns {boolean}\r\n     */\n    isNumber: function isNumber() {\n      return isNumericSymbol(this.symbol);\n    },\n\n    /**\r\n     * Checks to see if the expression is infinity\r\n     * @returns {boolean}\r\n     */\n    isInfinity: function isInfinity() {\n      return Math.abs(this.symbol.multiplier) === Infinity;\n    },\n\n    /**\r\n     * Returns all the variables in the expression\r\n     * @returns {Array}\r\n     */\n    variables: function variables() {\n      return _variables(this.symbol);\n    },\n    toString: function toString() {\n      try {\n        if (isArray(this.symbol)) return '[' + this.symbol.toString() + ']';\n        return this.symbol.toString();\n      } catch (e) {\n        return '';\n      }\n    },\n    //forces the symbol to be returned as a decimal\n    toDecimal: function toDecimal(prec) {\n      Settings.precision = prec;\n\n      var dec = _text(this.symbol, 'decimals');\n\n      Settings.precision = undefined;\n      return dec;\n    },\n    //checks to see if the expression is a fraction\n    isFraction: function isFraction() {\n      return _isFraction(this.symbol);\n    },\n    //checks to see if the symbol is a multivariate polynomial\n    isPolynomial: function isPolynomial() {\n      return this.symbol.isPoly();\n    },\n    //performs a substitution\n    sub: function sub(symbol, for_symbol) {\n      return new Expression(this.symbol.sub(_.parse(symbol), _.parse(for_symbol)));\n    },\n    operation: function operation(otype, symbol) {\n      if (isExpression(symbol)) symbol = symbol.symbol;else if (!isSymbol(symbol)) symbol = _.parse(symbol);\n      return new Expression(_[otype](this.symbol.clone(), symbol.clone()));\n    },\n    add: function add(symbol) {\n      return this.operation('add', symbol);\n    },\n    subtract: function subtract(symbol) {\n      return this.operation('subtract', symbol);\n    },\n    multiply: function multiply(symbol) {\n      return this.operation('multiply', symbol);\n    },\n    divide: function divide(symbol) {\n      return this.operation('divide', symbol);\n    },\n    pow: function pow(symbol) {\n      return this.operation('pow', symbol);\n    },\n    expand: function expand() {\n      return new Expression(_.expand(this.symbol));\n    },\n    each: function each(callback, i) {\n      if (this.symbol.each) this.symbol.each(callback, i);else if (isArray(this.symbol)) {\n        for (var i = 0; i < this.symbol.length; i++) {\n          callback.call(this.symbol, this.symbol[i], i);\n        }\n      } else callback.call(this.symbol);\n    },\n    eq: function eq(value) {\n      if (!isSymbol(value)) value = _.parse(value);\n\n      try {\n        var d = _.subtract(this.symbol.clone(), value);\n\n        return d.equals(0);\n      } catch (e) {\n        return false;\n      }\n\n      ;\n    },\n    lt: function lt(value) {\n      if (!isSymbol(value)) value = _.parse(value);\n\n      try {\n        var d = evaluate(_.subtract(this.symbol.clone(), value));\n        return d.lessThan(0);\n      } catch (e) {\n        return false;\n      }\n\n      ;\n    },\n    gt: function gt(value) {\n      if (!isSymbol(value)) value = _.parse(value);\n\n      try {\n        var d = evaluate(_.subtract(this.symbol.clone(), value));\n        return d.greaterThan(0);\n      } catch (e) {\n        return false;\n      }\n\n      ;\n    },\n    gte: function gte(value) {\n      return this.gt(value) || this.eq(value);\n    },\n    lte: function lte(value) {\n      return this.lt(value) || this.eq(value);\n    },\n    numerator: function numerator() {\n      return new Expression(this.symbol.getNum());\n    },\n    denominator: function denominator() {\n      return new Expression(this.symbol.getDenom());\n    },\n    hasFunction: function hasFunction(f) {\n      return this.symbol.containsFunction(f);\n    },\n    contains: function contains(variable) {\n      return this.symbol.contains(variable);\n    }\n  }; //Aliases\n\n  Expression.prototype.toTeX = Expression.prototype.latex; //Scientific ===================================================================  \n\n  function Scientific(num) {\n    if (!(this instanceof Scientific)) return new Scientific(num);\n    num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\n    //remove the sign\n\n    if (num.startsWith('-')) {\n      this.sign = -1; //remove the sign\n\n      num = num.substr(1, num.length);\n    } else {\n      this.sign = 1;\n    }\n\n    if (Scientific.isScientific(num)) {\n      this.fromScientific(num);\n    } else {\n      this.convert(num);\n    }\n\n    return this;\n  }\n\n  Scientific.prototype = {\n    fromScientific: function fromScientific(num) {\n      var parts = String(num).toLowerCase().split('e');\n      this.coeff = parts[0];\n      this.exponent = parts[1];\n      return this;\n    },\n    convert: function convert(num) {\n      //get wholes and decimals\n      var parts = num.split('.'); //make zero go away\n\n      var w = parts[0] || '';\n      var d = parts[1] || ''; //convert zero to blank strings\n\n      w = Scientific.removeLeadingZeroes(w);\n      d = Scientific.removeTrailingZeroes(d); //find the location of the decimal place which is right after the wholes\n\n      var dot_location = w.length; //add them together so we can move the dot\n\n      var n = w + d; //find the next number\n\n      var zeroes = Scientific.leadingZeroes(n).length; //set the exponent\n\n      this.exponent = dot_location - (zeroes + 1); //set the coeff but first remove leading zeroes\n\n      var coeff = Scientific.removeLeadingZeroes(n);\n      this.coeff = coeff.charAt(0) + '.' + (coeff.substr(1, coeff.length) || '0');\n      return this;\n    },\n    round: function round(num) {\n      var n = this.copy();\n      num = Number(num); //cast to number for safety\n      //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\n      //we can round based on this\n\n      if (num === 0) n.coeff = n.coeff.charAt(0);else {\n        //get up to n-1 digits\n        var rounded = this.coeff.substring(0, num + 1); //get the next two\n\n        var next_two = this.coeff.substring(num + 1, num + 3); //the extra digit\n\n        var ed = next_two.charAt(0);\n        if (next_two.charAt(1) > 4) ed++;\n        n.coeff = rounded + ed;\n      }\n      return n;\n    },\n    copy: function copy() {\n      var n = new Scientific(0);\n      n.coeff = this.coeff;\n      n.exponent = this.exponent;\n      n.sign = this.sign;\n      return n;\n    },\n    toString: function toString(n) {\n      var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, n);\n      return (this.sign === -1 ? '-' : '') + coeff + 'e' + this.exponent;\n    }\n  };\n\n  Scientific.isScientific = function (num) {\n    return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\n  };\n\n  Scientific.leadingZeroes = function (num) {\n    var match = num.match(/^(0*).*$/);\n    return match ? match[1] : '';\n  };\n\n  Scientific.removeLeadingZeroes = function (num) {\n    var match = num.match(/^0*(.*)$/);\n    return match ? match[1] : '';\n  };\n\n  Scientific.removeTrailingZeroes = function (num) {\n    var match = num.match(/0*$/);\n    return match ? num.substring(0, num.length - match[0].length) : '';\n  };\n\n  Scientific.round = function (c, n) {\n    var coeff = nround(c, n);\n    var m = String(coeff).split('.').pop();\n    var d = n - m.length; //if we're asking for more significant figures\n\n    if (d > 0) {\n      coeff = coeff + new Array(d + 1).join(0);\n    }\n\n    return coeff;\n  }; //Scientific ===================================================================\n\n  /*\r\n   * Javascript has the toExponential method but this allows you to work with string and therefore any number of digits of your choosing\r\n   * For example Scientific('464589498449496467924197545625247695464569568959124568489548454');\r\n   */\n\n\n  function Scientific(num) {\n    if (!(this instanceof Scientific)) return new Scientific(num);\n    num = String(typeof num === 'undefined' ? 0 : num); //convert to a string\n    //remove the sign\n\n    if (num.startsWith('-')) {\n      this.sign = -1; //remove the sign\n\n      num = num.substr(1, num.length);\n    } else {\n      this.sign = 1;\n    }\n\n    if (Scientific.isScientific(num)) {\n      this.fromScientific(num);\n    } else {\n      this.convert(num);\n    }\n\n    return this;\n  }\n\n  Scientific.prototype = {\n    fromScientific: function fromScientific(num) {\n      var parts = String(num).toLowerCase().split('e');\n      this.coeff = parts[0];\n      this.exponent = parts[1];\n      return this;\n    },\n    convert: function convert(num) {\n      //get wholes and decimals\n      var parts = num.split('.'); //make zero go away\n\n      var w = parts[0] || '';\n      var d = parts[1] || ''; //convert zero to blank strings\n\n      w = Scientific.removeLeadingZeroes(w);\n      d = Scientific.removeTrailingZeroes(d); //find the location of the decimal place which is right after the wholes\n\n      var dot_location = w.length; //add them together so we can move the dot\n\n      var n = w + d; //find the next number\n\n      var zeroes = Scientific.leadingZeroes(n).length; //set the exponent\n\n      this.exponent = dot_location - (zeroes + 1); //set the coeff but first remove leading zeroes\n\n      var coeff = Scientific.removeLeadingZeroes(n);\n      this.coeff = coeff.charAt(0) + '.' + (coeff.substr(1, coeff.length) || '0');\n      return this;\n    },\n    round: function round(num) {\n      var n = this.copy();\n      num = Number(num); //cast to number for safety\n      //since we know it guaranteed to be in the format {digit}{optional dot}{optional digits}\n      //we can round based on this\n\n      if (num === 0) n.coeff = n.coeff.charAt(0);else {\n        //get up to n-1 digits\n        var rounded = this.coeff.substring(0, num + 1); //get the next two\n\n        var next_two = this.coeff.substring(num + 1, num + 3); //the extra digit\n\n        var ed = next_two.charAt(0);\n        if (next_two.charAt(1) > 4) ed++;\n        n.coeff = rounded + ed;\n      }\n      return n;\n    },\n    copy: function copy() {\n      var n = new Scientific(0);\n      n.coeff = this.coeff;\n      n.exponent = this.exponent;\n      n.sign = this.sign;\n      return n;\n    },\n    toString: function toString(n) {\n      var coeff = typeof n === 'undefined' ? this.coeff : Scientific.round(this.coeff, n);\n      return (this.sign === -1 ? '-' : '') + coeff + 'e' + this.exponent;\n    }\n  };\n\n  Scientific.isScientific = function (num) {\n    return /\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(num);\n  };\n\n  Scientific.leadingZeroes = function (num) {\n    var match = num.match(/^(0*).*$/);\n    return match ? match[1] : '';\n  };\n\n  Scientific.removeLeadingZeroes = function (num) {\n    var match = num.match(/^0*(.*)$/);\n    return match ? match[1] : '';\n  };\n\n  Scientific.removeTrailingZeroes = function (num) {\n    var match = num.match(/0*$/);\n    return match ? num.substring(0, num.length - match[0].length) : '';\n  }; //Frac =========================================================================    \n\n\n  function Frac(n) {\n    if (n instanceof Frac) return n;\n    if (n === undefined) return this;\n\n    try {\n      if (isInt(n)) {\n        try {\n          this.num = bigInt(n);\n          this.den = bigInt(1);\n        } catch (e) {\n          return Frac.simple(n);\n        }\n      } else {\n        var frac = Fraction.convert(n);\n        this.num = new bigInt(frac[0]);\n        this.den = new bigInt(frac[1]);\n      }\n    } catch (e) {\n      return Frac.simple(n);\n    }\n  } //safe to use with negative numbers or other types\n\n\n  Frac.create = function (n) {\n    if (n instanceof Frac) return n;\n    n = n.toString();\n    var is_neg = n.charAt(0) === '-'; //check if it's negative\n\n    if (is_neg) n = n.substr(1, n.length - 1); //remove the sign\n\n    var frac = new Frac(n); //put the sign back\n\n    if (is_neg) frac.negate();\n    return frac;\n  };\n\n  Frac.isFrac = function (o) {\n    return o instanceof Frac;\n  };\n\n  Frac.quick = function (n, d) {\n    var frac = new Frac();\n    frac.num = new bigInt(n);\n    frac.den = new bigInt(d);\n    return frac;\n  };\n\n  Frac.simple = function (n) {\n    var nstr = String(scientificToDecimal(n)),\n        m_dc = nstr.split('.'),\n        num = m_dc.join(''),\n        den = 1,\n        l = (m_dc[1] || '').length;\n\n    for (var i = 0; i < l; i++) {\n      den += '0';\n    }\n\n    var frac = Frac.quick(num, den);\n    return frac.simplify();\n  };\n\n  Frac.prototype = {\n    multiply: function multiply(m) {\n      if (this.isOne()) {\n        return m.clone();\n      }\n\n      if (m.isOne()) {\n        return this.clone();\n      }\n\n      var c = this.clone();\n      c.num = c.num.multiply(m.num);\n      c.den = c.den.multiply(m.den);\n      return c.simplify();\n    },\n    divide: function divide(m) {\n      if (m.equals(0)) throw new DivisionByZero('Division by zero not allowed!');\n      return this.clone().multiply(m.clone().invert()).simplify();\n    },\n    subtract: function subtract(m) {\n      return this.clone().add(m.clone().neg());\n    },\n    neg: function neg() {\n      this.num = this.num.multiply(-1);\n      return this;\n    },\n    add: function add(m) {\n      var n1 = this.den,\n          n2 = m.den,\n          c = this.clone();\n      var a = c.num,\n          b = m.num;\n\n      if (n1.equals(n2)) {\n        c.num = a.add(b);\n      } else {\n        c.num = a.multiply(n2).add(b.multiply(n1));\n        c.den = n1.multiply(n2);\n      }\n\n      return c.simplify();\n    },\n    mod: function mod(m) {\n      var a = this.clone(),\n          b = m.clone(); //make their denominators even and return the mod of their numerators\n\n      a.num = a.num.multiply(b.den);\n      a.den = a.den.multiply(b.den);\n      b.num = b.num.multiply(this.den);\n      b.den = b.den.multiply(this.den);\n      a.num = a.num.mod(b.num);\n      return a.simplify();\n    },\n    simplify: function simplify() {\n      var gcd = bigInt.gcd(this.num, this.den);\n      this.num = this.num.divide(gcd);\n      this.den = this.den.divide(gcd);\n      return this;\n    },\n    clone: function clone() {\n      var m = new Frac();\n      m.num = new bigInt(this.num);\n      m.den = new bigInt(this.den);\n      return m;\n    },\n    decimal: function decimal(prec) {\n      var sign = this.num.isNegative() ? '-' : '';\n\n      if (this.num.equals(this.den)) {\n        return '1';\n      } //go plus one for rounding\n\n\n      prec = prec || Settings.PRECISION;\n      prec++;\n      var narr = [],\n          n = this.num.abs(),\n          d = this.den;\n\n      for (var i = 0; i < prec; i++) {\n        var w = n.divide(d),\n            //divide out whole\n        r = n.subtract(w.multiply(d)); //get remainder\n\n        narr.push(w);\n        if (r.equals(0)) break;\n        n = r.times(10); //shift one dec place\n      }\n\n      var whole = narr.shift();\n\n      if (narr.length === 0) {\n        return sign + whole.toString();\n      }\n\n      if (i === prec) {\n        var lt = []; //get the last two so we can round it\n\n        for (var i = 0; i < 2; i++) {\n          lt.unshift(narr.pop());\n        } //put the last digit back by rounding the last two\n\n\n        narr.push(Math.round(lt.join('.')));\n      }\n\n      var dec = whole.toString() + '.' + narr.join('');\n      return sign + dec;\n    },\n    toDecimal: function toDecimal(prec) {\n      if (prec || Settings.PRECISION) {\n        return this.decimal(prec);\n      } else return this.num / this.den;\n    },\n    qcompare: function qcompare(n) {\n      return [this.num.multiply(n.den), n.num.multiply(this.den)];\n    },\n    equals: function equals(n) {\n      if (!isNaN(n)) n = new Frac(n);\n      var q = this.qcompare(n);\n      return q[0].equals(q[1]);\n    },\n    absEquals: function absEquals(n) {\n      if (!isNaN(n)) n = new Frac(n);\n      var q = this.qcompare(n);\n      return q[0].abs().equals(q[1]);\n    },\n    //lazy check to be fixed. Sufficient for now but will cause future problems\n    greaterThan: function greaterThan(n) {\n      if (!isNaN(n)) n = new Frac(n);\n      var q = this.qcompare(n);\n      return q[0].gt(q[1]);\n    },\n    gte: function gte(n) {\n      return this.greaterThan(n) || this.equals(n);\n    },\n    lte: function lte(n) {\n      return this.lessThan(n) || this.equals(n);\n    },\n    lessThan: function lessThan(n) {\n      if (!isNaN(n)) n = new Frac(n);\n      var q = this.qcompare(n);\n      return q[0].lt(q[1]);\n    },\n    isInteger: function isInteger() {\n      return this.den.equals(1);\n    },\n    negate: function negate() {\n      this.num = this.num.multiply(-1);\n      return this;\n    },\n    invert: function invert() {\n      var t = this.den; //why invert 0/1? It'll become 1/0 and that's a lie.\n\n      if (!this.num.equals(0)) {\n        var isnegative = this.num.isNegative();\n        this.den = this.num.abs();\n        this.num = t;\n        if (isnegative) this.num = this.num.multiply(-1);\n      }\n\n      return this;\n    },\n    isOne: function isOne() {\n      return this.num.equals(1) && this.den.equals(1);\n    },\n    sign: function sign() {\n      return this.num.isNegative() ? -1 : 1;\n    },\n    abs: function abs() {\n      this.num = this.num.abs();\n      return this;\n    },\n    gcd: function gcd(f) {\n      return Frac.quick(bigInt.gcd(f.num, this.num), bigInt.lcm(f.den, this.den));\n    },\n    toString: function toString() {\n      return !this.den.equals(1) ? this.num.toString() + '/' + this.den.toString() : this.num.toString();\n    },\n    valueOf: function valueOf() {\n      //            if(this.num == 24) throw new Error(999)\n      if (Settings.USE_BIG) return new bigDec(this.num.toString()).div(new bigDec(this.den.toString()));\n      return this.num / this.den;\n    },\n    isNegative: function isNegative() {\n      return this.toDecimal() < 0;\n    }\n  }; //Symbol =======================================================================\n\n  /**\r\n   * All symbols e.g. x, y, z, etc or functions are wrapped in this class. All symbols have a multiplier and a group. \r\n   * All symbols except for \"numbers (group N)\" have a power. \r\n   * @class Primary data type for the Parser. \r\n   * @param {String} obj \r\n   * @returns {Symbol}\r\n   */\n\n  function Symbol(obj) {\n    var isInfinity = obj === 'Infinity'; //this enables the class to be instantiated without the new operator\n\n    if (!(this instanceof Symbol)) {\n      return new Symbol(obj);\n    }\n\n    ; //define numeric symbols\n\n    if (/^(\\-?\\+?\\d+)\\.?\\d*e?\\-?\\+?\\d*/i.test(obj)) {\n      this.group = N;\n      this.value = CONST_HASH;\n      this.multiplier = new Frac(obj);\n    } //define symbolic symbols\n    else {\n        this.group = S;\n        validateName(obj);\n        this.value = obj;\n        this.multiplier = new Frac(1);\n        this.imaginary = obj === Settings.IMAGINARY;\n        this.isInfinity = isInfinity;\n      } //As of 6.0.0 we switched to infinite precision so all objects have a power\n    //Although this is still redundant in constants, it simplifies the logic in\n    //other parts so we'll keep it\n\n\n    this.power = new Frac(1); // Added to silence the strict warning.\n\n    return this;\n  }\n  /**\r\n   * Returns vanilla imaginary symbol\r\n   * @returns {Symbol}\r\n   */\n\n\n  Symbol.imaginary = function () {\n    var s = new Symbol(Settings.IMAGINARY);\n    s.imaginary = true;\n    return s;\n  };\n  /**\r\n   * Return nerdamer's representation of Infinity\r\n   * @param {int} negative -1 to return negative infinity \r\n   * @returns {Symbol} \r\n   */\n\n\n  Symbol.infinity = function (negative) {\n    var v = new Symbol('Infinity');\n    if (negative === -1) v.negate();\n    return v;\n  };\n\n  Symbol.shell = function (group, value) {\n    var symbol = new Symbol(value);\n    symbol.group = group;\n    symbol.symbols = {};\n    symbol.length = 0;\n    return symbol;\n  }; //sqrt(x) -> x^(1/2)\n\n\n  Symbol.unwrapSQRT = function (symbol, all) {\n    var p = symbol.power;\n\n    if (symbol.fname === SQRT && (symbol.isLinear() || all)) {\n      var t = symbol.args[0].clone();\n      t.power = t.power.multiply(new Frac(1 / 2));\n      t.multiplier = t.multiplier.multiply(symbol.multiplier);\n      symbol = t;\n      if (all) symbol.power = p.multiply(new Frac(1 / 2));\n    }\n\n    return symbol;\n  };\n\n  Symbol.hyp = function (a, b) {\n    a = a || new Symbol(0);\n    b = b || new Symbol(0);\n    return _.sqrt(_.add(_.pow(a.clone(), new Symbol(2)), _.pow(b.clone(), new Symbol(2))));\n  }; //converts to polar form array\n\n\n  Symbol.toPolarFormArray = function (symbol) {\n    var re, im, r, theta;\n    re = symbol.realpart();\n    im = symbol.imagpart();\n    r = Symbol.hyp(re, im);\n    theta = re.equals(0) ? _.parse('pi/2') : _.trig.atan(_.divide(im, re));\n    return [r, theta];\n  }; //removes parentheses\n\n\n  Symbol.unwrapPARENS = function (symbol) {\n    if (symbol.fname === '') {\n      var r = symbol.args[0];\n      r.power = r.power.multiply(symbol.power);\n      r.multiplier = r.multiplier.multiply(symbol.multiplier);\n      if (symbol.fname === '') return Symbol.unwrapPARENS(r);\n      return r;\n    }\n\n    return symbol;\n  }; //quickly creates a Symbol\n\n\n  Symbol.create = function (value, power) {\n    power = power === undefined ? 1 : power;\n    return _.parse('(' + value + ')^(' + power + ')');\n  };\n\n  Symbol.prototype = {\n    isSimple: function isSimple() {\n      return this.power.equals(1) && this.multiplier.equals(1);\n    },\n    //returns a clone.\n    powSimp: function powSimp() {\n      if (this.group === CB) {\n        var powers = [],\n            sign = this.multiplier.sign();\n        this.each(function (x) {\n          var p = x.power; //why waste time if I can't do anything anyway\n\n          if (isSymbol(p) || p.equals(1)) return this.clone();\n          powers.push(p);\n        });\n        var min = new Frac(arrayMin(powers)); //handle the coefficient\n        //handle the multiplier\n\n        var sign = this.multiplier.sign(),\n            m = this.multiplier.clone().abs(),\n            mfactors = Math2.ifactor(m); //if we have a multiplier of 6750 and a min of 2 then the factors are 5^3*5^3*2\n        //we can then reduce it to 2*3*5*(15)^2 \n\n        var out_ = new Frac(1);\n        var in_ = new Frac(1);\n\n        for (var x in mfactors) {\n          var n = new Frac(mfactors[x]);\n\n          if (!n.lessThan(min)) {\n            n = n.divide(min).subtract(new Frac(1));\n            in_ = in_.multiply(new Frac(x)); //move the factor inside the bracket\n          }\n\n          out_ = out_.multiply(_.parse(inBrackets(x) + '^' + inBrackets(n)).multiplier);\n        }\n\n        var t = new Symbol(in_);\n        this.each(function (x) {\n          x = x.clone();\n          x.power = x.power.divide(min);\n          t = _.multiply(t, x);\n        });\n\n        var xt = _.symfunction(PARENTHESIS, [t]);\n\n        xt.power = min;\n        xt.multiplier = sign < 0 ? out_.negate() : out_;\n        return xt;\n      }\n\n      return this.clone();\n    },\n\n    /**\r\n     * Checks to see if two functions are of equal value\r\n     * @param {Symbol} symbol\r\n     */\n    equals: function equals(symbol) {\n      if (!isSymbol(symbol)) symbol = new Symbol(symbol);\n      return this.value === symbol.value && this.power.equals(symbol.power) && this.multiplier.equals(symbol.multiplier) && this.group === symbol.group;\n    },\n    abs: function abs() {\n      var e = this.clone();\n      e.multiplier.abs();\n      return e;\n    },\n    // Greater than\n    gt: function gt(symbol) {\n      if (!isSymbol(symbol)) symbol = new Symbol(symbol);\n      return this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\n    },\n    // Greater than\n    gte: function gte(symbol) {\n      if (!isSymbol(symbol)) symbol = new Symbol(symbol);\n      return this.equals(symbol) || this.isConstant() && symbol.isConstant() && this.multiplier.greaterThan(symbol.multiplier);\n    },\n    // Less than\n    lt: function lt(symbol) {\n      if (!isSymbol(symbol)) symbol = new Symbol(symbol);\n      return this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\n    },\n    // Less than\n    lte: function lte(symbol) {\n      if (!isSymbol(symbol)) symbol = new Symbol(symbol);\n      return this.equals(symbol) || this.isConstant() && symbol.isConstant() && this.multiplier.lessThan(symbol.multiplier);\n    },\n\n    /**\r\n     * Because nerdamer doesn't group symbols by polynomials but \r\n     * rather a custom grouping method, this has to be\r\n     * reinserted in order to make use of most algorithms. This function\r\n     * checks if the symbol meets the criteria of a polynomial.\r\n     * @param {bool} multivariate\r\n     * @returns {boolean}\r\n     */\n    isPoly: function isPoly(multivariate) {\n      var g = this.group,\n          p = this.power; //the power must be a integer so fail if it's not\n\n      if (!isInt(p) || p < 0) return false; //constants and first orders\n\n      if (g === N || g === S || this.isConstant(true)) return true;\n\n      var vars = _variables(this);\n\n      if (g === CB && vars.length === 1) {\n        //the variable is assumed the only one that was found\n        var v = vars[0]; //if no variable then guess what!?!? We're done!!! We have a polynomial.\n\n        if (!v) return true;\n\n        for (var x in this.symbols) {\n          var sym = this.symbols[x]; //sqrt(x)\n\n          if (sym.group === FN && !sym.args[0].isConstant()) return false;\n          if (!sym.contains(v) && !sym.isConstant(true)) return false;\n        }\n\n        return true;\n      } //PL groups. These only fail if a power is not an int\n      //this should handle cases such as x^2*t\n\n\n      if (this.isComposite() || g === CB && multivariate) {\n        //fail if we're not checking for multivariate polynomials\n        if (!multivariate && vars.length > 1) return false; //loop though the symbols and check if they qualify\n\n        for (var x in this.symbols) {\n          //we've already the symbols if we're not checking for multivariates at this point\n          //so we check the sub-symbols\n          if (!this.symbols[x].isPoly(multivariate)) return false;\n        }\n\n        return true;\n      } else return false;\n      /*\r\n       //all tests must have passed so we must be dealing with a polynomial\r\n       return true;\r\n       */\n\n    },\n    //removes the requested variable from the symbol and returns the remainder\n    stripVar: function stripVar(x, exclude_x) {\n      var retval;\n      if ((this.group === PL || this.group === S) && this.value === x) retval = new Symbol(exclude_x ? 0 : this.multiplier);else if (this.group === CB && this.isLinear()) {\n        retval = new Symbol(1);\n        this.each(function (s) {\n          if (!s.contains(x, true)) retval = _.multiply(retval, s.clone());\n        });\n        retval.multiplier = retval.multiplier.multiply(this.multiplier);\n      } else if (this.group === CP && !this.isLinear()) {\n        retval = new Symbol(this.multiplier);\n      } else if (this.group === CP && this.isLinear()) {\n        retval = new Symbol(0);\n        this.each(function (s) {\n          if (!s.contains(x)) {\n            var t = s.clone();\n            t.multiplier = t.multiplier.multiply(this.multiplier);\n            retval = _.add(retval, t);\n          }\n        }); //BIG TODO!!! It doesn't make much sense\n\n        if (retval.equals(0)) retval = new Symbol(this.multiplier);\n      } else if (this.group === EX && this.power.contains(x, true)) {\n        retval = new Symbol(this.multiplier);\n      } else if (this.group === FN && this.contains(x)) {\n        retval = new Symbol(this.multiplier);\n      } else //wth? This should technically be the multiplier. \n        //Unfortunately this method wasn't very well thought out :`(.   \n        //should be: retval = new Symbol(this.multiplier);\n        //use: ((1+x^2)*sqrt(-1+x^2))^(-1) for correction.\n        //this will break a bunch of unit tests so be ready to for the long haul\n        retval = this.clone();\n      return retval;\n    },\n    //returns symbol in array form with x as base e.g. a*x^2+b*x+c = [c, b, a]. \n    toArray: function toArray(v, arr) {\n      arr = arr || {\n        arr: [],\n        add: function add(x, idx) {\n          var e = this.arr[idx];\n          this.arr[idx] = e ? _.add(e, x) : x;\n        }\n      };\n      var g = this.group;\n\n      if (g === S && this.contains(v)) {\n        arr.add(new Symbol(this.multiplier), this.power);\n      } else if (g === CB) {\n        var a = this.stripVar(v),\n            x = _.divide(this.clone(), a.clone());\n\n        var p = x.isConstant() ? 0 : x.power;\n        arr.add(a, p);\n      } else if (g === PL && this.value === v) {\n        this.each(function (x, p) {\n          arr.add(x.stripVar(v), p);\n        });\n      } else if (g === CP) {\n        //the logic: they'll be broken into symbols so e.g. (x^2+x)+1 or (a*x^2+b*x+c)\n        //each case is handled above\n        this.each(function (x) {\n          x.toArray(v, arr);\n        });\n      } else if (this.contains(v)) {\n        throw new NerdamerTypeError('Cannot convert to array! Exiting');\n      } else {\n        arr.add(this.clone(), 0); //it's just a constant wrt to v\n      } //fill the holes\n\n\n      arr = arr.arr; //keep only the array since we don't need the object anymore\n\n      for (var i = 0; i < arr.length; i++) {\n        if (!arr[i]) arr[i] = new Symbol(0);\n      }\n\n      return arr;\n    },\n    //checks to see if a symbol contans a function\n    hasFunc: function hasFunc(v) {\n      var fn_group = this.group === FN || this.group === EX;\n      if (fn_group && !v || fn_group && this.contains(v)) return true;\n\n      if (this.symbols) {\n        for (var x in this.symbols) {\n          if (this.symbols[x].hasFunc(v)) return true;\n        }\n      }\n\n      return false;\n    },\n    sub: function sub(a, b) {\n      a = !isSymbol(a) ? _.parse(a) : a.clone();\n      b = !isSymbol(b) ? _.parse(b) : b.clone();\n      if (a.group === N || a.group === P) err('Cannot substitute a number. Must be a variable');\n      var same_pow = false,\n          a_is_unit_multiplier = a.multiplier.equals(1),\n          m = this.multiplier.clone(),\n          retval;\n      /* \r\n       * In order to make the substitution the bases have to first match take\r\n       * (x+1)^x -> (x+1)=y || x^2 -> x=y^6\r\n       * In both cases the first condition is that the bases match so we begin there\r\n       * Either both are PL or both are not PL but we cannot have PL and a non-PL group match\r\n       */\n\n      if (this.value === a.value && (this.group !== PL && a.group !== PL || this.group === PL && a.group === PL)) {\n        //we cleared the first hurdle but a subsitution may not be possible just yet\n        if (a_is_unit_multiplier || a.multiplier.equals(this.multiplier)) {\n          if (a.isLinear()) {\n            retval = b;\n          } else if (a.power.equals(this.power)) {\n            retval = b;\n            same_pow = true;\n          }\n\n          if (a.multiplier.equals(this.multiplier)) m = new Frac(1);\n        }\n      } //the next thing is to handle CB\n      else if (this.group === CB || this.previousGroup === CB) {\n          retval = new Symbol(1);\n          this.each(function (x) {\n            var subbed = _.parse(x.sub(a, b)); //parse it again for safety\n\n\n            retval = _.multiply(retval, subbed);\n          });\n        } else if (this.isComposite()) {\n          if (a.isComposite() && this.isComposite() && this.isLinear() && a.isLinear()) {\n            var find = function find(stack, needle) {\n              for (var x in stack.symbols) {\n                var sym = stack.symbols[x]; //if the symbol equals the needle or it's within the sub-symbols we're done\n\n                if (sym.isComposite() && find(sym, needle) || sym.equals(needle)) return true;\n              }\n\n              return false;\n            }; //go fish\n\n\n            for (var x in a.symbols) {\n              if (!find(this, a.symbols[x])) return this.clone();\n            }\n\n            retval = _.add(_.subtract(this.clone(), a), b);\n          } else {\n            retval = new Symbol(0);\n            this.each(function (x) {\n              retval = _.add(retval, x.sub(a, b));\n            });\n          }\n        } else if (this.group === EX) {\n          // the parsed value could be a function so parse and sub\n          retval = _.parse(this.value).sub(a, b);\n        } else if (this.group === FN) {\n          var nargs = [];\n\n          for (var i = 0; i < this.args.length; i++) {\n            var arg = this.args[i];\n            if (!isSymbol(arg)) arg = _.parse(arg);\n            nargs.push(arg.sub(a, b));\n          }\n\n          retval = _.symfunction(this.fname, nargs);\n        } //if we did manage a substitution\n\n\n      if (retval) {\n        if (!same_pow) {\n          //substitute the power\n          var p = this.group === EX ? this.power.sub(a, b) : _.parse(this.power); //now raise the symbol to that power\n\n          retval = _.pow(retval, p);\n        } //transfer the multiplier\n\n\n        retval.multiplier = retval.multiplier.multiply(m); //done\n\n        return retval;\n      } //if all else fails\n\n\n      return this.clone();\n    },\n    isMonomial: function isMonomial() {\n      if (this.group === S) return true;\n\n      if (this.group === CB) {\n        for (var x in this.symbols) {\n          if (this.symbols[x].group !== S) return false;\n        }\n      } else return false;\n\n      return true;\n    },\n    isPi: function isPi() {\n      return this.group === S && this.value === 'pi';\n    },\n    sign: function sign() {\n      return this.multiplier.sign();\n    },\n    isE: function isE() {\n      return this.value === 'e';\n    },\n    isSQRT: function isSQRT() {\n      return this.fname === SQRT;\n    },\n    isConstant: function isConstant(check_all, check_symbols) {\n      if (check_symbols && this.group === CB) {\n        for (var x in this.symbols) {\n          if (this.symbols[x].isConstant(true)) return true;\n        }\n      }\n\n      if (check_all === 'all' && (this.isPi() || this.isE())) return true;\n\n      if (check_all && this.group === FN) {\n        for (var i = 0; i < this.args.length; i++) {\n          if (!this.args[i].isConstant(check_all)) return false;\n        }\n\n        return true;\n      }\n\n      if (check_all) return isNumericSymbol(this);\n      return this.value === CONST_HASH;\n    },\n    //the symbols is imaginary if \n    //1. n*i\n    //2. a+b*i\n    //3. a*i\n    isImaginary: function isImaginary() {\n      if (this.imaginary) return true;else if (this.symbols) {\n        for (var x in this.symbols) {\n          if (this.symbols[x].isImaginary()) return true;\n        }\n      }\n      return false;\n    },\n\n    /**\r\n     * Returns the real part of a symbol\r\n     * @returns {Symbol}\r\n     */\n    realpart: function realpart() {\n      if (this.isConstant()) {\n        return this.clone();\n      } else if (this.imaginary) return new Symbol(0);else if (this.isComposite()) {\n        var retval = new Symbol(0);\n        this.each(function (x) {\n          retval = _.add(retval, x.realpart());\n        });\n        return retval;\n      } else if (this.isImaginary()) return new Symbol(0);\n\n      return this.clone();\n    },\n\n    /*\r\n     * Return imaginary part of a symbol\r\n     * @returns {Symbol}\r\n     */\n    imagpart: function imagpart() {\n      if (this.group === S && this.isImaginary()) return new Symbol(this.multiplier);\n\n      if (this.isComposite()) {\n        var retval = new Symbol(0);\n        this.each(function (x) {\n          retval = _.add(retval, x.imagpart());\n        });\n        return retval;\n      }\n\n      if (this.group === CB) return this.stripVar(Settings.IMAGINARY);\n      return new Symbol(0);\n    },\n    isInteger: function isInteger() {\n      return this.isConstant() && this.multiplier.isInteger();\n    },\n    isLinear: function isLinear(wrt) {\n      if (wrt) {\n        if (this.isConstant()) return true;\n\n        if (this.group === S) {\n          if (this.value === wrt) return this.power.equals(1);else return true;\n        }\n\n        if (this.isComposite() && this.power.equals(1)) {\n          for (var x in this.symbols) {\n            if (!this.symbols[x].isLinear(wrt)) return false;\n          }\n\n          return true;\n        }\n\n        if (this.group === CB && this.symbols[wrt]) return this.symbols[wrt].isLinear(wrt);\n        return false;\n      } else return this.power.equals(1);\n    },\n\n    /**\r\n     * Checks to see if a symbol has a function by a specified name or within a specified list\r\n     * @param {String|String[]} names\r\n     * @returns {Boolean}\r\n     */\n    containsFunction: function containsFunction(names) {\n      if (typeof names === 'string') names = [names];\n      if (this.group === FN && names.indexOf(this.fname) !== -1) return true;\n\n      if (this.symbols) {\n        for (var x in this.symbols) {\n          if (this.symbols[x].containsFunction(names)) return true;\n        }\n      }\n\n      return false;\n    },\n    multiplyPower: function multiplyPower(p2) {\n      //leave out 1\n      if (this.group === N && this.multiplier.equals(1)) return this;\n      var p1 = this.power;\n\n      if (this.group !== EX && p2.group === N) {\n        var p = p2.multiplier;\n\n        if (this.group === N && !p.isInteger()) {\n          this.convert(P);\n        }\n\n        this.power = p1.equals(1) ? p.clone() : p1.multiply(p);\n\n        if (this.group === P && isInt(this.power)) {\n          //bring it back to an N\n          this.value = Math.pow(this.value, this.power);\n          this.toLinear();\n          this.convert(N);\n        }\n      } else {\n        if (this.group !== EX) {\n          p1 = new Symbol(p1);\n          this.convert(EX);\n        }\n\n        this.power = _.multiply(p1, p2);\n      }\n\n      return this;\n    },\n    setPower: function setPower(p, retainSign) {\n      //leave out 1\n      if (this.group === N && this.multiplier.equals(1)) return this;\n\n      if (this.group === EX && !isSymbol(p)) {\n        this.group = this.previousGroup;\n        delete this.previousGroup;\n\n        if (this.group === N) {\n          this.multiplier = new Frac(this.value);\n          this.value = CONST_HASH;\n        } else this.power = p;\n      } else {\n        var isSymbolic = false;\n\n        if (isSymbol(p)) {\n          if (p.group === N) {\n            //p should be the multiplier instead\n            p = p.multiplier;\n          } else {\n            isSymbolic = true;\n          }\n        }\n\n        var group = isSymbolic ? EX : P;\n        this.power = p;\n        if (this.group === N && group) this.convert(group, retainSign);\n      }\n\n      return this;\n    },\n\n    /**\r\n     * Checks to see if symbol is located in the denominator\r\n     * @returns {boolean}\r\n     */\n    isInverse: function isInverse() {\n      if (this.group === EX) return this.power.multiplier.lessThan(0);\n      return this.power < 0;\n    },\n\n    /**\r\n     * Make a duplicate of a symbol by copying a predefined list of items. \r\n     * The name 'copy' would probably be a more appropriate name.\r\n     * to a new symbol\r\n     * @param {Symbol} c \r\n     * @returns {Symbol}\r\n     */\n    clone: function clone(c) {\n      var clone = c || new Symbol(0),\n          //list of properties excluding power as this may be a symbol and would also need to be a clone.\n      properties = ['value', 'group', 'length', 'previousGroup', 'imaginary', 'fname', 'args', 'isInfinity', 'scientific'],\n          l = properties.length,\n          i;\n\n      if (this.symbols) {\n        clone.symbols = {};\n\n        for (var x in this.symbols) {\n          clone.symbols[x] = this.symbols[x].clone();\n        }\n      }\n\n      for (i = 0; i < l; i++) {\n        if (this[properties[i]] !== undefined) {\n          clone[properties[i]] = this[properties[i]];\n        }\n      }\n\n      clone.power = this.power.clone();\n      clone.multiplier = this.multiplier.clone(); //add back the flag to track if this symbol is a conversion symbol\n\n      if (this.isConversion) clone.isConversion = this.isConversion;\n      if (this.isUnit) clone.isUnit = this.isUnit;\n      return clone;\n    },\n\n    /**\r\n     * Converts a symbol multiplier to one.\r\n     * @param {Boolean} keepSign Keep the multiplier as negative if the multiplier is negative and keepSign is true\r\n     * @returns {Symbol}\r\n     */\n    toUnitMultiplier: function toUnitMultiplier(keepSign) {\n      this.multiplier.num = new bigInt(this.multiplier.num.isNegative() && keepSign ? -1 : 1);\n      this.multiplier.den = new bigInt(1);\n      return this;\n    },\n\n    /**\r\n     * Converts a Symbol's power to one.\r\n     * @returns {Symbol}\r\n     */\n    toLinear: function toLinear() {\n      this.setPower(new Frac(1));\n      return this;\n    },\n\n    /**\r\n     * Iterates over all the sub-symbols. If no sub-symbols exist then it's called on itself\r\n     * @param {Function} fn\r\n     * @@param {Boolean} deep If true it will itterate over the sub-symbols their symbols as well \r\n     */\n    each: function each(fn, deep) {\n      if (!this.symbols) {\n        fn.call(this, this, this.value);\n      } else {\n        for (var x in this.symbols) {\n          var sym = this.symbols[x];\n\n          if (sym.group === PL && deep) {\n            for (var y in sym.symbols) {\n              fn.call(x, sym.symbols[y], y);\n            }\n          } else fn.call(this, sym, x);\n        }\n      }\n    },\n\n    /**\r\n     * A numeric value to be returned for Javascript. It will try to \r\n     * return a number as far a possible but in case of a pure symbolic\r\n     * symbol it will just return its text representation\r\n     * @returns {String|Number}\r\n     */\n    valueOf: function valueOf() {\n      if (this.group === N) return this.multiplier.valueOf();else if (this.power === 0) {\n        return 1;\n      } else if (this.multiplier === 0) {\n        return 0;\n      } else {\n        return _text(this, 'decimals');\n      }\n    },\n\n    /**\r\n     * Checks to see if a symbols has a particular variable within it.\r\n     * Pass in true as second argument to include the power of exponentials\r\n     * which aren't check by default.\r\n     * @example var s = _.parse('x+y+z'); s.contains('y');\r\n     * //returns true\r\n     * @param {any} variable \r\n     * @param {boolean} all \r\n     * @returns {boolean}\r\n     */\n    contains: function contains(variable, all) {\n      //contains expects a string\n      variable = String(variable);\n      var g = this.group;\n      if (this.value === variable) return true;\n\n      if (this.symbols) {\n        for (var x in this.symbols) {\n          if (this.symbols[x].contains(variable, all)) return true;\n        }\n      }\n\n      if (g === FN || this.previousGroup === FN) {\n        for (var i = 0; i < this.args.length; i++) {\n          if (this.args[i].contains(variable, all)) return true;\n        }\n      }\n\n      if (g === EX) {\n        //exit only if it does\n        if (all && this.power.contains(variable, all)) {\n          return true;\n        }\n\n        if (this.value === variable) return true;\n      }\n\n      return this.value === variable;\n    },\n\n    /**\r\n     * Negates a symbols\r\n     * @returns {boolean}\r\n     */\n    negate: function negate() {\n      this.multiplier.negate();\n      if (this.group === CP || this.group === PL) this.distributeMultiplier();\n      return this;\n    },\n\n    /**\r\n     * Inverts a symbol\r\n     * @param {boolean} power_only\r\n     * @param {boolean} all\r\n     * @returns {boolean}\r\n     */\n    invert: function invert(power_only, all) {\n      //invert the multiplier\n      if (!power_only) this.multiplier = this.multiplier.invert(); //invert the rest\n\n      if (isSymbol(this.power)) {\n        this.power.negate();\n      } else if (this.group === CB && all) {\n        this.each(function (x) {\n          return x.invert();\n        });\n      } else {\n        if (this.power && this.group !== N) this.power.negate();\n      }\n\n      return this;\n    },\n\n    /**\r\n     * Symbols of group CP or PL may have the multiplier being carried by \r\n     * the top level symbol at any given time e.g. 2*(x+y+z). This is \r\n     * convenient in many cases, however in some cases the multiplier needs\r\n     * to be carried individually e.g. 2*x+2*y+2*z.\r\n     * This method distributes the multiplier over the entire symbol\r\n     * @param {boolean} all\r\n     * @returns {Symbol}\r\n     */\n    distributeMultiplier: function distributeMultiplier(all) {\n      var is_one = all ? this.power.absEquals(1) : this.power.equals(1);\n\n      if (this.symbols && is_one && this.group !== CB && !this.multiplier.equals(1)) {\n        for (var x in this.symbols) {\n          var s = this.symbols[x];\n          s.multiplier = s.multiplier.multiply(this.multiplier);\n          s.distributeMultiplier();\n        }\n\n        this.toUnitMultiplier();\n      }\n\n      return this;\n    },\n\n    /**\r\n     * This method expands the exponent over the entire symbol just like\r\n     * distributeMultiplier\r\n     * @returns {Symbol}\r\n     */\n    distributeExponent: function distributeExponent() {\n      if (!this.power.equals(1)) {\n        var p = this.power;\n\n        for (var x in this.symbols) {\n          var s = this.symbols[x];\n\n          if (s.group === EX) {\n            s.power = _.multiply(s.power, new Symbol(p));\n          } else {\n            this.symbols[x].power = this.symbols[x].power.multiply(p);\n          }\n        }\n\n        this.toLinear();\n      }\n\n      return this;\n    },\n\n    /**\r\n     * This method will attempt to up-convert or down-convert one symbol\r\n     * from one group to another. Not all symbols are convertible from one \r\n     * group to another however. In that case the symbol will remain \r\n     * unchanged.\r\n     * @param {int} group\r\n     * @param {string} imaginary \r\n     */\n    convert: function convert(group, imaginary) {\n      if (group > FN) {\n        //make a clone of this symbol;\n        var cp = this.clone(); //attach a symbols object and upgrade the group\n\n        this.symbols = {};\n\n        if (group === CB) {\n          //symbol of group CB hold symbols bound together through multiplication\n          //because of commutativity this multiplier can technically be anywhere within the group\n          //to keep track of it however it's easier to always have the top level carry it\n          cp.toUnitMultiplier();\n        } else {\n          //reset the symbol\n          this.toUnitMultiplier();\n        }\n\n        if (this.group === FN) {\n          cp.args = this.args;\n          delete this.args;\n          delete this.fname;\n        } //the symbol may originate from the symbol i but this property no longer holds true\n        //after copying\n\n\n        if (this.isImgSymbol) delete this.isImgSymbol;\n        this.toLinear(); //attach a clone of this symbol to the symbols object using its proper key\n\n        this.symbols[cp.keyForGroup(group)] = cp;\n        this.group = group; //objects by default don't have a length property. However, in order to keep track of the number\n        //of sub-symbols we have to impliment our own.\n\n        this.length = 1;\n      } else if (group === EX) {\n        //1^x is just one so check and make sure\n        if (!(this.group === N && this.multiplier.equals(1))) {\n          if (this.group !== EX) this.previousGroup = this.group;\n\n          if (this.group === N) {\n            this.value = this.multiplier.num.toString();\n            this.toUnitMultiplier();\n          } //update the hash to reflect the accurate hash\n          else this.value = _text(this, 'hash');\n\n          this.group = EX;\n        }\n      } else if (group === N) {\n        var m = this.multiplier.toDecimal();\n        if (this.symbols) this.symbols = undefined;\n        new Symbol(this.group === P ? m * Math.pow(this.value, this.power) : m).clone(this);\n      } else if (group === P && this.group === N) {\n        this.value = imaginary ? this.multiplier.num.toString() : Math.abs(this.multiplier.num.toString());\n        this.toUnitMultiplier(!imaginary);\n        this.group = P;\n      }\n\n      return this;\n    },\n\n    /**\r\n     * This method is one of the principal methods to make it all possible.\r\n     * It performs cleanup and prep operations whenever a symbols is \r\n     * inserted. If the symbols results in a 1 in a CB (multiplication) \r\n     * group for instance it will remove the redundant symbol. Similarly\r\n     * in a symbol of group PL or CP (symbols glued by multiplication) it\r\n     * will remove any dangling zeroes from the symbol. It will also \r\n     * up-convert or down-convert a symbol if it detects that it's \r\n     * incorrectly grouped. It should be noted that this method is not\r\n     * called directly but rather by the 'attach' method for addition groups\r\n     * and the 'combine' method for multiplication groups.\r\n     * @param {Symbol} symbol\r\n     * @param {String} action\r\n     */\n    insert: function insert(symbol, action) {\n      //this check can be removed but saves a lot of aggravation when trying to hunt down\n      //a bug. If left, you will instantly know that the error can only be between 2 symbols.\n      if (!isSymbol(symbol)) err('Object ' + symbol + ' is not of type Symbol!');\n\n      if (this.symbols) {\n        var group = this.group;\n\n        if (group > FN) {\n          var key = symbol.keyForGroup(group);\n          var existing = key in this.symbols ? this.symbols[key] : false; //check if there's already a symbol there\n\n          if (action === 'add') {\n            var hash = key;\n\n            if (existing) {\n              //add them together using the parser\n              this.symbols[hash] = _.add(existing, symbol); //if the addition resulted in a zero multiplier remove it\n\n              if (this.symbols[hash].multiplier.equals(0)) {\n                delete this.symbols[hash];\n                this.length--;\n\n                if (this.length === 0) {\n                  this.convert(N);\n                  this.multiplier = new Frac(0);\n                }\n              }\n            } else {\n              this.symbols[key] = symbol;\n              this.length++;\n            }\n          } else {\n            //check if this is of group P and unwrap before inserting\n            if (symbol.group === P && isInt(symbol.power)) {\n              symbol.convert(N);\n            } //transfer the multiplier to the upper symbol but only if the symbol numeric\n\n\n            if (symbol.group !== EX) {\n              this.multiplier = this.multiplier.multiply(symbol.multiplier);\n              symbol.toUnitMultiplier();\n            } else {\n              symbol.parens = symbol.multiplier.lessThan(0);\n              this.multiplier = this.multiplier.multiply(symbol.multiplier.clone().abs());\n              symbol.toUnitMultiplier(true);\n            }\n\n            if (existing) {\n              //remove because the symbol may have changed\n              symbol = _.multiply(_remove(this.symbols, key), symbol);\n\n              if (symbol.isConstant()) {\n                this.multiplier = this.multiplier.multiply(symbol.multiplier);\n                symbol = new Symbol(1); //the dirty work gets done down the line when it detects 1\n              }\n\n              this.length--; //clean up\n            } //don't insert the symbol if it's 1\n\n\n            if (!symbol.isOne(true)) {\n              this.symbols[key] = symbol;\n              this.length++;\n            } else if (symbol.multiplier.lessThan(0)) {\n              this.negate(); //put back the sign\n            }\n          } //clean up\n\n\n          if (this.length === 0) this.convert(N); //update the hash\n\n          if (this.group === CP || this.group === CB) {\n            this.updateHash();\n          }\n        }\n      }\n\n      return this;\n    },\n    //the insert method for addition\n    attach: function attach(symbol) {\n      if (isArray(symbol)) {\n        for (var i = 0; i < symbol.length; i++) {\n          this.insert(symbol[i], 'add');\n        }\n\n        return this;\n      }\n\n      return this.insert(symbol, 'add');\n    },\n    //the insert method for multiplication\n    combine: function combine(symbol) {\n      if (isArray(symbol)) {\n        for (var i = 0; i < symbol.length; i++) {\n          this.insert(symbol[i], 'multiply');\n        }\n\n        return this;\n      }\n\n      return this.insert(symbol, 'multiply');\n    },\n\n    /**\r\n     * This method should be called after any major \"surgery\" on a symbol.\r\n     * It updates the hash of the symbol for example if the fname of a \r\n     * function has changed it will update the hash of the symbol.\r\n     */\n    updateHash: function updateHash() {\n      if (this.group === N) return;\n\n      if (this.group === FN) {\n        var contents = '',\n            args = this.args,\n            is_parens = this.fname === PARENTHESIS;\n\n        for (var i = 0; i < args.length; i++) {\n          contents += (i === 0 ? '' : ',') + _text(args[i]);\n        }\n\n        var fn_name = is_parens ? '' : this.fname;\n        this.value = fn_name + (is_parens ? contents : inBrackets(contents));\n      } else if (!(this.group === S || this.group === PL)) {\n        this.value = _text(this, 'hash');\n      }\n    },\n\n    /**\r\n     * this function defines how every group in stored within a group of \r\n     * higher order think of it as the switchboard for the library. It \r\n     * defines the hashes for symbols. \r\n     * @param {int} group\r\n     */\n    keyForGroup: function keyForGroup(group) {\n      var g = this.group;\n      var key;\n\n      if (g === N) {\n        key = this.value;\n      } else if (g === S || g === P) {\n        if (group === PL) key = this.power.toDecimal();else key = this.value;\n      } else if (g === FN) {\n        if (group === PL) key = this.power.toDecimal();else key = _text(this, 'hash');\n      } else if (g === PL) {\n        //if the order is reversed then we'll assume multiplication\n        //TODO: possible future dilemma\n        if (group === CB) key = _text(this, 'hash');else if (group === CP) {\n          if (this.power.equals(1)) key = this.value;else key = inBrackets(_text(this, 'hash')) + Settings.POWER_OPERATOR + this.power.toDecimal();\n        } else if (group === PL) key = this.power.toString();else key = this.value;\n        return key;\n      } else if (g === CP) {\n        if (group === CP) {\n          key = _text(this, 'hash');\n        }\n\n        if (group === PL) key = this.power.toDecimal();else key = this.value;\n      } else if (g === CB) {\n        if (group === PL) key = this.power.toDecimal();else key = _text(this, 'hash');\n      } else if (g === EX) {\n        if (group === PL) key = _text(this.power);else key = _text(this, 'hash');\n      }\n\n      return key;\n    },\n\n    /** \r\n     * Symbols are typically stored in an object which works fine for most\r\n     * cases but presents a problem when the order of the symbols makes\r\n     * a difference. This function simply collects all the symbols and \r\n     * returns them as an array. If a function is supplied then that \r\n     * function is called on every symbol contained within the object.\r\n     * @param {Function} fn\r\n     * @param {Object} opt\r\n     * @param {Function} sort_fn\r\n     * @@param {Boolean} expand_symbol \r\n     * @returns {Array}\r\n     */\n    collectSymbols: function collectSymbols(fn, opt, sort_fn, expand_symbol) {\n      var collected = [];\n      if (!this.symbols) collected.push(this);else {\n        for (var x in this.symbols) {\n          var symbol = this.symbols[x];\n\n          if (expand_symbol && (symbol.group === PL || symbol.group === CP)) {\n            collected = collected.concat(symbol.collectSymbols());\n          } else collected.push(fn ? fn(symbol, opt) : symbol);\n        }\n      }\n      if (sort_fn === null) sort_fn = undefined; //WTF Firefox? Seriously?\n\n      return collected.sort(sort_fn); //sort hopefully gives us some sort of consistency\n    },\n\n    /**\r\n     * Returns the latex representation of the symbol\r\n     * @param {String} option\r\n     * @returns {String}\r\n     */\n    latex: function latex(option) {\n      return LaTeX.latex(this, option);\n    },\n\n    /**\r\n     * Returns the text representation of a symbol\r\n     * @param {String} option\r\n     * @returns {String}\r\n     */\n    text: function text(option) {\n      return _text(this, option);\n    },\n\n    /**\r\n     * Checks if the function evaluates to 1. e.g. x^0 or 1 :)\r\n     * @@param {bool} abs Compares the absolute value \r\n     */\n    isOne: function isOne(abs) {\n      var f = abs ? 'absEquals' : 'equals';\n      if (this.group === N) return this.multiplier[f](1);else return this.power.equals(0);\n    },\n    isComposite: function isComposite() {\n      var g = this.group,\n          pg = this.previousGroup;\n      return g === CP || g === PL || pg === PL || pg === CP;\n    },\n    isCombination: function isCombination() {\n      var g = this.group,\n          pg = this.previousGroup;\n      return g === CB || pg === CB;\n    },\n    lessThan: function lessThan(n) {\n      return this.multiplier.lessThan(n);\n    },\n    greaterThan: function greaterThan(n) {\n      return this.multiplier.greaterThan(n);\n    },\n\n    /**\r\n     * Get's the denominator of the symbol if the symbol is of class CB (multiplication)\r\n     * with other classes the symbol is either the denominator or not. \r\n     * Take x^-1+x^-2. If the symbol was to be mixed such as x+x^-2 then the symbol doesn't have have an exclusive\r\n     * denominator and has to be found by looking at the actual symbols themselves.\r\n     */\n    getDenom: function getDenom() {\n      var retval, symbol;\n      symbol = this.clone(); //e.g. 1/(x*(x+1))\n\n      if (this.group === CB && this.power.lessThan(0)) symbol = _.expand(symbol); //if the symbol already is the denominator... DONE!!!\n\n      if (symbol.power.lessThan(0)) {\n        var d = _.parse(symbol.multiplier.den);\n\n        retval = symbol.toUnitMultiplier();\n        retval.power.negate();\n        retval = _.multiply(d, retval); //put back the coeff\n      } else if (symbol.group === CB) {\n        retval = _.parse(symbol.multiplier.den);\n\n        for (var x in symbol.symbols) {\n          if (symbol.symbols[x].power < 0) retval = _.multiply(retval, symbol.symbols[x].clone().invert());\n        }\n      } else retval = _.parse(symbol.multiplier.den);\n\n      return retval;\n    },\n    getNum: function getNum() {\n      var retval, symbol;\n      symbol = this.clone(); //e.g. 1/(x*(x+1))\n\n      if (symbol.group === CB && symbol.power.lessThan(0)) symbol = _.expand(symbol); //if the symbol already is the denominator... DONE!!!\n\n      if (symbol.power.greaterThan(0) && symbol.group !== CB) {\n        retval = _.multiply(_.parse(symbol.multiplier.num), symbol.toUnitMultiplier());\n      } else if (symbol.group === CB) {\n        retval = _.parse(symbol.multiplier.num);\n        symbol.each(function (x) {\n          if (x.power > 0 || x.group === EX && x.power.multiplier > 0) {\n            retval = _.multiply(retval, x.clone());\n          }\n        });\n      } else {\n        retval = _.parse(symbol.multiplier.num);\n      }\n\n      return retval;\n    },\n    toString: function toString() {\n      return this.text();\n    }\n  }; //Parser =======================================================================     \n  //Uses modified Shunting-yard algorithm. http://en.wikipedia.org/wiki/Shunting-yard_algorithm\n\n  function Parser() {\n    //Point to the local parser instead of the global one\n    var _ = this;\n\n    var bin = {};\n    var preprocessors = {\n      names: [],\n      actions: []\n    }; //Parser.classes ===============================================================\n\n    function Slice(upper, lower) {\n      this.start = upper;\n      this.end = lower;\n    }\n\n    ;\n\n    Slice.prototype.isConstant = function () {\n      return this.start.isConstant() && this.end.isConstant();\n    };\n\n    Slice.prototype.text = function () {\n      return _text(this.start) + ':' + _text(this.end);\n    };\n    /**\r\n     * Class used to collect arguments for functions\r\n     * @returns {Parser.Collection}\r\n     */\n\n\n    function Collection() {\n      this.elements = [];\n    }\n\n    Collection.prototype.append = function (e) {\n      this.elements.push(e);\n    };\n\n    Collection.prototype.getItems = function () {\n      return this.elements;\n    };\n\n    Collection.prototype.toString = function () {\n      return _.pretty_print(this.elements);\n    };\n\n    Collection.create = function (e) {\n      var collection = new Collection();\n      if (e) collection.append(e);\n      return collection;\n    };\n\n    function Token(node, node_type, column) {\n      this.type = node_type;\n      this.value = node;\n      if (column !== undefined) this.column = column + 1;\n\n      if (node_type === Token.OPERATOR) {\n        //copy everything over from the operator\n        var operator = operators[node];\n\n        for (var x in operator) {\n          this[x] = operator[x];\n        }\n      } else if (node_type === Token.FUNCTION) {\n        this.precedence = Token.MAX_PRECEDENCE; //leave enough roon\n\n        this.leftAssoc = false;\n      }\n    }\n\n    Token.prototype.toString = function () {\n      return this.value;\n    };\n\n    Token.prototype.toString = function () {\n      if (this.is_prefix) return '`' + this.value;\n      return this.value;\n    }; //some constants\n\n\n    Token.OPERATOR = 'OPERATOR';\n    Token.VARIABLE_OR_LITERAL = 'VARIABLE_OR_LITERAL';\n    Token.FUNCTION = 'FUNCTION';\n    Token.UNIT = 'UNIT';\n    Token.KEYWORD = 'KEYWORD';\n    Token.MAX_PRECEDENCE = 999; //create link to classes\n\n    this.classes = {\n      Collection: Collection,\n      Slice: Slice,\n      Token: Token\n    }; //Parser.modules ===============================================================\n    //object for functions which handle complex number\n\n    var complex = {\n      prec: undefined,\n      cos: function cos(r, i) {\n        var re, im;\n        re = _.parse(Math.cos(r) * Math.cosh(i));\n        im = _.parse(Math.sin(r) * Math.sinh(i));\n        return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n      },\n      sin: function sin(r, i) {\n        var re, im;\n        re = _.parse(Math.sin(r) * Math.cosh(i));\n        im = _.parse(Math.cos(r) * Math.sinh(i));\n        return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n      },\n      tan: function tan(r, i) {\n        var re, im;\n        re = _.parse(Math.sin(2 * r) / (Math.cos(2 * r) + Math.cosh(2 * i)));\n        im = _.parse(Math.sinh(2 * i) / (Math.cos(2 * r) + Math.cosh(2 * i)));\n        return _.add(re, _.multiply(im, Symbol.imaginary()));\n      },\n      sec: function sec(r, i) {\n        var t = this.removeDen(this.cos(r, i));\n        return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n      },\n      csc: function csc(r, i) {\n        var t = this.removeDen(this.sin(r, i));\n        return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\n      },\n      cot: function cot(r, i) {\n        var t = this.removeDen(this.tan(r, i));\n        return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n      },\n      acos: function acos(r, i) {\n        var symbol, sq, a, b, c;\n        symbol = this.fromArray([r, i]);\n        sq = _.expand(_.pow(symbol.clone(), new Symbol(2))); //z*z\n\n        a = _.multiply(_sqrt(_.subtract(new Symbol(1), sq)), Symbol.imaginary());\n        b = _.expand(_.add(symbol.clone(), a));\n        c = _log(b);\n        return _.expand(_.multiply(Symbol.imaginary().negate(), c));\n      },\n      asin: function asin(r, i) {\n        return _.subtract(_.parse('pi/2'), this.acos(r, i));\n      },\n      atan: function atan(r, i) {\n        var a, b, c, symbol;\n        symbol = complex.fromArray([r, i]);\n        a = _.expand(_.multiply(Symbol.imaginary(), symbol.clone()));\n        b = _log(_.expand(_.subtract(new Symbol(1), a.clone())));\n        c = _log(_.expand(_.add(new Symbol(1), a.clone())));\n        return _.expand(_.multiply(_.divide(Symbol.imaginary(), new Symbol(2)), _.subtract(b, c)));\n      },\n      asec: function asec(r, i) {\n        var d = this.removeDen([r, i]);\n        d[1].negate();\n        return this.acos.apply(this, d);\n      },\n      acsc: function acsc(r, i) {\n        var d = this.removeDen([r, i]);\n        d[1].negate();\n        return this.asin.apply(this, d);\n      },\n      acot: function acot(r, i) {\n        var d = this.removeDen([r, i]);\n        d[1].negate();\n        return this.atan.apply(this, d);\n      },\n      //Hyperbolic trig\n      cosh: function cosh(r, i) {\n        var re, im;\n        re = _.parse(Math.cosh(r) * Math.cos(i));\n        im = _.parse(Math.sinh(r) * Math.sin(i));\n        return _.add(re, _.multiply(im, Symbol.imaginary()));\n      },\n      sinh: function sinh(r, i) {\n        var re, im;\n        re = _.parse(Math.sinh(r) * Math.cos(i));\n        im = _.parse(Math.cosh(r) * Math.sin(i));\n        return _.add(re, _.multiply(im, Symbol.imaginary()));\n      },\n      tanh: function tanh(r, i) {\n        var re, im;\n        re = _.parse(Math.sinh(2 * r) / (Math.cos(2 * i) + Math.cosh(2 * r)));\n        im = _.parse(Math.sin(2 * i) / (Math.cos(2 * i) + Math.cosh(2 * r)));\n        return _.subtract(re, _.multiply(im, Symbol.imaginary()));\n      },\n      sech: function sech(r, i) {\n        var t = this.removeDen(this.cosh(r, i));\n        return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n      },\n      csch: function csch(r, i) {\n        var t = this.removeDen(this.sinh(r, i));\n        return _.subtract(t[0], _.multiply(t[1], Symbol.imaginary()));\n      },\n      coth: function coth(r, i) {\n        var t = this.removeDen(this.tanh(r, i));\n        return _.add(t[0], _.multiply(t[1], Symbol.imaginary()));\n      },\n      acosh: function acosh(r, i) {\n        var a, b, z;\n        z = this.fromArray([r, i]);\n        a = _sqrt(_.add(z.clone(), new Symbol(1)));\n        b = _sqrt(_.subtract(z.clone(), new Symbol(1)));\n        return _.expand(_log(_.add(z, _.expand(_.multiply(a, b)))));\n      },\n      asinh: function asinh(r, i) {\n        var a, z;\n        z = this.fromArray([r, i]);\n        a = _sqrt(_.add(new Symbol(1), _.expand(_.pow(z.clone(), new Symbol(2)))));\n        return _.expand(_log(_.add(z, a)));\n      },\n      atanh: function atanh(r, i) {\n        var a, b, z;\n        z = this.fromArray([r, i]);\n        a = _log(_.add(z.clone(), new Symbol(1)));\n        b = _log(_.subtract(new Symbol(1), z));\n        return _.expand(_.divide(_.subtract(a, b), new Symbol(2)));\n      },\n      asech: function asech(r, i) {\n        var t = this.removeDen([r, i]);\n        t[1].negate();\n        return this.acosh.apply(this, t);\n      },\n      acsch: function acsch(r, i) {\n        var t = this.removeDen([r, i]);\n        t[1].negate();\n        return this.asinh.apply(this, t);\n      },\n      acoth: function acoth(r, i) {\n        var t = this.removeDen([r, i]);\n        t[1].negate();\n        return this.atanh.apply(this, t);\n      },\n      sqrt: function sqrt(symbol) {\n        var re, im, h, a, d;\n        re = symbol.realpart();\n        im = symbol.imagpart();\n        h = Symbol.hyp(re, im);\n        a = _.add(re.clone(), h);\n        d = _sqrt(_.multiply(new Symbol(2), a.clone()));\n        return _.add(_.divide(a.clone(), d.clone()), _.multiply(_.divide(im, d), Symbol.imaginary()));\n      },\n      log: function log(r, i) {\n        var re, im;\n        re = _log(Symbol.hyp(r, i));\n        im = _.parse(Math.atan2(i, r));\n        return _.add(re, _.multiply(Symbol.imaginary(), im));\n      },\n      removeDen: function removeDen(symbol) {\n        var den, r, i, re, im;\n\n        if (isArray(symbol)) {\n          r = symbol[0];\n          i = symbol[1];\n        } else {\n          r = symbol.realpart();\n          i = symbol.imagpart();\n        }\n\n        den = Math.pow(r, 2) + Math.pow(i, 2);\n        re = _.parse(r / den);\n        im = _.parse(i / den);\n        return [re, im];\n      },\n      fromArray: function fromArray(arr) {\n        return _.add(arr[0], _.multiply(Symbol.imaginary(), arr[1]));\n      },\n      evaluate: function evaluate(symbol, f) {\n        var re, im, sign;\n        sign = symbol.power.sign(); //remove it from under the denominator\n\n        symbol.power = symbol.power.abs(); //expand\n\n        if (symbol.power.greaterThan(1)) symbol = _.expand(symbol); //remove the denominator\n\n        if (sign < 0) {\n          var d = this.removeDen(symbol);\n          re = d[0];\n          im = d[1];\n        } else {\n          re = symbol.realpart();\n          im = symbol.imagpart();\n        }\n\n        if (re.isConstant('all') && im.isConstant('all')) return this[f].call(this, re, im);\n        return _.symfunction(f, [symbol]);\n      }\n    }; //object for functions which handle trig\n\n    var trig = this.trig = {\n      //container for trigonometric function\n      cos: function cos(symbol) {\n        if (symbol.equals('pi') && symbol.multiplier.den.equals(2)) return new Symbol(0);\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.equals(new Symbol(Settings.PI / 2))) return new Symbol(0);\n\n          if (symbol.isConstant()) {\n            return new Symbol(Math.cos(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'cos');\n          }\n        }\n\n        if (symbol.equals(0)) return new Symbol(1);\n        var retval,\n            c = false,\n            q = getQuadrant(symbol.multiplier.toDecimal()),\n            m = symbol.multiplier.abs();\n        symbol.multiplier = m;\n\n        if (symbol.isPi() && symbol.isLinear()) {\n          //return for 1 or -1 for multiples of pi\n          if (isInt(m)) {\n            retval = new Symbol(even(m) ? 1 : -1);\n          } else {\n            var n = Number(m.num),\n                d = Number(m.den);\n            if (d === 2) retval = new Symbol(0);else if (d === 3) {\n              retval = _.parse('1/2');\n              c = true;\n            } else if (d === 4) {\n              retval = _.parse('1/sqrt(2)');\n              c = true;\n            } else if (d === 6) {\n              retval = _.parse('sqrt(3)/2');\n              c = true;\n            } else retval = _.symfunction('cos', [symbol]);\n          }\n        }\n\n        if (c && (q === 2 || q === 3)) retval.negate();\n        if (!retval) retval = _.symfunction('cos', [symbol]);\n        return retval;\n      },\n      sin: function sin(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) {\n            return new Symbol(Math.sin(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'sin');\n        }\n\n        if (symbol.equals(0)) return new Symbol(0);\n        var retval,\n            c = false,\n            q = getQuadrant(symbol.multiplier.toDecimal()),\n            sign = symbol.multiplier.sign(),\n            m = symbol.multiplier.abs();\n        symbol.multiplier = m;\n        if (symbol.equals('pi')) retval = new Symbol(0);else if (symbol.isPi() && symbol.isLinear()) {\n          //return for 0 for multiples of pi\n          if (isInt(m)) {\n            retval = new Symbol(0);\n          } else {\n            var n = m.num,\n                d = m.den;\n\n            if (d == 2) {\n              retval = new Symbol(1);\n              c = true;\n            } else if (d == 3) {\n              retval = _.parse('sqrt(3)/2');\n              c = true;\n            } else if (d == 4) {\n              retval = _.parse('1/sqrt(2)');\n              c = true;\n            } else if (d == 6) {\n              retval = _.parse('1/2');\n              c = true;\n            } else retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\n          }\n        }\n        if (!retval) retval = _.multiply(new Symbol(sign), _.symfunction('sin', [symbol]));\n        if (c && (q === 3 || q === 4)) retval.negate();\n        return retval;\n      },\n      tan: function tan(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.tan(symbol.valueOf()));\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'tan');\n        }\n\n        var retval,\n            c = false,\n            q = getQuadrant(symbol.multiplier.toDecimal()),\n            m = symbol.multiplier;\n        symbol.multiplier = m;\n\n        if (symbol.isPi() && symbol.isLinear()) {\n          //return 0 for all multiples of pi\n          if (isInt(m)) {\n            retval = new Symbol(0);\n          } else {\n            var n = m.num,\n                d = m.den;\n            if (d == 2) throw new UndefinedError('tan is undefined for ' + symbol.toString());else if (d == 3) {\n              retval = _.parse('sqrt(3)');\n              c = true;\n            } else if (d == 4) {\n              retval = new Symbol(1);\n              c = true;\n            } else if (d == 6) {\n              retval = _.parse('1/sqrt(3)');\n              c = true;\n            } else retval = _.symfunction('tan', [symbol]);\n          }\n        }\n\n        if (!retval) retval = _.symfunction('tan', [symbol]);\n        if (c && (q === 2 || q === 4)) retval.negate();\n        return retval;\n      },\n      sec: function sec(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math2.sec(symbol.valueOf()));\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'sec');\n          return _.parse(format('1/cos({0})', symbol));\n        }\n\n        var retval,\n            c = false,\n            q = getQuadrant(symbol.multiplier.toDecimal()),\n            m = symbol.multiplier.abs();\n        symbol.multiplier = m;\n\n        if (symbol.isPi() && symbol.isLinear()) {\n          //return for 1 or -1 for multiples of pi\n          if (isInt(m)) {\n            retval = new Symbol(even(m) ? 1 : -1);\n          } else {\n            var n = m.num,\n                d = m.den;\n            if (d == 2) throw new UndefinedError('sec is undefined for ' + symbol.toString());else if (d == 3) {\n              retval = new Symbol(2);\n              c = true;\n            } else if (d == 4) {\n              retval = _.parse('sqrt(2)');\n              c = true;\n            } else if (d == 6) {\n              retval = _.parse('2/sqrt(3)');\n              c = true;\n            } else retval = _.symfunction('sec', [symbol]);\n          }\n        }\n\n        if (c && (q === 2 || q === 3)) retval.negate();\n        if (!retval) retval = _.symfunction('sec', [symbol]);\n        return retval;\n      },\n      csc: function csc(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math2.csc(symbol.valueOf()));\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'csc');\n          return _.parse(format('1/sin({0})', symbol));\n        }\n\n        var retval,\n            c = false,\n            q = getQuadrant(symbol.multiplier.toDecimal()),\n            sign = symbol.multiplier.sign(),\n            m = symbol.multiplier.abs();\n        symbol.multiplier = m;\n\n        if (symbol.isPi() && symbol.isLinear()) {\n          //return for 0 for multiples of pi\n          if (isInt(m)) {\n            throw new UndefinedError('csc is undefined for ' + symbol.toString());\n          } else {\n            var n = m.num,\n                d = m.den;\n\n            if (d == 2) {\n              retval = new Symbol(1);\n              c = true;\n            } else if (d == 3) {\n              retval = _.parse('2/sqrt(3)');\n              c = true;\n            } else if (d == 4) {\n              retval = _.parse('sqrt(2)');\n              c = true;\n            } else if (d == 6) {\n              retval = new Symbol(2);\n              c = true;\n            } else retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\n          }\n        }\n\n        if (!retval) retval = _.multiply(new Symbol(sign), _.symfunction('csc', [symbol]));\n        if (c && (q === 3 || q === 4)) retval.negate();\n        return retval;\n      },\n      cot: function cot(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math2.cot(symbol.valueOf()));\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'cot');\n          return _.parse(format('1/tan({0})', symbol));\n        }\n\n        var retval,\n            c = false,\n            q = getQuadrant(symbol.multiplier.toDecimal()),\n            m = symbol.multiplier;\n        symbol.multiplier = m;\n\n        if (symbol.isPi() && symbol.isLinear()) {\n          //return 0 for all multiples of pi\n          if (isInt(m)) {\n            throw new UndefinedError('cot is undefined for ' + symbol.toString());\n          } else {\n            var n = m.num,\n                d = m.den;\n            if (d == 2) retval = new Symbol(0);else if (d == 3) {\n              retval = _.parse('1/sqrt(3)');\n              c = true;\n            } else if (d == 4) {\n              retval = new Symbol(1);\n              c = true;\n            } else if (d == 6) {\n              retval = _.parse('sqrt(3)');\n              c = true;\n            } else retval = _.symfunction('cot', [symbol]);\n          }\n        }\n\n        if (!retval) retval = _.symfunction('cot', [symbol]);\n        if (c && (q === 2 || q === 4)) retval.negate();\n        return retval;\n      },\n      acos: function acos(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.acos(symbol.valueOf()));\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'acos');\n        }\n\n        return _.symfunction('acos', arguments);\n      },\n      asin: function asin(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.asin(symbol.valueOf()));\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'asin');\n        }\n\n        return _.symfunction('asin', arguments);\n      },\n      atan: function atan(symbol) {\n        var retval;\n        if (symbol.equals(0)) retval = new Symbol(0);else if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.atan(symbol.valueOf()));\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'atan');\n          return _.symfunction('atan', arguments);\n        } else if (symbol.equals(-1)) retval = _.parse('-pi/4');else retval = _.symfunction('atan', arguments);\n        return retval;\n      },\n      asec: function asec(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.acos(symbol.invert().valueOf()));\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'asec');\n        }\n\n        return _.symfunction('asec', arguments);\n      },\n      acsc: function acsc(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.asin(symbol.invert().valueOf()));\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'acsc');\n        }\n\n        return _.symfunction('acsc', arguments);\n      },\n      acot: function acot(symbol) {\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) {\n            return new _.add(_.parse('pi/2'), trig.atan(symbol).negate());\n          }\n\n          if (symbol.isImaginary()) return complex.evaluate(symbol, 'acot');\n        }\n\n        return _.symfunction('acot', arguments);\n      },\n      atan2: function atan2(a, b) {\n        if (a.equals(0) && b.equals(0)) throw new UndefinedError('atan2 is undefined for 0, 0');\n\n        if (Settings.PARSE2NUMBER && a.isConstant() && b.isConstant()) {\n          return new Symbol(Math.atan2(a, b));\n        }\n\n        return _.symfunction('atan2', arguments);\n      }\n    }; //object for functions which handle hyperbolic trig\n\n    var trigh = this.trigh = {\n      //container for hyperbolic trig function\n      cosh: function cosh(symbol) {\n        var retval;\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.cosh(symbol.valueOf()));\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'cosh');\n          }\n        }\n\n        return retval = _.symfunction('cosh', arguments);\n      },\n      sinh: function sinh(symbol) {\n        var retval;\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.sinh(symbol.valueOf()));\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'sinh');\n          }\n        }\n\n        return retval = _.symfunction('sinh', arguments);\n      },\n      tanh: function tanh(symbol) {\n        var retval;\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.tanh(symbol.valueOf()));\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'tanh');\n          }\n        }\n\n        return retval = _.symfunction('tanh', arguments);\n      },\n      sech: function sech(symbol) {\n        var retval;\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) {\n            return new Symbol(Math.sech(symbol.valueOf()));\n          }\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'sech');\n          }\n\n          return _.parse(format('1/cosh({0})', symbol));\n        }\n\n        return retval = _.symfunction('sech', arguments);\n      },\n      csch: function csch(symbol) {\n        var retval;\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.csch(symbol.valueOf()));\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'csch');\n          }\n\n          return _.parse(format('1/sinh({0})', symbol));\n        }\n\n        return retval = _.symfunction('csch', arguments);\n      },\n      coth: function coth(symbol) {\n        var retval;\n\n        if (Settings.PARSE2NUMBER) {\n          if (symbol.isConstant()) return new Symbol(Math.coth(symbol.valueOf()));\n\n          if (symbol.isImaginary()) {\n            return complex.evaluate(symbol, 'coth');\n          }\n\n          return _.parse(format('1/tanh({0})', symbol));\n        }\n\n        return retval = _.symfunction('coth', arguments);\n      },\n      acosh: function acosh(symbol) {\n        var retval;\n        if (Settings.PARSE2NUMBER && symbol.isImaginary()) retval = complex.evaluate(symbol, 'acosh');else if (Settings.PARSE2NUMBER) retval = evaluate(_.parse(format(Settings.LOG + '(({0})+sqrt(({0})^2-1))', symbol.toString())));else retval = _.symfunction('acosh', arguments);\n        return retval;\n      },\n      asinh: function asinh(symbol) {\n        var retval;\n        if (Settings.PARSE2NUMBER && symbol.isImaginary()) retval = complex.evaluate(symbol, 'asinh');else if (Settings.PARSE2NUMBER) retval = evaluate(_.parse(format(Settings.LOG + '(({0})+sqrt(({0})^2+1))', symbol.toString())));else retval = _.symfunction('asinh', arguments);\n        return retval;\n      },\n      atanh: function atanh(symbol) {\n        var retval;\n        if (Settings.PARSE2NUMBER && symbol.isImaginary()) retval = complex.evaluate(symbol, 'atanh');else if (Settings.PARSE2NUMBER) {\n          retval = evaluate(_.parse(format('(1/2)*' + Settings.LOG + '((1+({0}))/(1-({0})))', symbol.toString())));\n        } else retval = _.symfunction('atanh', arguments);\n        return retval;\n      },\n      asech: function asech(symbol) {\n        var retval;\n        if (Settings.PARSE2NUMBER && symbol.isImaginary()) retval = complex.evaluate(symbol, 'asech');else if (Settings.PARSE2NUMBER) retval = evaluate(_log(_.add(symbol.clone().invert(), _sqrt(_.subtract(_.pow(symbol, new Symbol(-2)), new Symbol(1))))));else retval = _.symfunction('asech', arguments);\n        return retval;\n      },\n      acsch: function acsch(symbol) {\n        var retval;\n        if (Settings.PARSE2NUMBER && symbol.isImaginary()) retval = complex.evaluate(symbol, 'acsch');else if (Settings.PARSE2NUMBER) retval = evaluate(_.parse(format(Settings.LOG + '((1+sqrt(1+({0})^2))/({0}))', symbol.toString())));else retval = _.symfunction('acsch', arguments);\n        return retval;\n      },\n      acoth: function acoth(symbol) {\n        var retval;\n        if (Settings.PARSE2NUMBER && symbol.isImaginary()) retval = complex.evaluate(symbol, 'acoth');else if (Settings.PARSE2NUMBER) {\n          if (symbol.equals(1)) retval = Symbol.infinity();else retval = evaluate(_.divide(_log(_.divide(_.add(symbol.clone(), new Symbol(1)), _.subtract(symbol.clone(), new Symbol(1)))), new Symbol(2)));\n        } else retval = _.symfunction('acoth', arguments);\n        return retval;\n      }\n    }; //list of supported units\n\n    this.units = {}; //list all the supported operators\n\n    var operators = {\n      '\\\\': {\n        precedence: 8,\n        operator: '\\\\',\n        action: 'slash',\n        prefix: true,\n        postfix: false,\n        leftAssoc: true,\n        operation: function operation(e) {\n          return e; //bypass the slash\n        }\n      },\n      '!!': {\n        precedence: 7,\n        operator: '!!',\n        action: 'dfactorial',\n        prefix: false,\n        postfix: true,\n        leftAssoc: true,\n        operation: function operation(e) {\n          return _.symfunction(Settings.DOUBLEFACTORIAL, [e]); //wrap it in a factorial function\n        }\n      },\n      '!': {\n        precedence: 7,\n        operator: '!',\n        action: 'factorial',\n        prefix: false,\n        postfix: true,\n        leftAssoc: true,\n        operation: function operation(e) {\n          return factorial(e); //wrap it in a factorial function\n        }\n      },\n      '^': {\n        precedence: 6,\n        operator: '^',\n        action: 'pow',\n        prefix: false,\n        postfix: false,\n        leftAssoc: true\n      },\n      '**': {\n        precedence: 6,\n        operator: '**',\n        action: 'pow',\n        prefix: false,\n        postfix: false,\n        leftAssoc: true\n      },\n      '%': {\n        precedence: 4,\n        operator: '%',\n        action: 'percent',\n        prefix: false,\n        postfix: true,\n        leftAssoc: true,\n        overloaded: true,\n        overloadAction: 'mod',\n        overloadLeftAssoc: false,\n        operation: function operation(x) {\n          return _.divide(x, new Symbol(100));\n        }\n      },\n      '*': {\n        precedence: 4,\n        operator: '*',\n        action: 'multiply',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '/': {\n        precedence: 4,\n        operator: '/',\n        action: 'divide',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '+': {\n        precedence: 3,\n        operator: '+',\n        action: 'add',\n        prefix: true,\n        postfix: false,\n        leftAssoc: false,\n        operation: function operation(x) {\n          return x;\n        }\n      },\n      'plus': {\n        precedence: 3,\n        operator: 'plus',\n        action: 'add',\n        prefix: true,\n        postfix: false,\n        leftAssoc: false,\n        operation: function operation(x) {\n          return x;\n        }\n      },\n      '-': {\n        precedence: 3,\n        operator: '-',\n        action: 'subtract',\n        prefix: true,\n        postfix: false,\n        leftAssoc: false,\n        operation: function operation(x) {\n          return x.negate();\n        }\n      },\n      '=': {\n        precedence: 2,\n        operator: '=',\n        action: 'equals',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '==': {\n        precedence: 1,\n        operator: '==',\n        action: 'eq',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '<': {\n        precedence: 1,\n        operator: '<',\n        action: 'lt',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '<=': {\n        precedence: 1,\n        operator: '<=',\n        action: 'lte',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '>': {\n        precedence: 1,\n        operator: '>',\n        action: 'gt',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      '=>': {\n        precedence: 1,\n        operator: '=>',\n        action: 'gte',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      ',': {\n        precedence: 0,\n        operator: ',',\n        action: 'comma',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false\n      },\n      ':': {\n        precedence: 0,\n        operator: ',',\n        action: 'assign',\n        prefix: false,\n        postfix: false,\n        leftAssoc: false,\n        vectorFn: 'slice'\n      },\n      ':=': {\n        precedence: 0,\n        operator: ',',\n        action: 'function_assign',\n        prefix: false,\n        postfix: false,\n        leftAssoc: true\n      }\n    }; //brackets\n\n    var brackets = {\n      '(': {\n        type: 'round',\n        id: 1,\n        is_open: true,\n        is_close: false\n      },\n      ')': {\n        type: 'round',\n        id: 2,\n        is_open: false,\n        is_close: true\n      },\n      '[': {\n        type: 'square',\n        id: 3,\n        is_open: true,\n        is_close: false,\n        maps_to: 'vector'\n      },\n      ']': {\n        type: 'square',\n        id: 4,\n        is_open: false,\n        is_close: true\n      },\n      '{': {\n        type: 'curly',\n        id: 5,\n        is_open: true,\n        is_close: false,\n        maps_to: 'Set'\n      },\n      '}': {\n        type: 'curly',\n        id: 6,\n        is_open: false,\n        is_close: true\n      }\n    }; // Supported functions.\n    // Format: function_name: [mapped_function, number_of_parameters]\n\n    var functions = this.functions = {\n      'cos': [trig.cos, 1],\n      'sin': [trig.sin, 1],\n      'tan': [trig.tan, 1],\n      'sec': [trig.sec, 1],\n      'csc': [trig.csc, 1],\n      'cot': [trig.cot, 1],\n      'acos': [trig.acos, 1],\n      'asin': [trig.asin, 1],\n      'atan': [trig.atan, 1],\n      'arccos': [trig.acos, 1],\n      'arcsin': [trig.asin, 1],\n      'arctan': [trig.atan, 1],\n      'asec': [trig.asec, 1],\n      'acsc': [trig.acsc, 1],\n      'acot': [trig.acot, 1],\n      'atan2': [trig.atan2, 2],\n      'acoth': [trigh.acoth, 1],\n      'asech': [trigh.asech, 1],\n      'acsch': [trigh.acsch, 1],\n      'sinh': [trigh.sinh, 1],\n      'cosh': [trigh.cosh, 1],\n      'tanh': [trigh.tanh, 1],\n      'asinh': [trigh.asinh, 1],\n      'sech': [trigh.sech, 1],\n      'csch': [trigh.csch, 1],\n      'coth': [trigh.coth, 1],\n      'acosh': [trigh.acosh, 1],\n      'atanh': [trigh.atanh, 1],\n      'log10': [, 1],\n      'exp': [exp, 1],\n      'radians': [radians, 1],\n      'degrees': [degrees, 1],\n      'min': [min, -1],\n      'max': [max, -1],\n      'erf': [, 1],\n      'floor': [, 1],\n      'ceil': [, 1],\n      'trunc': [, 1],\n      'Si': [, 1],\n      'step': [, 1],\n      'rect': [, 1],\n      'sinc': [sinc, 1],\n      'tri': [, 1],\n      'sign': [sign, 1],\n      'Ci': [, 1],\n      'Ei': [, 1],\n      'Shi': [, 1],\n      'Chi': [, 1],\n      'Li': [, 1],\n      'fib': [, 1],\n      'fact': [factorial, 1],\n      'factorial': [factorial, 1],\n      'continued_fraction': [continued_fraction, [1, 2]],\n      'dfactorial': [, 1],\n      'gamma_incomplete': [, [1, 2]],\n      'round': [round, [1, 2]],\n      'scientific': [scientific, [1, 2]],\n      'mod': [mod, 2],\n      'pfactor': [pfactor, 1],\n      'vector': [vector, -1],\n      'matrix': [matrix, -1],\n      'Set': [set, -1],\n      'imatrix': [imatrix, -1],\n      'parens': [parens, -1],\n      'sqrt': [_sqrt, 1],\n      'nthroot': [nthroot, 2],\n      'log': [_log, [1, 2]],\n      'expand': [expand, 1],\n      'abs': [abs, 1],\n      'invert': [invert, 1],\n      'determinant': [determinant, 1],\n      'size': [size, 1],\n      'transpose': [transpose, 1],\n      'dot': [dot, 2],\n      'cross': [cross, 2],\n      'vecget': [vecget, 2],\n      'vecset': [vecset, 3],\n      'vectrim': [vectrim, [1, 2]],\n      'matget': [matget, 3],\n      'matset': [matset, 4],\n      'matgetrow': [matgetrow, 2],\n      'matsetrow': [matsetrow, 3],\n      'matgetcol': [matgetcol, 2],\n      'matsetcol': [matsetcol, 3],\n      'rationalize': [rationalize, 1],\n      'IF': [IF, 3],\n      'is_in': [is_in, 2],\n      //imaginary support\n      'realpart': [realpart, 1],\n      'imagpart': [imagpart, 1],\n      'conjugate': [conjugate, 1],\n      'arg': [arg, 1],\n      'polarform': [polarform, 1],\n      'rectform': [rectform, 1],\n      'sort': [sort, [1, 2]],\n      'integer_part': [, 1],\n      'union': [union, 2],\n      'contains': [contains, 2],\n      'intersection': [intersection, 2],\n      'difference': [difference, 2],\n      'intersects': [intersects, 2],\n      'is_subset': [is_subset, 2],\n      //system support\n      'print': [print, -1]\n    }; //error handler\n\n    this.error = err; //this function is used to comb through the function modules and find a function given its name\n\n    var findFunction = function findFunction(fname) {\n      var fmodules = Settings.FUNCTION_MODULES,\n          l = fmodules.length;\n\n      for (var i = 0; i < l; i++) {\n        var fmodule = fmodules[i];\n        if (fname in fmodule) return fmodule[fname];\n      }\n\n      err('The function ' + fname + ' is undefined!');\n    };\n    /**\r\n     * This method gives the ability to override operators with new methods.\r\n     * @param {String} which\r\n     * @param {Function} with_what\r\n     */\n\n\n    this.override = function (which, with_what) {\n      if (!bin[which]) bin[which] = [];\n      bin[which].push(this[which]);\n      this[which] = with_what;\n    };\n    /**\r\n     * Restores a previously overridden operator\r\n     * @param {String} what\r\n     */\n\n\n    this.restore = function (what) {\n      if (this[what]) this[what] = bin[what].pop();\n    };\n    /**\r\n     * This method is supposed to behave similarly to the override method but it does not override\r\n     * the existing function rather it only extends it\r\n     * @param {String} what\r\n     * @param {Function} with_what\r\n     * @param {boolean} force_call\r\n     */\n\n\n    this.extend = function (what, with_what, force_call) {\n      var _ = this,\n          extended = this[what];\n\n      if (typeof extended === 'function' && typeof with_what === 'function') {\n        var f = this[what];\n\n        this[what] = function (a, b) {\n          if (isSymbol(a) && isSymbol(b) && !force_call) return f.call(_, a, b);else return with_what.call(_, a, b, f);\n        };\n      }\n    };\n    /**\r\n     * Generates library's representation of a function. It's a fancy way of saying a symbol with \r\n     * a few extras. The most important thing is that that it gives a fname and \r\n     * an args property to the symbols in addition to changing its group to FN\r\n     * @param {String} fn_name\r\n     * @param {Array} params\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.symfunction = function (fn_name, params) {\n      //call the proper function and return the result;\n      var f = new Symbol(fn_name);\n      f.group = FN;\n      if (typeof params === 'object') params = [].slice.call(params); //ensure an array\n\n      f.args = params;\n      f.fname = fn_name === PARENTHESIS ? '' : fn_name;\n      f.updateHash();\n      return f;\n    };\n    /**\r\n     * An internal function call for the Parser. This will either trigger a real \r\n     * function call if it can do so or just return a symbolic representation of the \r\n     * function using symfunction.\r\n     * @param {String} fn_name\r\n     * @param {Array} args\r\n     * @param {int} allowed_args\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.callfunction = function (fn_name, args, allowed_args) {\n      var fn_settings = functions[fn_name];\n      if (!fn_settings) err('Nerdamer currently does not support the function ' + fn_name);\n      var num_allowed_args = fn_settings[1] || allowed_args,\n          //get the number of allowed arguments\n      fn = fn_settings[0],\n          //get the mapped function\n      retval; //We want to be able to call apply on the arguments or create a symfunction. Both require\n      //an array so make sure to wrap the argument in an array.\n\n      if (!(args instanceof Array)) args = args !== undefined ? [args] : [];\n\n      if (num_allowed_args !== -1) {\n        var is_array = isArray(num_allowed_args),\n            min_args = is_array ? num_allowed_args[0] : num_allowed_args,\n            max_args = is_array ? num_allowed_args[1] : num_allowed_args,\n            num_args = args.length;\n        var error_msg = fn_name + ' requires a {0} of {1} arguments. {2} provided!';\n        if (num_args < min_args) err(format(error_msg, 'minimum', min_args, num_args));\n        if (num_args > max_args) err(format(error_msg, 'maximum', max_args, num_args));\n      }\n      /*\r\n       * The following are very important to the how nerdamer constructs functions!\r\n       * Assumption 1 - if fn is undefined then handling of the function is purely numeric. This\r\n       *     enables us to reuse Math, Math2, ..., any function from Settings.FUNCTIONS_MODULES entry\r\n       * Assumption 2 - if fn is defined then that function takes care of EVERYTHING including symbolics\r\n       * Assumption 3 - if the user calls symbolics on a function that returns a numeric value then\r\n       *     they are expecting a symbolic output.\r\n       */\n      //check if arguments are all numers\n\n\n      var numericArgs = allNumbers(args); //Big number support. Check if Big number is requested and the arguments are all numeric and, not imaginary\n\n      if (Settings.USE_BIG && numericArgs) {\n        retval = Big[fn_name].apply(undefined, args);\n      } else {\n        if (!fn) {\n          //Remember assumption 1. No function defined so it MUST be numeric in nature\n          fn = findFunction(fn_name);\n          if (Settings.PARSE2NUMBER && numericArgs) retval = bigConvert(fn.apply(fn, args));else retval = _.symfunction(fn_name, args);\n        } else {\n          //Remember assumption 2. The function is defined so it MUST handle all aspects including numeric values\n          retval = fn.apply(fn_settings[2], args);\n        }\n      }\n\n      return retval;\n    };\n    /**\r\n     * Build a regex based on the operators currently loaded. These operators are to be ignored when \r\n     * substituting spaces for multiplication\r\n     */\n\n\n    this.operator_filter_regex = function () {\n      //we only want the operators which are singular since those are the ones\n      //that nerdamer uses anyway\n      var ostr = '^\\\\' + Object.keys(operators).filter(function (x) {\n        if (x.length === 1) return x;\n      }).join('\\\\'); //create a regex which captures all spaces between characters except those\n      //have an operator on one end\n\n      return new RegExp('([' + ostr + '])\\\\s+([' + ostr + '])');\n    }();\n    /**\r\n     * Replaces nerdamer.setOperator\r\n     * @param {object} operator\r\n     * @param {boolean} shift         \r\n     */\n\n\n    this.setOperator = function (operator, action, shift) {\n      var name = operator.operator; //take the name to be the symbol\n\n      operators[name] = operator;\n      if (action) this[operator.action] = action; //make the parser aware of the operator\n\n      _[name] = operator.operation; //make the action available to the parser if infix\n\n      if (!operator.action && !(operator.prefix || operator.postif)) {\n        operator.action = name;\n      } //if this operator is exclusive then all successive operators should be shifted\n\n\n      if (shift === 'over' || shift === 'under') {\n        var precedence = operator.precedence;\n\n        for (var x in operators) {\n          var o = operators[x];\n          var condition = shift === 'over' ? o.precedence >= precedence : o.precedence > precedence;\n          if (condition) o.precedence++;\n        }\n\n        ;\n      }\n    };\n    /**\r\n     * Gets an opererator by its symbol\r\n     * @param {String} operator\r\n     * @returns {Object}\r\n     */\n\n\n    this.getOperator = function (operator) {\n      return operators[operator];\n    };\n\n    this.aliasOperator = function (o, n) {\n      var t = {};\n      var operator = operators[o]; //copy everything over to the new operator\n\n      for (var x in operator) {\n        t[x] = operator[x];\n      } //update the symbol\n\n\n      t.operator = n;\n      this.setOperator(t);\n    };\n    /**\r\n     * Returns the list of operators. Caution! Can break parser!\r\n     * @returns {object}\r\n     */\n\n\n    this.getOperators = function () {\n      //will replace this with some cloning action in the future\n      return operators;\n    };\n\n    this.getBrackets = function () {\n      return brackets;\n    };\n    /*\r\n     * Preforms preprocessing on the string. Useful for making early modification before \r\n     * sending to the parser\r\n     * @param {String} e\r\n     */\n\n\n    var prepare_expression = function prepare_expression(e) {\n      /*\r\n       * Since variables cannot start with a number, the assumption is made that when this occurs the\r\n       * user intents for this to be a coefficient. The multiplication symbol in then added. The same goes for \r\n       * a side-by-side close and open parenthesis\r\n       */\n      e = String(e); //apply preprocessors\n\n      for (var i = 0; i < preprocessors.actions.length; i++) {\n        e = preprocessors.actions[i].call(this, e);\n      }\n      /* //NO LONGER NEEDED SINCE IMPLIED MULTIPLICATION IS NOW HANDLED LATER IN TOKENIZER\r\n      var match;\r\n      //add support for spaces between variables\r\n      while (true) {\r\n          match = _.operator_filter_regex.exec(e);\r\n          if (!match)\r\n              break;\r\n          try {\r\n              var a = match[1],\r\n                      b = match[2];\r\n              validateName(a);\r\n              validateName(b);\r\n              e = e.replace(match[0], a + '*' + b);\r\n          }\r\n          catch (e) {\r\n              break;\r\n          }\r\n      }\r\n      */\n      //e = e.split(' ').join('');//strip empty spaces\n      //replace multiple spaces with one space\n\n\n      e = e.replace(/\\s+/g, ' '); //only even bother to check if the string contains e. This regex is painfully slow and might need a better solution. e.g. hangs on (0.06/3650))^(365)\n\n      if (/e/gi.test(e)) {\n        e = e.replace(/\\-*\\d+\\.*\\d*e\\+?\\-?\\d+/gi, function (x) {\n          return scientificToDecimal(x);\n        });\n      } //replace scientific numbers\n      //allow omission of multiplication after coefficients\n\n\n      e = e.replace(/([\\+\\-\\/\\*]*[0-9]+)([a-z_αAβBγΓδΔϵEζZηHθΘιIκKλΛμMνNξΞoOπΠρPσΣτTυϒϕΦχXψΨωΩ]+[\\+\\-\\/\\*]*)/gi, function () {\n        var str = arguments[4],\n            group1 = arguments[1],\n            group2 = arguments[2],\n            start = arguments[3],\n            first = str.charAt(start),\n            before = '',\n            d = '*';\n        if (!first.match(/[\\+\\-\\/\\*]/)) before = str.charAt(start - 1);\n        if (before.match(/[a-z]/i)) d = '';\n        return group1 + d + group2;\n      }).replace(/([a-z0-9_]+)/gi, function (match, a) {\n        if (Settings.USE_MULTICHARACTER_VARS === false && !(a in functions)) {\n          if (!isNaN(a)) return a;\n          return a.split('').join('*');\n        }\n\n        return a;\n      }) //allow omission of multiplication sign between brackets\n      .replace(/\\)\\(/g, ')*(') || '0'; //replace x(x+a) with x*(x+a)\n\n      while (true) {\n        var e_org = e; //store the original\n\n        e = e.replace(/([a-z0-9_]+)(\\()|(\\))([a-z0-9]+)/gi, function (match, a, b, c, d) {\n          var g1 = a || c,\n              g2 = b || d;\n          if (g1 in functions) //create a passthrough for functions\n            return g1 + g2;\n          return g1 + '*' + g2;\n        }); //if the original equals the replace we're done\n\n        if (e_org === e) break;\n      }\n\n      return e;\n    }; //delay setting of constants until Settings is ready\n\n\n    this.initConstants = function () {\n      this.CONSTANTS = {\n        E: new Symbol(Settings.E),\n        PI: new Symbol(Settings.PI)\n      };\n    };\n    /*\r\n     * Debugging method used to better visualize vector and arrays\r\n     * @param {object} o\r\n     * @returns {String}\r\n     */\n\n\n    this.pretty_print = function (o) {\n      if (Array.isArray(o)) {\n        var s = o.map(function (x) {\n          return _.pretty_print(x);\n        }).join(', ');\n        if (o.type === 'vector') return 'vector<' + s + '>';\n        return '(' + s + ')';\n      }\n\n      return o.toString();\n    };\n\n    this.peekers = {\n      pre_operator: [],\n      post_operator: [],\n      pre_function: [],\n      post_function: []\n    };\n\n    this.callPeekers = function (name) {\n      var peekers = this.peekers[name]; //remove the first items and stringify\n\n      var args = arguments2Array(arguments).slice(1).map(stringify); //call each one of the peekers\n\n      for (var i = 0; i < peekers.length; i++) {\n        peekers[i].apply(null, args);\n      }\n    };\n    /*\r\n     * Tokenizes the string\r\n     * @param {String} e\r\n     * @returns {Token[]}\r\n     */\n\n\n    this.tokenize = function (e) {\n      //cast to String\n      e = String(e); //remove multiple white spaces and spaces at beginning and end of string\n\n      e = e.trim().replace(/\\s+/g, ' '); //remove spaces before and after brackets\n\n      for (var x in brackets) {\n        var regex = new RegExp(brackets[x].is_close ? '\\\\s+\\\\' + x : '\\\\' + x + '\\\\s+', 'g');\n        e = e.replace(regex, x);\n      }\n\n      var col = 0; //the column position\n\n      var L = e.length; //expression length\n\n      var lpos = 0; //marks beginning of next token\n\n      var tokens = []; //the tokens container\n\n      var scopes = [tokens]; //initiate with the tokens as the highest scope\n\n      var target = scopes[0]; //the target to which the tokens are added. This can swing up or down\n\n      var depth = 0;\n      var open_brackets = [];\n      var has_space = false; //marks if an open space character was found\n\n      var SPACE = ' ';\n      var EMPTY_STRING = '';\n      var COMMA = ',';\n      var MINUS = '-';\n      var MULT = '*'; //Possible source of bug. Review\n\n      /*\r\n       //gets the next space\r\n       var next_space = function(from) {\r\n       for(var i=from; i<L; i++) {\r\n       if(e.charAt(i) === ' ')\r\n       return i;\r\n       }\r\n       \r\n       return L; //assume the end of the string instead\r\n       };\r\n       */\n\n      /**\r\n       * Adds a scope to tokens\r\n       * @param {String} scope_type \r\n       * @param {int} column \r\n       * @returns {undefined}\r\n       */\n\n      var addScope = function addScope(scope_type, column) {\n        var new_scope = []; //create a new scope\n\n        if (scope_type !== undefined) {\n          new_scope.type = scope_type;\n        }\n\n        new_scope.column = column; //mark the column of the scope\n\n        scopes.push(new_scope); //add it to the list of scopes\n\n        target.push(new_scope); //add it to the tokens list since now it's a scope\n\n        target = new_scope; //point to it\n\n        depth++; //go down one in scope\n      };\n      /**\r\n       * Goes up in scope by one\r\n       * @returns {undefined}\r\n       */\n\n\n      var goUp = function goUp() {\n        scopes.pop(); //remove the scope from the scopes stack\n\n        target = scopes[--depth]; //point the above scope\n      };\n      /**\r\n       * Extracts all the operators from the expression string starting at postion start_at\r\n       * @param {int} start_at\r\n       * @returns {String}\r\n       */\n\n\n      var get_operator_str = function get_operator_str(start_at) {\n        start_at = start_at !== undefined ? start_at : col; //mark the end of the operator as the start since we're just going\n        //to be walking along the string\n\n        var end = start_at + 1; //just keep moving along\n\n        while (e.charAt(end++) in operators) {} //remember that we started at one position ahead. The beginning operator is what triggered\n        //this function to be called in the first place. String.CharAt is zero based so we now\n        //have to correct two places. The initial increment + the extra++ at the end of end during\n        //the last iteration.\n\n\n        return e.substring(start_at, end - 1);\n      };\n      /**\r\n       * Breaks operator up in to several different operators as defined in operators\r\n       * @param {String} operator_str\r\n       * @returns {String[]}\r\n       */\n\n\n      var chunkify = function chunkify(operator_str) {\n        var start = col - operator_str.length; //start of operator\n\n        var _operators = [];\n        var operator = operator_str.charAt(0); //grab the largest possible chunks but start at 2 since we already know\n        //that the first character is an operator\n\n        for (var i = 1, L = operator_str.length; i < L; i++) {\n          var ch = operator_str.charAt(i);\n          var o = operator + ch; //since the operator now is undefined then the last operator \n          //was the largest possible combination.\n\n          if (!(o in operators)) {\n            _operators.push(new Token(operator, Token.OPERATOR, start + i));\n\n            operator = ch;\n          } else operator = o; //now the operator is the larger chunk\n\n        } //add the last operator\n\n\n        _operators.push(new Token(operator, Token.OPERATOR, start + i));\n\n        return _operators;\n      };\n      /**\r\n       * Is used to add a token to the tokens array. Makes sure that no empty token is added\r\n       * @param {int} at\r\n       * @param {String} token\r\n       * @returns {undefined}\r\n       */\n\n\n      var add_token = function add_token(at, token) {\n        //grab the token if we're not supplied one\n        if (token === undefined) token = e.substring(lpos, at); //only add it if it's not an empty string\n\n        if (token in _.units) target.push(new Token(token, Token.UNIT, lpos));else if (token !== '') target.push(new Token(token, Token.VARIABLE_OR_LITERAL, lpos));\n      };\n      /**\r\n       * Adds a function to the output\r\n       * @param {String} f\r\n       * @returns {undefined}\r\n       */\n\n\n      var add_function = function add_function(f) {\n        target.push(new Token(f, Token.FUNCTION, lpos));\n      };\n      /**\r\n       * Tokens are found between operators so this marks the location of where the last token was found\r\n       * @param {int} position\r\n       * @returns {undefined}\r\n       */\n\n\n      var set_last_position = function set_last_position(position) {\n        lpos = position + 1;\n      };\n      /**\r\n       * When a operator is found and added, especially a combo operator, then the column location\r\n       * has to be adjusted to the end of the operator\r\n       * @returns {undefined}\r\n       */\n\n\n      var adjust_column_position = function adjust_column_position() {\n        lpos = lpos + operator_str.length - 2;\n        col = lpos - 1;\n      };\n\n      for (; col < L; col++) {\n        var ch = e.charAt(col);\n\n        if (ch in operators) {\n          add_token(col); //is the last token numeric?\n\n          var last_token_is_numeric = target[0] && isNumber(target[0]); //is this character multiplication?\n\n          var is_multiplication = last_token_is_numeric && ch === MULT; //if we're in a new scope then go up by one but if the space \n          //is right befor an operator then it makes no sense to go up in scope\n          //consider sin -x. The last position = current position at the minus sign\n          //this means that we're going for sin(x) -x which is wrong\n          //Ignore comma since comma is still part of the existing scope.\n\n          if (has_space && lpos < col && !(ch === COMMA || is_multiplication)) {\n            has_space = false;\n            goUp();\n          } //mark the last position that a \n\n\n          set_last_position(col + 1);\n          var operator_str = get_operator_str(col);\n          adjust_column_position();\n          target.push.apply(target, chunkify(operator_str));\n        } else if (ch in brackets) {\n          var bracket = brackets[ch];\n\n          if (bracket.is_open) {\n            //mark the bracket\n            open_brackets.push([bracket, lpos]);\n            var f = e.substring(lpos, col);\n\n            if (f in functions) {\n              add_function(f);\n            } else if (f !== '') {\n              //assume multiplication\n              //TODO: Add the multiplication to stack\n              target.push(new Token(f, Token.VARIABLE_OR_LITERAL, lpos));\n            } //go down one in scope\n\n\n            addScope(bracket.maps_to, col);\n          } else if (bracket.is_close) {\n            //get the matching bracket\n            var pair = open_brackets.pop(); //throw errors accordingly\n            //missing open bracket\n\n            if (!pair) throw new ParityError('Missing open bracket for bracket at: ' + (col + 1)); //incorrect pair\n            else if (pair[0].id !== bracket.id - 1) throw new ParityError('Parity error');\n            add_token(col);\n            goUp();\n          }\n\n          set_last_position(col);\n        } else if (ch === SPACE) {\n          var prev = e.substring(lpos, col); //look back\n\n          var nxt = e.charAt(col + 1); //look forward\n\n          if (has_space) {\n            if (prev in operators) {\n              target.push(new Token(prev, Token.OPERATOR, col));\n            } else {\n              add_token(undefined, prev); //we're at the closing space\n\n              goUp(); //go up in scope if we're at a space\n              //assume multiplication if it's not an operator except for minus\n\n              var is_operator = (nxt in operators);\n\n              if (is_operator && operators[nxt].value === MINUS || !is_operator) {\n                target.push(new Token(MULT, Token.OPERATOR, col));\n              }\n            }\n\n            has_space = false; //remove the space\n          } else {\n            //we're at the closing space\n            //check if it's a function\n            var f = e.substring(lpos, col);\n\n            if (f in functions) {\n              //there's no need to go up in scope if the next character is an operator\n              has_space = true; //mark that a space was found\n\n              add_function(f);\n              addScope();\n            } else if (f in operators) {\n              target.push(new Token(f, Token.OPERATOR, col));\n            } else {\n              add_token(undefined, f); //peek ahead to the next character\n\n              var nxt = e.charAt(col + 1); //If it's a number then add the multiplication operator to the stack but make sure that the next character\n              //is not an operator\n\n              if (prev !== EMPTY_STRING && nxt !== EMPTY_STRING && !(prev in operators) && !(nxt in operators)) target.push(new Token(MULT, Token.OPERATOR, col));\n            } //Possible source of bug. Review\n\n            /*\r\n             //space can mean multiplication so add the symbol if the is encountered\r\n             if(/\\d+|\\d+\\.?\\d*e[\\+\\-]*\\d+/i.test(f)) {\r\n             var next = e.charAt(col+1);\r\n             var next_is_operator = next in operators;\r\n             var ns = next_space(col+1);\r\n             var next_word = e.substring(col+1, ns);\r\n             //the next can either be a prefix operator or no operator\r\n             if((next_is_operator && operators[next].prefix) || !(next_is_operator || next_word in operators))\r\n             target.push(new Token('*', Token.OPERATOR, col));\r\n             }\r\n             */\n\n          }\n\n          set_last_position(col); //mark this location    \n        }\n      } //check that all brackets were closed\n\n\n      if (open_brackets.length) {\n        var b = open_brackets.pop();\n        throw new ParityError('Missing closed bracket for bracket at ' + (b[1] + 1));\n      } //add the last token\n\n\n      add_token(col);\n      return tokens;\n    };\n    /*\r\n     * Puts token array in Reverse Polish Notation\r\n     * @param {Token[]} tokens\r\n     * @returns {Token[]}\r\n     */\n\n\n    this.toRPN = function (tokens) {\n      var fn = tokens.type;\n      var l = tokens.length,\n          i;\n      var output = [];\n      var stack = [];\n      var prefixes = [];\n\n      var collapse = function collapse(target, destination) {\n        while (target.length) {\n          destination.push(target.pop());\n        }\n      }; //mark all the prefixes and add them to the stack\n\n\n      for (i = 0; i < l; i++) {\n        var token = tokens[i];\n        if (token.type !== Token.OPERATOR) break;\n        if (!token.prefix) throw new OperatorError('Not a prefix operator');\n        token.is_prefix = true;\n        stack.push(token);\n      } //begin with remaining tokens\n\n\n      for (; i < l; i++) {\n        var e = tokens[i];\n\n        if (e.type === Token.OPERATOR) {\n          var operator = e; //create the option for the operator being overloaded\n\n          if (operator.overloaded) {\n            var next = tokens[i + 1]; //if it's followed by a number or variable then we assume it's not a postfix operator\n\n            if (next && next.type === Token.VARIABLE_OR_LITERAL) {\n              operator.postfix = false; //override the original function with the overload function\n\n              operator.action = operator.overloadAction;\n              operator.leftAssoc = operator.overloadLeftAssoc;\n            }\n          } //if the stack is not empty\n\n\n          while (stack.length) {\n            var last = stack[stack.length - 1]; //if (there is an operator at the top of the operator stack with greater precedence)\n            //or (the operator at the top of the operator stack has equal precedence and is left associative)) ~ wikipedia\n            //the !prefixes.length makes sure that the operator on stack isn't prematurely taken fromt he stack.\n\n            if (!(last.precedence > operator.precedence || !operator.leftAssoc && last.precedence === operator.precedence)) break;\n            output.push(stack.pop());\n          } //change the behavior of the operator if it's a vector and we've been asked to do so\n\n\n          if ((fn === 'vector' || fn === 'set') && 'vectorFn' in operator) operator.action = operator.vectorFn; //if the operator is a postfix operator then we're ready to go since it belongs\n          //to the preceding token. However the output cannot be empty. It must have either\n          //an operator or a variable/literal\n\n          if (operator.postfix) {\n            var previous = tokens[i - 1];\n            if (!previous) throw new OperatorError(\"Unexpected prefix operator '\" + e.value + \"'! at \" + e.column);else if (previous.type === Token.OPERATOR) {\n              //a postfix can only be followed by a postfix\n              if (!previous.postfix) throw new OperatorError(\"Unexpected prefix operator '\" + previous.value + \"'! at \" + previous.column);\n            }\n          } else {\n            //we must be at an infix so point the operator this\n            do {\n              //the first one is an infix operator all others have to be prefix operators so jump to the end\n              var next = tokens[i + 1]; //take a look ahead\n\n              var next_is_operator = next ? next.type === Token.OPERATOR : false; //check if it's an operator\n\n              if (next_is_operator) {\n                //if it's not a prefix operator then it not in the right place\n                if (!next.prefix) {\n                  throw new OperatorError('A prefix operator was expected at ' + next.column);\n                } //mark it as a confirmed prefix\n\n\n                next.is_prefix = true; //add it to the prefixes\n\n                prefixes.push(next);\n                i++;\n              }\n            } while (next_is_operator);\n          } //if it's a prefix it should be on a special stack called prefixes\n          //we do this to hold on to prefixes because of left associative operators.\n          //they belong to the variable/literal but if placed on either the stack\n          //or output there's no way of knowing this. I might be wrong so I welcome \n          //any discussion about this.\n\n\n          if (operator.is_prefix) //ADD ALL EXCEPTIONS FOR ADDING TO PREFIX STACK HERE. !!!\n            prefixes.push(operator);else stack.push(operator); //move the prefixes to the stack\n\n          while (prefixes.length) {\n            if (operator.leftAssoc || !operator.leftAssoc && prefixes[prefixes.length - 1].precedence >= operator.precedence) //revisit for commas\n              stack.push(prefixes.pop());else break;\n          }\n        } else if (e.type === Token.VARIABLE_OR_LITERAL) {\n          //move prefixes to stack at beginning of scope\n          if (output.length === 0) collapse(prefixes, stack); //done with token\n\n          output.push(e);\n          var last_on_stack = stack[stack.length - 1]; //then move all the prefixes to the output\n\n          if (!last_on_stack || !last_on_stack.leftAssoc) collapse(prefixes, output);\n        } else if (e.type === Token.FUNCTION) {\n          stack.push(e);\n        } else if (e.type === Token.UNIT) {\n          //if it's a unit it belongs on the stack since it's tied to the previous token\n          output.push(e);\n        } //if it's an additonal scope then put that into RPN form\n\n\n        if (Array.isArray(e)) {\n          output.push(this.toRPN(e));\n          if (e.type) output.push(new Token(e.type, Token.FUNCTION, e.column)); //since it's hidden it needs no column\n        }\n      } //collapse the remainder of the stack and prefixes to output\n\n\n      collapse(stack, output);\n      collapse(prefixes, output);\n      return output;\n    };\n    /*\r\n     * Parses the tokens  \r\n     * @param {Tokens[]} rpn\r\n     * @param {object} substitutions\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.parseRPN = function (rpn, substitutions) {\n      try {\n        //default substitutions\n        substitutions = substitutions || {}; //prepare the substitutions.\n        //we first parse them out as-is\n\n        for (var x in substitutions) {\n          substitutions[x] = _.parse(substitutions[x], {});\n        } //Although technically constants,\n        //pi and e are only available when evaluating the expression so add to the subs.\n        //Doing this avoids rounding errors \n        //link e and pi\n\n\n        if (Settings.PARSE2NUMBER) {\n          //use the value provided if the individual for some strange reason prefers this.\n          //one reason could be to sub e but not pi or vice versa\n          if (!('e' in substitutions)) substitutions.e = new Symbol(Settings.E);\n          if (!('pi' in substitutions)) substitutions.pi = new Symbol(Settings.PI);\n        }\n\n        var Q = [];\n\n        for (var i = 0, l = rpn.length; i < l; i++) {\n          var e = rpn[i]; //Arrays indicate a new scope so parse that out\n\n          if (Array.isArray(e)) {\n            e = this.parseRPN(e, substitutions);\n          }\n\n          if (e) {\n            if (e.type === Token.OPERATOR) {\n              if (e.is_prefix || e.postfix) //resolve the operation assocated with the prefix\n                Q.push(e.operation(Q.pop()));else {\n                var b = Q.pop();\n                var a = Q.pop(); //Throw an error if the RH value is empty. This cannot be a postfix since we already checked\n\n                if (typeof a === 'undefined') throw new OperatorError(e + ' is not a valid postfix operator at ' + e.column);\n                var is_comma = e.action === 'comma'; //convert Sets to Vectors on all operations at this point. Sets are only recognized functions or individually\n\n                if (a instanceof Set && !is_comma) a = Vector.fromSet(a);\n                if (b instanceof Set && !is_comma) b = Vector.fromSet(b); //call all the pre-operators \n\n                this.callPeekers('pre_operator', a, b, e);\n\n                var ans = _[e.action](a, b); //call all the pre-operators\n\n\n                this.callPeekers('post_operator', ans, a, b, e);\n                Q.push(ans);\n              }\n            } else if (e.type === Token.FUNCTION) {\n              var args = Q.pop();\n              var parent = args.parent; //make a note of the parent\n\n              if (!(args instanceof Collection)) args = Collection.create(args); //the return value may be a vector. If it is then we check\n              //Q to see if there's another vector on the stack. If it is then\n              //we check if has elements. If it does then we know that we're dealing\n              //with an \"getter\" object and return the requested values\n              //call the function. This is the _.callfunction method in nerdamer\n              //call the function. This is the _.callfunction method in nerdamer\n\n              var fn_name = e.value;\n              var fn_args = args.getItems(); //call the pre-function peekers\n\n              this.callPeekers('pre_function', fn_name, fn_args);\n\n              var ret = _.callfunction(fn_name, fn_args); //call the post-function peekers\n\n\n              this.callPeekers('post_function', ret, fn_name, fn_args);\n              var last = Q[Q.length - 1];\n              var next = rpn[i + 1];\n              var next_is_comma = next && next.type === Token.OPERATOR && next.value === ',';\n\n              if (!next_is_comma && ret instanceof Vector && last && last.elements && !(last instanceof Collection)) {\n                //remove the item from the queue\n                var item = Q.pop();\n                var getter = ret.elements[0]; //check if it's symbolic. If so put it back and add the item to the stack\n\n                if (!getter.isConstant()) {\n                  item.getter = getter;\n                  Q.push(item);\n                  Q.push(ret);\n                } else if (getter instanceof Slice) {\n                  //if it's a Slice return the slice\n                  Q.push(Vector.fromArray(item.elements.slice(getter.start, getter.end)));\n                } else {\n                  var index = Number(getter);\n                  var il = item.elements.length; //support for negative indices\n\n                  if (index < 0) index = il + index; //it it's still out of bounds\n\n                  if (index < 0 || index >= il) //index should no longer be negative since it's been reset above\n                    //range error\n                    throw new OutOfRangeError('Index out of range ' + (e.column + 1));\n                  var element = item.elements[index]; //cyclic but we need to mark this for future reference\n\n                  item.getter = index;\n                  element.parent = item;\n                  Q.push(element);\n                }\n              } else {\n                //extend the parent reference\n                if (parent) ret.parent = parent;\n                Q.push(ret);\n              }\n            } else {\n              var subbed;\n              var v = e.value;\n              if (v in Settings.ALIASES) e = _.parse(Settings.ALIASES[e]); //wrap it in a symbol if need be\n              else if (e.type === Token.VARIABLE_OR_LITERAL) e = new Symbol(v);else if (e.type === Token.UNIT) {\n                  e = new Symbol(v);\n                  e.isUnit = true;\n                } //make substitutions\n              //Always constants first. This avoids the being overridden\n\n              if (v in _.CONSTANTS) {\n                subbed = e;\n                e = new Symbol(_.CONSTANTS[v]);\n              } //next substitutions. This allows declared variable to be overridden\n              //check if the values match to avoid erasing the multiplier. \n              //Example:/e = 3*a. substutiting a for a will wipe out the multiplier.\n              else if (v in substitutions && v !== substitutions[v].value) {\n                  subbed = e;\n                  e = substitutions[v].clone();\n                } //next declare variables\n                else if (v in VARS) {\n                    subbed = e;\n                    e = VARS[v].clone();\n                  } //make notation of what it was before\n\n\n              if (subbed) e.subbed = subbed;\n              Q.push(e);\n            }\n          }\n        }\n\n        return Q[0];\n      } catch (error) {\n        throw new ParseError(error.message + ': ' + e.column);\n      }\n    };\n    /**\r\n     * This is the method that triggers the parsing of the string. It generates a parse tree but processes \r\n     * it right away. The operator functions are called when their respective operators are reached. For instance\r\n     * + with cause this.add to be called with the left and right hand values. It works by walking along each \r\n     * character of the string and placing the operators on the stack and values on the output. When an operator\r\n     * having a lower order than the last is reached then the stack is processed from the last operator on the \r\n     * stack.\r\n     * @param {String} token\r\n     */\n\n\n    function Node(token) {\n      this.type = token.type;\n      this.value = token.value; //the incoming token may already be a Node type\n\n      this.left = token.left;\n      this.right = token.right;\n    }\n\n    Node.prototype.toString = function () {\n      var left = this.left ? this.left.toString() + '---' : '';\n      var right = this.right ? '---' + this.right.toString() : '';\n      return left + '(' + this.value + ')' + right;\n    };\n\n    Node.prototype.toHTML = function (depth, indent) {\n      depth = depth || 0;\n      indent = typeof indent === 'undefined' ? 4 : indent;\n\n      var tab = function tab(n) {\n        return ' '.repeat(indent * n);\n      };\n\n      var html = '';\n      var left = this.left ? tab(depth + 1) + '<li>\\n' + this.left.toHTML(depth + 2, indent) + tab(depth + 1) + '</li> \\n' : '';\n      var right = this.right ? tab(depth + 1) + '<li>\\n' + this.right.toHTML(depth + 2, indent) + tab(depth + 1) + '</li>\\n' : '';\n      var html = tab(depth) + '<div class=\"' + this.type.toLowerCase() + '\"><span>' + this.value + '</span></div>' + tab(depth) + '\\n';\n\n      if (left || right) {\n        html += tab(depth) + '<ul>\\n' + left + right + tab(depth) + '</ul>\\n';\n      }\n\n      html += '';\n      return html;\n    };\n\n    this.tree = function (tokens) {\n      var Q = [];\n\n      for (var i = 0; i < tokens.length; i++) {\n        var e = tokens[i]; //Arrays indicate a new scope so parse that out\n\n        if (Array.isArray(e)) {\n          e = this.tree(e); //if it's a comma then it's just arguments\n\n          Q.push(e);\n          continue;\n        }\n\n        if (e.type === Token.OPERATOR) {\n          if (e.is_prefix || e.postfix) {\n            //prefixes go to the left, postfix to the right\n            var location = e.is_prefix ? 'left' : 'right';\n            var last = Q.pop();\n            e = new Node(e);\n            e[location] = last;\n            Q.push(e);\n          } else {\n            e = new Node(e);\n            e.right = Q.pop();\n            e.left = Q.pop();\n            Q.push(e);\n          }\n        } else if (e.type === Token.FUNCTION) {\n          e = new Node(e);\n          var args = Q.pop();\n          e.right = args;\n\n          if (e.value === 'object') {\n            //check if Q has a value\n            var last = Q[Q.length - 1];\n\n            if (last) {\n              while (last.right) {\n                last = last.right;\n              }\n\n              last.right = e;\n              continue;\n            }\n          }\n\n          Q.push(e);\n        } else {\n          Q.push(new Node(e));\n        }\n      }\n\n      return Q[0];\n    };\n\n    this.parse = function (e, substitutions) {\n      e = prepare_expression(e);\n      substitutions = substitutions || {}; //three passes but easier to debug\n\n      var tokens = this.tokenize(e);\n      var rpn = this.toRPN(tokens);\n      return this.parseRPN(rpn, substitutions);\n    };\n    /**\r\n     * TODO: Switch to Parser.tokenize for this method\r\n     * Reads a string into an array of Symbols and operators\r\n     * @param {String} expression_string\r\n     * @returns {Array}\r\n     */\n\n\n    this.toObject = function (expression_string) {\n      var objectify = function objectify(tokens) {\n        var output = [];\n\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i];\n          var v = token.value;\n\n          if (token.type === Token.VARIABLE_OR_LITERAL) {\n            output.push(new Symbol(v));\n          } else if (token.type === Token.FUNCTION) {\n            //jump ahead since the next object are the arguments\n            i++; //create a symbolic function and stick it on output\n\n            var f = _.symfunction(v, objectify(tokens[i]));\n\n            f.isConversion = true;\n            output.push(f);\n          } else if (token.type === Token.OPERATOR) {\n            output.push(v);\n          } else {\n            output.push(objectify(token));\n          }\n        }\n\n        return output;\n      };\n\n      return objectify(_.tokenize(expression_string));\n    }; //helper method for toTeX\n\n\n    var chunkAtCommas = function chunkAtCommas(arr) {\n      var j,\n          k = 0,\n          chunks = [[]];\n\n      for (var j = 0, l = arr.length; j < l; j++) {\n        if (arr[j] === ',') {\n          k++;\n          chunks[k] = [];\n        } else {\n          chunks[k].push(arr[j]);\n        }\n      }\n\n      return chunks;\n    }; //helper method for toTeX\n\n\n    var rem_brackets = function rem_brackets(str) {\n      return str.replace(/^\\\\left\\((.+)\\\\right\\)$/g, function (str, a) {\n        if (a) return a;\n        return str;\n      });\n    };\n    /*\r\n     * Convert expression or object to LaTeX\r\n     * @param {String} expression_or_obj\r\n     * @param {object} opt\r\n     * @returns {String}\r\n     */\n\n\n    this.toTeX = function (expression_or_obj, opt) {\n      opt = opt || {};\n      var obj = typeof expression_or_obj === 'string' ? this.toObject(expression_or_obj) : expression_or_obj,\n          TeX = [],\n          cdot = typeof opt.cdot === 'undefined' ? '\\\\cdot' : opt.cdot; //set omit cdot to true by default\n\n      if (isArray(obj)) {\n        var nobj = [],\n            a,\n            b; //first handle ^\n\n        for (var i = 0; i < obj.length; i++) {\n          a = obj[i];\n\n          if (obj[i + 1] === '^') {\n            b = obj[i + 2];\n            nobj.push(LaTeX.braces(this.toTeX([a])) + '^' + LaTeX.braces(this.toTeX([b])));\n            i += 2;\n          } else nobj.push(a);\n        }\n\n        obj = nobj;\n      }\n\n      for (var i = 0, l = obj.length; i < l; i++) {\n        var e = obj[i]; //convert * to cdot\n\n        if (e === '*') {\n          e = cdot;\n        }\n\n        if (isSymbol(e)) {\n          if (e.group === FN) {\n            var fname = e.fname,\n                f;\n            if (fname === SQRT) f = '\\\\sqrt' + LaTeX.braces(this.toTeX(e.args));else if (fname === ABS) f = LaTeX.brackets(this.toTeX(e.args), 'abs');else if (fname === PARENTHESIS) f = LaTeX.brackets(this.toTeX(e.args), 'parens');else if (fname === Settings.LOG10) {\n              f = '\\\\' + Settings.LOG10_LATEX + '\\\\left( ' + this.toTeX(e.args) + '\\\\right)';\n            } else if (fname === 'integrate') {\n              /* Retrive [Expression, x] */\n              var chunks = chunkAtCommas(e.args);\n              /* Build TeX */\n\n              var expr = LaTeX.braces(this.toTeX(chunks[0])),\n                  dx = this.toTeX(chunks[1]);\n              f = '\\\\int ' + expr + '\\\\, d' + dx;\n            } else if (fname === 'defint') {\n              var chunks = chunkAtCommas(e.args),\n                  expr = LaTeX.braces(this.toTeX(chunks[0])),\n                  dx = this.toTeX(chunks[3]),\n                  lb = this.toTeX(chunks[1]),\n                  ub = this.toTeX(chunks[2]);\n              f = '\\\\int\\\\limits_{' + lb + '}^{' + ub + '} ' + expr + '\\\\, d' + dx;\n            } else if (fname === 'diff') {\n              var chunks = chunkAtCommas(e.args);\n              var dx = '',\n                  expr = LaTeX.braces(this.toTeX(chunks[0]));\n              /* Handle cases: one argument provided, we need to guess the variable, and assume n = 1 */\n\n              if (chunks.length === 1) {\n                var vars = [];\n\n                for (j = 0; j < chunks[0].length; j++) {\n                  if (chunks[0][j].group === 3) {\n                    vars.push(chunks[0][j].value);\n                  }\n                }\n\n                vars.sort();\n                dx = vars.length > 0 ? '\\\\frac{d}{d ' + vars[0] + '}' : '\\\\frac{d}{d x}';\n              }\n              /* If two arguments, we have expression and variable, we assume n = 1 */\n              else if (chunks.length === 2) {\n                  dx = '\\\\frac{d}{d ' + chunks[1] + '}';\n                }\n                /* If we have more than 2 arguments, we assume we've got everything */\n                else {\n                    dx = '\\\\frac{d^{' + chunks[2] + '}}{d ' + this.toTeX(chunks[1]) + '^{' + chunks[2] + '}}';\n                  }\n\n              f = dx + '\\\\left(' + expr + '\\\\right)';\n            } else if (fname === 'sum' || fname === 'product') {\n              // Split e.args into 4 parts based on locations of , symbols.\n              var argSplit = [[], [], [], []],\n                  j = 0,\n                  i;\n\n              for (i = 0; i < e.args.length; i++) {\n                if (e.args[i] === ',') {\n                  j++;\n                  continue;\n                }\n\n                argSplit[j].push(e.args[i]);\n              } // Then build TeX string.\n\n\n              f = (fname === 'sum' ? '\\\\sum_' : '\\\\prod_') + LaTeX.braces(this.toTeX(argSplit[1]) + ' = ' + this.toTeX(argSplit[2]));\n              f += '^' + LaTeX.braces(this.toTeX(argSplit[3])) + LaTeX.braces(this.toTeX(argSplit[0]));\n            } else if (fname === 'limit') {\n              var args = chunkAtCommas(e.args).map(function (x) {\n                if (Array.isArray(x)) return _.toTeX(x.join(''));\n                return _.toTeX(String(x));\n              });\n              f = '\\\\lim_' + LaTeX.braces(args[1] + '\\\\to ' + args[2]) + ' ' + LaTeX.braces(args[0]);\n            } else if (fname === FACTORIAL || fname === DOUBLEFACTORIAL) f = this.toTeX(e.args) + (fname === FACTORIAL ? '!' : '!!');else {\n              f = LaTeX.latex(e); //f = '\\\\mathrm'+LaTeX.braces(fname.replace(/_/g, '\\\\_')) + LaTeX.brackets(this.toTeX(e.args), 'parens');\n            }\n            TeX.push(f);\n          } else TeX.push(LaTeX.latex(e));\n        } else if (isArray(e)) {\n          TeX.push(LaTeX.brackets(this.toTeX(e)));\n        } else {\n          if (e === '/') TeX.push(LaTeX.frac(rem_brackets(TeX.pop()), rem_brackets(this.toTeX([obj[++i]]))));else TeX.push(e);\n        }\n      }\n\n      return TeX.join(' ');\n    }; //Parser.functions ==============================================================\n\n    /* Although parens is not a \"real\" function it is important in some cases when the \r\n     * symbol must carry parenthesis. Once set you don't have to worry about it anymore\r\n     * as the parser will get rid of it at the first opportunity\r\n     */\n\n\n    function parens(symbol) {\n      if (Settings.PARSE2NUMBER) {\n        return symbol;\n      }\n\n      return _.symfunction('parens', [symbol]);\n    }\n\n    function abs(symbol) {\n      //|-∞| = ∞ \n      if (symbol.isInfinity) {\n        return Symbol.infinity();\n      }\n\n      if (symbol.multiplier.lessThan(0)) symbol.multiplier.negate();\n\n      if (symbol.isImaginary()) {\n        var re = symbol.realpart();\n        var im = symbol.imagpart();\n        if (re.isConstant() && im.isConstant()) return _sqrt(_.add(_.pow(re, new Symbol(2)), _.pow(im, new Symbol(2))));\n      } else if (isNumericSymbol(symbol) || even(symbol.power)) {\n        return symbol;\n      }\n\n      if (symbol.isComposite()) {\n        var ms = [];\n        symbol.each(function (x) {\n          ms.push(x.multiplier);\n        });\n        var gcd = Math2.QGCD.apply(null, ms);\n\n        if (gcd.lessThan(0)) {\n          symbol.multiplier = symbol.multiplier.multiply(new Frac(-1));\n          symbol.distributeMultiplier();\n        }\n      } //convert |n*x| to n*|x|\n\n\n      var m = _.parse(symbol.multiplier);\n\n      symbol.toUnitMultiplier();\n      return _.multiply(m, _.symfunction(ABS, [symbol]));\n    }\n    /**\r\n     * The factorial function\r\n     * @param {Symbol} symbol\r\n     * @return {Symbol}\r\n     */\n\n\n    function factorial(symbol) {\n      var retval;\n\n      if (isVector(symbol)) {\n        var V = new Vector();\n        symbol.each(function (x, i) {\n          //i start at one.\n          V.set(i - 1, factorial(x));\n        });\n        return V;\n      }\n\n      if (isMatrix(symbol)) {\n        var M = new Matrix();\n        symbol.each(function (x, i, j) {\n          //i start at one.\n          M.set(i, j, factorial(x));\n        });\n        return M;\n      }\n\n      if (Settings.PARSE2NUMBER && symbol.isConstant()) {\n        if (isInt(symbol)) {\n          retval = Math2.bigfactorial(symbol);\n        } else {\n          retval = Math2.gamma(symbol.multiplier.add(new Frac(1)).toDecimal());\n        }\n\n        retval = bigConvert(retval);\n        return retval;\n      } else if (symbol.isConstant()) {\n        var den = symbol.getDenom();\n\n        if (den.equals(2)) {\n          var num = symbol.getNum();\n          var a, b, c, n;\n\n          if (!symbol.multiplier.isNegative()) {\n            n = _.add(num, new Symbol(1)).multiplier.divide(new Frac(2));\n            a = Math2.bigfactorial(new Frac(2).multiply(n));\n            b = _.pow(new Symbol(4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\n          } else {\n            n = _.subtract(num.negate(), new Symbol(1)).multiplier.divide(new Frac(2));\n            a = _.pow(new Symbol(-4), new Symbol(n)).multiplier.multiply(Math2.bigfactorial(n));\n            b = Math2.bigfactorial(new Frac(2).multiply(n));\n          }\n\n          c = a.divide(b);\n          return _.multiply(_.parse('sqrt(pi)'), new Symbol(c));\n        }\n      }\n\n      return _.symfunction(FACTORIAL, [symbol]);\n    }\n\n    ;\n    /**\r\n     * Returns the continued fraction of a number\r\n     * @param {Symbol} symbol\r\n     * @param {Symbol} n\r\n     * @returns {Symbol}\r\n     */\n\n    function continued_fraction(symbol, n) {\n      var _symbol = evaluate(symbol);\n\n      if (_symbol.isConstant()) {\n        var cf = Math2.continuedFraction(_symbol, n); //convert the fractions array to a new Vector\n\n        var fractions = Vector.fromArray(cf.fractions.map(function (x) {\n          return new Symbol(x);\n        }));\n        return Vector.fromArray([new Symbol(cf.sign), new Symbol(cf.whole), fractions]);\n      }\n\n      return _.symfunction('continued_fraction', arguments);\n    }\n\n    ;\n    /**\r\n     * The mod function\r\n     * @param {Symbol} symbol1\r\n     * @param {Symbol} symbol2\r\n     * @returns {Symbol}\r\n     */\n\n    function mod(symbol1, symbol2) {\n      if (symbol1.isConstant() && symbol2.isConstant()) {\n        var retval = new Symbol(1);\n        retval.multiplier = retval.multiplier.multiply(symbol1.multiplier.mod(symbol2.multiplier));\n        return retval;\n      } //try to see if division has remainder of zero\n\n\n      var r = _.divide(symbol1.clone(), symbol2.clone());\n\n      if (isInt(r)) return new Symbol(0);\n      return _.symfunction('mod', [symbol1, symbol2]);\n    }\n    /**\r\n     * A branghing function\r\n     * @param {Boolean} condition\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     * @returns {Symbol}\r\n     */\n\n\n    function IF(condition, a, b) {\n      if (typeof condition !== 'boolean') if (isNumericSymbol(condition)) condition = !!Number(condition);\n      if (condition) return a;\n      return b;\n    }\n    /**\r\n     * \r\n     * @param {Matrix|Vector|Set|Collection} obj\r\n     * @param {Symbol} item\r\n     * @returns {Boolean}\r\n     */\n\n\n    function is_in(obj, item) {\n      if (isMatrix(obj)) {\n        for (var i = 0, l = obj.rows(); i < l; i++) {\n          for (var j = 0, l2 = obj.cols(); j < l2; j++) {\n            var element = obj.elements[i][j];\n            if (element.equals(item)) return new Symbol(1);\n          }\n        }\n      } else if (obj.elements) {\n        for (var i = 0, l = obj.elements.length; i < l; i++) {\n          if (obj.elements[i].equals(item)) return new Symbol(1);\n        }\n      }\n\n      return new Symbol(0);\n    }\n    /**\r\n     * A symbolic extension for sinc\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function sinc(symbol) {\n      if (Settings.PARSE2NUMBER) {\n        if (symbol.isConstant()) {\n          return new Symbol(Math2.sinc(symbol));\n        }\n\n        return _.parse(format('sin({0})/({0})', symbol));\n      }\n\n      return _.symfunction('sinc', [symbol]);\n    }\n    /**\r\n     * A symbolic extension for exp. This will auto-convert all instances of exp(x) to e^x.\r\n     * Thanks @ Happypig375\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function exp(symbol) {\n      return _.parse(format('e^({0})', symbol));\n    }\n    /**\r\n     * Converts value degrees to radians\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function radians(symbol) {\n      return _.parse(format('({0})*pi/180', symbol));\n    }\n    /**\r\n     * Converts value from radians to degrees\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function degrees(symbol) {\n      return _.parse(format('({0})*180/pi', symbol));\n    }\n\n    function nroots(symbol) {\n      var a, b;\n\n      if (symbol.group === FN && symbol.fname === '') {\n        a = Symbol.unwrapPARENS(_.parse(symbol).toLinear());\n        b = _.parse(symbol.power);\n      } else if (symbol.group === P) {\n        a = _.parse(symbol.value);\n        b = _.parse(symbol.power);\n      }\n\n      if (a && b && a.group === N && b.group === N) {\n        var _roots = [];\n        var parts = Symbol.toPolarFormArray(symbol);\n\n        var r = _.parse(a).abs().toString(); //https://en.wikipedia.org/wiki/De_Moivre%27s_formula\n\n\n        var x = arg(a).toString();\n        var n = b.multiplier.den.toString();\n        var p = b.multiplier.num.toString();\n        var formula = \"(({0})^({1})*(cos({3})+({2})*sin({3})))^({4})\";\n\n        for (var i = 0; i < n; i++) {\n          var t = evaluate(_.parse(format(\"(({0})+2*pi*({1}))/({2})\", x, i, n))).multiplier.toDecimal();\n\n          _roots.push(evaluate(_.parse(format(formula, r, n, Settings.IMAGINARY, t, p))));\n        }\n\n        return Vector.fromArray(_roots);\n      } else if (symbol.isConstant(true)) {\n        var sign = symbol.sign();\n        var x = evaluate(symbol.abs());\n\n        var root = _.sqrt(x);\n\n        var _roots = [root.clone(), root.negate()];\n        if (sign < 0) _roots = _roots.map(function (x) {\n          return _.multiply(x, Symbol.imaginary());\n        });\n      } else {\n        _roots = [_.parse(symbol)];\n      }\n\n      return Vector.fromArray(_roots);\n    }\n    /**\r\n     * Rationalizes a symbol\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function rationalize(symbol) {\n      if (symbol.isComposite()) {\n        var retval = new Symbol(0);\n        var num, den, retnum, retden, a, b, n, d;\n        symbol.each(function (x) {\n          num = x.getNum();\n          den = x.getDenom();\n          retnum = retval.getNum();\n          retden = retval.getDenom();\n          a = _.multiply(den, retnum);\n          b = _.multiply(num, retden);\n          n = _.expand(_.add(a, b));\n          d = _.multiply(retden, den);\n          retval = _.divide(n, d);\n        }, true);\n        return retval;\n      }\n\n      return symbol;\n    }\n    /**\r\n     * The square root function\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function _sqrt(symbol) {\n      if (symbol.fname === '' && symbol.power.equals(1)) symbol = symbol.args[0];\n      var is_negative = symbol.multiplier.sign() < 0;\n\n      if (Settings.PARSE2NUMBER) {\n        if (symbol.isConstant() && !is_negative) {\n          return new Symbol(Math.sqrt(symbol.multiplier.toDecimal()));\n        } else if (symbol.isImaginary()) {\n          return complex.sqrt(symbol);\n        }\n      }\n\n      var img,\n          retval,\n          isConstant = symbol.isConstant();\n\n      if (symbol.group === CB && symbol.isLinear()) {\n        var m = _sqrt(Symbol(symbol.multiplier));\n\n        for (var s in symbol.symbols) {\n          var x = symbol.symbols[s];\n          m = _.multiply(m, _sqrt(x));\n        }\n\n        retval = m;\n      } //if the symbol is already sqrt then it's that symbol^(1/4) and we can unwrap it\n      else if (symbol.fname === SQRT) {\n          var s = symbol.args[0];\n          var ms = symbol.multiplier;\n          s.setPower(symbol.power.multiply(new Frac(0.25)));\n          retval = s; //grab the multiplier\n\n          if (!ms.equals(1)) retval = _.multiply(_sqrt(_.parse(ms)), retval);\n        } //if the symbol is a fraction then we don't keep can unwrap it. For instance\n        //no need to keep sqrt(x^(1/3))\n        else if (!symbol.power.isInteger()) {\n            symbol.setPower(symbol.power.multiply(new Frac(0.5)));\n            retval = symbol;\n          } else {\n            //Related to issue #401. Since sqrt(a)*sqrt(b^-1) relates in issues, we'll change the form\n            //to sqrt(a)*sqrt(b)^1 for better simplification\n            //the sign of the power\n            var sign = symbol.power.sign(); //remove the sign\n\n            symbol.power = symbol.power.abs(); //if the symbols is imagary then we place in the imaginary part. We'll return it \n            //as a product\n\n            if (isConstant && symbol.multiplier.lessThan(0)) {\n              img = Symbol.imaginary();\n              symbol.multiplier = symbol.multiplier.abs();\n            }\n\n            var q = symbol.multiplier.toDecimal(),\n                qa = Math.abs(q),\n                t = Math.sqrt(qa);\n            var m; //it's a perfect square so take the square\n\n            if (isInt(t)) {\n              m = new Symbol(t);\n            } else if (isInt(q)) {\n              var factors = Math2.ifactor(q);\n              var tw = 1;\n\n              for (var x in factors) {\n                var n = factors[x],\n                    nn = n - n % 2; //get out the whole numbers\n\n                if (nn) {\n                  //if there is a whole number ...\n                  var w = Math.pow(x, nn);\n                  tw *= Math.pow(x, nn / 2); //add to total wholes\n\n                  q /= w; //reduce the number by the wholes\n                }\n              }\n\n              m = _.multiply(_.symfunction(SQRT, [new Symbol(q)]), new Symbol(tw));\n            } else {\n              //reduce the numerator and denominator using prime factorization\n              var c = [new Symbol(symbol.multiplier.num), new Symbol(symbol.multiplier.den)];\n              var r = [new Symbol(1), new Symbol(1)];\n              var sq = [new Symbol(1), new Symbol(1)];\n\n              for (var i = 0; i < 2; i++) {\n                var n = c[i]; //get the prime factors and loop through each. \n\n                pfactor(n).each(function (x) {\n                  x = Symbol.unwrapPARENS(x);\n                  var b = x.clone().toLinear();\n                  var p = Number(x.power); //We'll consider it safe to use the native Number since 2^1000 is already a pretty huge number\n\n                  var rem = p % 2; //get the remainder. This will be 1 if 3 since sqrt(n^2) = n where n is positive\n\n                  var w = (p - rem) / 2; //get the whole numbers of n/2\n\n                  r[i] = _.multiply(r[i], _.pow(b, new Symbol(w)));\n                  sq[i] = _.multiply(sq[i], _sqrt(_.pow(b, new Symbol(rem))));\n                });\n              }\n\n              m = _.divide(_.multiply(r[0], sq[0]), _.multiply(r[1], sq[1]));\n            } //strip the multiplier since we already took the sqrt\n\n\n            symbol = symbol.toUnitMultiplier(true); //if the symbol is one just return one and not the sqrt function\n\n            if (symbol.isOne()) {\n              retval = symbol;\n            } else if (even(symbol.power.toString())) {\n              //just raise it to the 1/2\n              retval = _.pow(symbol.clone(), new Symbol(0.5));\n            } else {\n              retval = _.symfunction(SQRT, [symbol]);\n            } //put back the sign that was removed earlier\n\n\n            if (sign < 0) retval.power.negate();\n            if (m) retval = _.multiply(m, retval);\n            if (img) retval = _.multiply(img, retval);\n          }\n\n      if (is_negative && Settings.PARSE2NUMBER) return _.parse(retval);\n      return retval;\n    }\n\n    function scientific(symbol, sigfigs) {\n      //Just set the flag and keep it moving. Symbol.toString will deal with how to \n      //display this\n      symbol.scientific = sigfigs || 10;\n      return symbol;\n    }\n    /**\r\n     * \r\n     * @param {Symbol} num - the number being raised\r\n     * @param {Symbol} p - the exponent\r\n     * @param {type} prec - the precision wanted\r\n     * @param {bool} asbig - true if a bigDecimal is wanted\r\n     * @returns {Symbol}\r\n     */\n    //TODO: this method needs serious optimization\n\n\n    function nthroot(num, p, prec, asbig) {\n      if (typeof asbig === 'undefined') asbig = true;\n      prec = prec || 25;\n      if (!isSymbol(p)) p = _.parse(p);\n\n      if (isInt(num) && p.isConstant()) {\n        var sign = num.sign(),\n            x;\n        num = abs(num); //remove the sign\n\n        var idx = num + '-' + p;\n\n        if (idx in Settings.CACHE.roots) {\n          x = new bigInt(Settings.CACHE.roots[idx]);\n          if (!even(p)) x = x.multiply(sign);\n        } else {\n          if (num < 18446744073709551616) //2^64\n            x = Frac.create(Math.pow(num, 1 / p));else x = Math2.nthroot(num, p);\n        }\n\n        if (isInt(x) || Settings.PARSE2NUMBER) {\n          if (asbig) return new Symbol(x);\n          return new Symbol(x.toDecimal(prec));\n        }\n      }\n\n      if (Number(p) === 2) return _.sqrt(num);\n      return _.symfunction('nthroot', arguments);\n    }\n\n    function pfactor(symbol) {\n      //Fix issue #458 | nerdamer(\"sqrt(1-(3.3333333550520926e-7)^2)\").evaluate().text()\n      //More Big Number issues >:(\n      if (symbol.greaterThan(9.999999999998891e+41)) return symbol; //Fix issue #298\n\n      if (symbol.equals(Math.PI)) return new Symbol(Math.PI); //evaluate the symbol to merge constants\n\n      symbol = evaluate(symbol.clone());\n\n      if (symbol.isConstant()) {\n        var retval = new Symbol(1);\n        var m = symbol.toString();\n\n        if (isInt(m)) {\n          var factors = Math2.ifactor(m);\n\n          for (var factor in factors) {\n            var p = factors[factor];\n            retval = _.multiply(retval, _.symfunction('parens', [new Symbol(factor).setPower(new Frac(p))]));\n          }\n        } else {\n          var n = pfactor(new Symbol(symbol.multiplier.num));\n          var d = pfactor(new Symbol(symbol.multiplier.den));\n          retval = _.multiply(_.symfunction('parens', [n]), _.symfunction('parens', [d]).invert());\n        }\n      } else retval = _.symfunction('pfactor', arguments);\n\n      return retval;\n    }\n    /**\r\n     * Get's the real part of a complex number. Return number if real\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function realpart(symbol) {\n      return symbol.realpart();\n    }\n    /**\r\n     * Get's the imaginary part of a complex number\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function imagpart(symbol) {\n      return symbol.imagpart();\n    }\n    /**\r\n     * Computes the conjugate of a complex number\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function conjugate(symbol) {\n      var re = symbol.realpart();\n      var im = symbol.imagpart();\n      return _.add(re, _.multiply(im.negate(), Symbol.imaginary()));\n    }\n    /**\r\n     * Returns the arugment of a complex number\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function arg(symbol) {\n      var re = symbol.realpart();\n      var im = symbol.imagpart();\n      if (re.isConstant() && im.isConstant()) return new Symbol(Math.atan2(im, re));\n      return _.symfunction('atan2', [im, re]);\n    }\n    /**\r\n     * Returns the arugment of a complex number\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function arg(symbol) {\n      var re = symbol.realpart();\n      var im = symbol.imagpart();\n\n      if (re.isConstant() && im.isConstant()) {\n        if (im.equals(0) && re.equals(-1)) {\n          return _.parse('pi');\n        } else if (im.equals(1) && re.equals(0)) {\n          return _.parse('pi/2');\n        } else if (im.equals(1) && re.equals(1)) {\n          return _.parse('pi/4');\n        }\n\n        return new Symbol(Math.atan2(im, re));\n      }\n\n      return _.symfunction('atan2', [im, re]);\n    }\n    /**\r\n     * Returns the polarform of a complex number\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function polarform(symbol) {\n      var p, r, e, theta;\n      p = Symbol.toPolarFormArray(symbol);\n      theta = p[1];\n      r = p[0];\n      e = _.parse(format('e^({0}*({1}))', Settings.IMAGINARY, theta));\n      return _.multiply(r, e);\n    }\n    /**\r\n     * Returns the rectangular form of a complex number. Does not work for symbolic coefficients\r\n     * @param {Symbol} symbol\r\n     * @returns {Symbol}\r\n     */\n\n\n    function rectform(symbol) {\n      //TODO: e^((i*pi)/4)\n      var original = symbol.clone();\n\n      try {\n        var f, p, q, s, h, d, n;\n        f = decompose_fn(symbol, 'e', true);\n        p = _.divide(f.x.power, Symbol.imaginary());\n        q = evaluate(trig.tan(p));\n        s = _.pow(f.a, new Symbol(2));\n        d = q.getDenom(true);\n        n = q.getNum();\n        h = Symbol.hyp(n, d); //check \n\n        if (h.equals(f.a)) {\n          return _.add(d, _.multiply(Symbol.imaginary(), n));\n        } else {\n          return original;\n        }\n      } catch (e) {\n        return original;\n      }\n    }\n\n    function symMinMax(f, args) {\n      args.map(function (x) {\n        x.numVal = evaluate(x).multiplier;\n      });\n      var l, a, b, a_val, b_val;\n\n      while (true) {\n        l = args.length;\n        if (l < 2) return args[0];\n        a = args.pop();\n        b = args[l - 2];\n\n        if (f === 'min' ? a.numVal < b.numVal : a.numVal > b.numVal) {\n          args.pop();\n          args.push(a);\n        }\n      }\n    }\n    /**\r\n     * Returns maximum of a set of numbers\r\n     * @returns {Symbol}\r\n     */\n\n\n    function max() {\n      var args = [].slice.call(arguments);\n      if (allSame(args)) return args[0];\n      if (allNumbers(args)) return new Symbol(Math.max.apply(null, args));\n      if (Settings.SYMBOLIC_MIN_MAX && allConstants(args)) return symMinMax('max', args);\n      return _.symfunction('max', args);\n    }\n    /**\r\n     * Returns minimum of a set of numbers\r\n     * @returns {Symbol}\r\n     */\n\n\n    function min() {\n      var args = [].slice.call(arguments);\n      if (allSame(args)) return args[0];\n      if (allNumbers(args)) return new Symbol(Math.min.apply(null, args));\n      if (Settings.SYMBOLIC_MIN_MAX && allConstants(args)) return symMinMax('min', args);\n      return _.symfunction('min', args);\n    }\n    /**\r\n     * Returns the sign of a number\r\n     * @param {Symbol} x\r\n     * @returns {Symbol}\r\n     */\n\n\n    function sign(x) {\n      if (x.isConstant(true)) return new Symbol(Math.sign(evaluate(x)));\n      return _.symfunction('sign', arguments);\n    }\n\n    function sort(symbol, opt) {\n      opt = opt ? opt.toString() : 'asc';\n\n      var getval = function getval(e) {\n        if (e.group === N) return e.multiplier;\n\n        if (e.group === FN) {\n          if (e.fname === '') return getval(e.args[0]);\n          return e.fname;\n        }\n\n        if (e.group === S) return e.power;\n        return e.value;\n      };\n\n      var symbols = isVector(symbol) ? symbol.elements : symbol.collectSymbols();\n      return new Vector(symbols.sort(function (a, b) {\n        var aval = getval(a),\n            bval = getval(b);\n        if (opt === 'desc') return bval - aval;\n        return aval - bval;\n      }));\n    }\n    /**\r\n     * The log function\r\n     * @param {Symbol} symbol\r\n     * @param {Symbol} base\r\n     * @returns {Symbol}\r\n     */\n\n\n    function _log(symbol, base) {\n      if (symbol.equals(1)) {\n        return new Symbol(0);\n      }\n\n      var retval;\n\n      if (symbol.fname === SQRT && symbol.multiplier.equals(1)) {\n        return _.divide(_log(symbol.args[0]), new Symbol(2));\n      } //log(0) is undefined so complain\n\n\n      if (symbol.equals(0)) {\n        throw new UndefinedError(Settings.LOG + '(0) is undefined!');\n      } //deal with imaginary values\n\n\n      if (symbol.isImaginary()) {\n        return complex.evaluate(symbol, Settings.LOG);\n        /*\r\n         var a = format('log(sqrt(({0})^2+({1})^2))-({2})*atan2(({1}),({0}))', symbol.imagpart(), symbol.realpart(), Settings.IMAGINARY),\r\n         b = format('({0})*PI/2', Settings.IMAGINARY);\r\n         \r\n         return _.add(_.parse(a), _.parse(b));\r\n         */\n      }\n\n      if (symbol.isConstant() && typeof base !== 'undefined' && base.isConstant()) {\n        /*\r\n         var log_sym = Math2.bigLog(symbol.multiplier);\r\n         var log_base = Math2.bigLog(base.multiplier);\r\n         retval = new Symbol(log_sym.divide());\r\n         */\n        var log_sym = Math.log(symbol);\n        var log_base = Math.log(base);\n        retval = new Symbol(log_sym / log_base);\n      } else if (symbol.group === EX && symbol.power.multiplier.lessThan(0) || symbol.power.toString() === '-1') {\n        symbol.power.negate(); //move the negative outside but keep the positive inside :)\n\n        retval = _log(symbol).negate();\n      } else if (symbol.value === 'e' && symbol.multiplier.equals(1)) {\n        var p = symbol.power;\n        retval = isSymbol(p) ? p : new Symbol(p);\n      } else if (symbol.group === FN && symbol.fname === 'exp') {\n        var s = symbol.args[0];\n        if (symbol.multiplier.equals(1)) retval = _.multiply(s, new Symbol(symbol.power));else retval = _.symfunction(Settings.LOG, [symbol]);\n      } else if (Settings.PARSE2NUMBER && isNumericSymbol(symbol)) {\n        var img_part;\n\n        if (symbol.multiplier.lessThan(0)) {\n          symbol.negate();\n          img_part = _.multiply(new Symbol(Math.PI), new Symbol('i'));\n        }\n\n        retval = new Symbol(Math.log(symbol.multiplier.toDecimal()));\n        if (img_part) retval = _.add(retval, img_part);\n      } else {\n        var s;\n\n        if (!symbol.power.equals(1)) {\n          s = symbol.group === EX ? symbol.power : new Symbol(symbol.power);\n          symbol.toLinear();\n        } //log(a,a) = 1 since the base is allowed to be changed. \n        //This was pointed out by Happypig375 in issue #280\n\n\n        if (arguments.length > 1 && allSame(arguments)) retval = new Symbol(1);else retval = _.symfunction(Settings.LOG, arguments);\n        if (s) retval = _.multiply(s, retval);\n      }\n\n      return retval;\n    }\n    /**\r\n     * Round a number up to s decimal places\r\n     * @param {Number} x\r\n     * @param {int} s - the number of decimal places\r\n     * @returns {undefined}\r\n     */\n\n\n    function round(x, s) {\n      var sIsConstant = s && s.isConstant() || typeof s === 'undefined';\n\n      if (x.isConstant() && sIsConstant) {\n        var v, e, exp, retval;\n        v = x; //round the coefficient of then number but not the actual decimal value\n        //we know this because a negative number was passed\n\n        if (s && s.lessThan(0)) {\n          s = abs(s); //convert the number to exponential form\n\n          e = Number(x).toExponential().toString().split('e'); //point v to the coefficient of then number\n\n          v = e[0]; //set the expontent\n\n          exp = e[1];\n        } //round the number to the requested precision\n\n\n        retval = new Symbol(nround(v, Number(s || 0))); //if there's a exponent then put it back\n\n        return _.multiply(retval, _.pow(new Symbol(10), new Symbol(exp || 0)));\n      }\n\n      return _.symfunction('round', arguments);\n    }\n    /**\r\n     * Gets the quadrant of the trig function\r\n     * @param {Frac} m\r\n     * @returns {Int}\r\n     */\n\n\n    function getQuadrant(m) {\n      var v = m % 2,\n          quadrant;\n      if (v < 0) v = 2 + v; //put it in terms of pi\n\n      if (v >= 0 && v <= 0.5) quadrant = 1;else if (v > 0.5 && v <= 1) quadrant = 2;else if (v > 1 && v <= 1.5) quadrant = 3;else quadrant = 4;\n      return quadrant;\n    }\n    /*\r\n     * Serves as a bridge between numbers and bigNumbers\r\n     * @param {Frac|Number} n\r\n     * @returns {Symbol} \r\n     */\n\n\n    function bigConvert(n) {\n      if (!isFinite(n)) {\n        var sign = Math.sign(n);\n        var r = new Symbol(String(Math.abs(n)));\n        r.multiplier = r.multiplier.multiply(new Frac(sign));\n        return r;\n      }\n\n      if (isSymbol(n)) return n;\n\n      if (typeof n === 'number') {\n        try {\n          n = Frac.simple(n);\n        } catch (e) {\n          n = new Frac(n);\n        }\n      }\n\n      var symbol = new Symbol(0);\n      symbol.multiplier = n;\n      return symbol;\n    }\n\n    ;\n\n    function clean(symbol) {\n      // handle functions with numeric values\n      // handle denominator within denominator\n      // handle trig simplifications\n      var g = symbol.group,\n          retval; //Now let's get to work\n\n      if (g === CP) {\n        var num = symbol.getNum(),\n            den = symbol.getDenom() || new Symbol(1),\n            p = Number(symbol.power),\n            factor = new Symbol(1);\n\n        if (Math.abs(p) === 1) {\n          den.each(function (x) {\n            if (x.group === CB) {\n              factor = _.multiply(factor, clean(x.getDenom()));\n            } else if (x.power.lessThan(0)) {\n              factor = _.multiply(factor, clean(x.clone().toUnitMultiplier()));\n            }\n          });\n          var new_den = new Symbol(0); //now divide out the factor and add to new den\n\n          den.each(function (x) {\n            new_den = _.add(_.divide(x, factor.clone()), new_den);\n          });\n          factor.invert(); //invert so it can be added to the top\n\n          var new_num;\n\n          if (num.isComposite()) {\n            new_num = new Symbol(0);\n            num.each(function (x) {\n              new_num = _.add(_.multiply(clean(x), factor.clone()), new_num);\n            });\n          } else new_num = _.multiply(factor, num);\n\n          retval = _.divide(new_num, new_den);\n        }\n      } else if (g === CB) {\n        retval = new Symbol(1);\n        symbol.each(function (x) {\n          retval = _.multiply(retval, _.clean(x));\n        });\n      } else if (g === FN) {\n        if (symbol.args.length === 1 && symbol.args[0].isConstant()) retval = block('PARSE2NUMBER', function () {\n          return _.parse(symbol);\n        }, true);\n      }\n\n      if (!retval) retval = symbol;\n      return retval;\n    }\n    /**\r\n     * Expands a symbol\r\n     * @param symbol\r\n     */\n\n\n    function expand(symbol) {\n      //deal with parenthesis\n      if (symbol.group === FN && symbol.fname === '') {\n        return _.expand(symbol.args[0]);\n      } //TODO - some test need to be verified in order to implement this\n\n      /*\r\n       if(symbol.group === FN) {\r\n       symbol.args[0] = _.expand(symbol.args[0]);\r\n       symbol.updateHash();\r\n       return symbol;\r\n       }\r\n       */\n\n\n      if (!symbol.symbols) return symbol; //nothing to do\n\n      var original = symbol.clone();\n\n      try {\n        if (!symbol.symbols) return symbol; //expand all the symbols\n\n        for (var s in symbol.symbols) {\n          var x = symbol.symbols[s];\n          symbol.symbols[s] = expand(x);\n        }\n\n        symbol = _.parse(symbol);\n        var p = symbol.power,\n            m = symbol.multiplier.clone(),\n            pn = Number(p);\n\n        if (isInt(pn) && pn > 0 && symbol.isComposite()) {\n          var f = new Symbol(0); //we loop through the f and make sure that it's fully expanded\n\n          for (var x in symbol.symbols) {\n            var sym = symbol.symbols[x];\n            if (sym.power.greaterThan(1)) sym = _.expand(sym);\n            f = _.add(f, sym);\n          } //assume (a+b)^3 = (a+b)(a+b)(a+b) = (b^2+2*a*b+a^2)(a+b)\n          //we have n=p-1=2 iterations where p=3 in this case\n\n\n          var n = pn - 1; //Initiate with the first term. Remember that we have p-1 iterations because\n          //the first iteration is equal to P where p is the polynomial\n\n          var result = f.clone(); //initiate this as the first term\n          //the first loop is the top iterator and remains untouched. No sub-symbols\n          //from this symbol are allowed to be touched\n\n          for (var i = 0; i < n; i++) {\n            var t = new Symbol(0);\n\n            for (var x in f.symbols) {\n              var a = f.symbols[x]; //we now loop through the \n\n              for (var y in result.symbols) {\n                var b = _.multiply(a.clone(), result.symbols[y]); //the result must always be a composite. If not expand\n\n\n                if (b.group === CB) b = _.expand(b);\n                t = _.add(t, b);\n              }\n            }\n\n            ;\n            result = t;\n          } //put back the multiplier\n\n\n          if (!m.equals(1)) {\n            for (var s in result.symbols) {\n              var x = result.symbols[s];\n              x.multiplier = x.multiplier.multiply(m);\n              if (x.isComposite()) x.distributeMultiplier();\n              symbol.symbols[s] = x;\n            }\n          }\n\n          return result;\n        } else if (symbol.group === CB) {\n          //check if the symbol has composites\n          var hascomposites = false,\n              sp = symbol.power.clone(),\n              sign = symbol.power.sign();\n\n          for (var x in symbol.symbols) {\n            var sub = symbol.symbols[x];\n\n            if (sub.isComposite()) {\n              hascomposites = true;\n              break;\n            }\n\n            if (isSymbol(sub.power) || isSymbol(sp)) {\n              sub.power = _.multiply(sub.power, Symbol(sp));\n              sub.group = EX;\n            } else sub.power = sub.power.multiply(sp);\n          }\n\n          symbol.toLinear(); //I'm going to be super lazy here and take the easy way out. TODO: do this without re-parsing\n\n          symbol = _.parse(symbol.text());\n          if (!hascomposites) return symbol; //nothing to do here\n\n          var result = new Symbol(0);\n          var composites = [],\n              non_composites = new Symbol(symbol.multiplier); //sort them out\n\n          for (var s in symbol.symbols) {\n            var x = symbol.symbols[s];\n            if (x.group === EX) continue;\n\n            if (x.isComposite()) {\n              var p = x.power,\n                  isDenom = false;\n              ;\n\n              if (isInt(p)) {\n                if (p < 0) {\n                  x.power.negate();\n                  isDenom = true;\n                }\n              }\n\n              if (isDenom) {\n                x.power.negate();\n                non_composites = _.multiply(non_composites, x);\n              } else composites.push(x);\n            } else non_composites = _.multiply(non_composites, x);\n          } //grab the first symbol since we'll loop over that one to begin\n\n\n          result = composites.pop();\n\n          while (composites.length) {\n            var s = composites.pop();\n            var t = new Symbol(0);\n            result.each(function (x) {\n              s.each(function (y) {\n                var prod = _.multiply(x.clone(), y.clone());\n\n                t = _.add(t, prod);\n              });\n            });\n            result = t;\n          }\n\n          var finalResult = new Symbol(0); //put back the multiplier\n\n          result.each(function (x) {\n            finalResult = _.add(finalResult, expand(_.multiply(non_composites, x)));\n          }); //expand the power\n\n          finalResult.power = finalResult.power.multiply(sp.abs());\n          symbol = _.expand(finalResult);\n          if (sign < 0) symbol.invert();\n        }\n      } catch (e) {\n        return original;\n      }\n\n      return symbol;\n    }\n    /**\r\n     * Returns an identity matrix of nxn\r\n     * @param {Number} n\r\n     * @returns {Matrix}\r\n     */\n\n\n    function imatrix(n) {\n      return Matrix.identity(n);\n    }\n    /**\r\n     * Retrieves and item from a vector\r\n     * @param {Vector} vector\r\n     * @param {Number} index\r\n     * @returns {Vector|Symbol}\r\n     */\n\n\n    function vecget(vector, index) {\n      if (index.isConstant() && isInt(index)) return vector.elements[index];\n      return _.symfunction('vecget', arguments);\n    }\n    /**\r\n     * Removes duplicates from a vector\r\n     * @param {Vector} vector\r\n     * @param {Number} tolerance\r\n     * @returns {Vector}\r\n     */\n\n\n    function vectrim(vector, tolerance) {\n      tolerance = typeof tolerance === 'undefined' ? 1e-14 : tolerance;\n      vector = vector.clone();\n      tolerance = Number(tolerance); //place algebraic solutions first\n\n      vector.elements.sort(function (a, b) {\n        return b.group - a.group;\n      }); //depending on the start point we may have duplicates so we need to clean those up a bit.\n      //start by creating an object with the solution and the numeric value. This way we don't destroy algebraic values\n\n      vector.elements = removeDuplicates(vector.elements, function (a, b) {\n        var diff = Number(_.subtract(evaluate(a), evaluate(b)).abs());\n        return diff <= tolerance;\n      });\n      return vector;\n    }\n    /**\r\n     * Set a value for a vector at a given index\r\n     * @param {Vector} vector\r\n     * @param {Number} index\r\n     * @param {Symbol} value\r\n     * @returns {Vector}\r\n     */\n\n\n    function vecset(vector, index, value) {\n      if (!index.isConstant) return _.symfunction('vecset', arguments);\n      vector.elements[index] = value;\n      return vector;\n    }\n\n    function matget(matrix, i, j) {\n      if (i.isConstant() && j.isConstant()) return matrix.elements[i][j];\n      return _.symfunction('matget', arguments);\n    }\n\n    function matgetrow(matrix, i) {\n      if (i.isConstant()) return new Matrix(matrix.elements[i]);\n      return _.symfunction('matgetrow', arguments);\n    }\n\n    function matsetrow(matrix, i, x) {\n      //handle symbolics\n      if (!i.isConstant()) return _.symfunction('matsetrow', arguments);\n      if (matrix.elements[i].length !== x.elements.length) throw new DimensionError('Matrix row must match row dimensions!');\n      var M = matrix.clone();\n      M.elements[i] = x.clone().elements;\n      return M;\n    }\n\n    function matgetcol(matrix, col_index) {\n      //handle symbolics\n      if (!col_index.isConstant()) return _.symfunction('matgetcol', arguments);\n      col_index = Number(col_index);\n      var M = Matrix.fromArray([]);\n      matrix.each(function (x, i, j) {\n        if (j === col_index) {\n          M.elements.push([x.clone()]);\n        }\n      });\n      return M;\n    }\n\n    function matsetcol(matrix, j, col) {\n      //handle symbolics\n      if (!j.isConstant()) return _.symfunction('matsetcol', arguments);\n      j = Number(j);\n      if (matrix.rows() !== col.elements.length) throw new DimensionError('Matrix columns must match number of columns!');\n      col.each(function (x, i) {\n        matrix.set(i - 1, j, x.elements[0].clone());\n      });\n      return matrix;\n    }\n\n    function matset(matrix, i, j, value) {\n      matrix.elements[i][j] = value;\n      return matrix;\n    } //the constructor for vectors\n\n\n    function vector() {\n      return new Vector([].slice.call(arguments));\n    } //the constructor for matrices\n\n\n    function matrix() {\n      return Matrix.fromArray(arguments);\n    } //the constructor for sets\n\n\n    function set() {\n      return Set.fromArray(arguments);\n    }\n\n    function determinant(symbol) {\n      if (isMatrix(symbol)) {\n        return symbol.determinant();\n      }\n\n      return symbol;\n    }\n\n    function size(symbol) {\n      var retval;\n      if (isMatrix(symbol)) retval = [new Symbol(symbol.cols()), new Symbol(symbol.rows())];else if (isVector(symbol) || isSet(symbol)) retval = new Symbol(symbol.elements.length);else err('size expects a matrix or a vector');\n      return retval;\n    }\n\n    function dot(vec1, vec2) {\n      if (isVector(vec1) && isVector(vec2)) return vec1.dot(vec2);\n      err('function dot expects 2 vectors');\n    }\n\n    function cross(vec1, vec2) {\n      if (isVector(vec1) && isVector(vec2)) return vec1.cross(vec2);\n      err('function cross expects 2 vectors');\n    }\n\n    function transpose(mat) {\n      if (isMatrix(mat)) return mat.transpose();\n      err('function transpose expects a matrix');\n    }\n\n    function invert(mat) {\n      if (isMatrix(mat)) return mat.invert();\n      err('invert expects a matrix');\n    } //basic set functions\n\n\n    function union(set1, set2) {\n      return set1.union(set2);\n    }\n\n    function intersection(set1, set2) {\n      return set1.intersection(set2);\n    }\n\n    function contains(set1, e) {\n      return set1.contains(e);\n    }\n\n    function difference(set1, set2) {\n      return set1.difference(set2);\n    }\n\n    function intersects(set1, set2) {\n      return new Symbol(Number(set1.intersects(set2)));\n    }\n\n    function is_subset(set1, set2) {\n      return new Symbol(Number(set1.is_subset(set2)));\n    }\n\n    function print() {\n      arguments2Array(arguments).map(function (x) {\n        console.log(x.toString());\n      });\n    }\n\n    function testSQRT(symbol) {\n      //wrap the symbol in sqrt. This eliminates one more check down the line.\n      if (!isSymbol(symbol.power) && symbol.power.absEquals(0.5)) {\n        var sign = symbol.power.sign(); //don't devide the power directly. Notice the use of toString. This makes it possible\n        //to use a bigNumber library in the future\n\n        var retval = _sqrt(symbol.group === P ? new Symbol(symbol.value) : symbol.toLinear()); //place back the sign of the power\n\n\n        if (sign < 0) retval.invert();\n        return retval;\n      }\n\n      return symbol;\n    } //try to reduce a symbol by pulling its power\n\n\n    function testPow(symbol) {\n      if (symbol.group === P) {\n        var v = symbol.value;\n        var fct = primeFactors(v)[0]; //safety\n\n        if (!fct) {\n          warn('Unable to compute prime factors. This should not happen. Please review and report.');\n          return symbol;\n        }\n\n        var n = new Frac(Math.log(v) / Math.log(fct)),\n            p = n.multiply(symbol.power); //we don't want a more complex number than before \n\n        if (p.den > symbol.power.den) return symbol;\n        if (isInt(p)) symbol = Symbol(Math.pow(fct, p));else symbol = new Symbol(fct).setPower(p);\n      }\n\n      return symbol;\n    } //Link the functions to the parse so they're available outside of the library.\n    //This is strictly for convenience and may be deprecated.\n\n\n    this.expand = expand;\n    this.round = round;\n    this.clean = clean;\n    this.sqrt = _sqrt;\n    this.abs = abs;\n    this.log = _log;\n    this.rationalize = rationalize;\n    this.nthroot = nthroot;\n    this.arg = arg;\n    this.conjugate = conjugate;\n    this.imagpart = imagpart;\n    this.realpart = realpart; //TODO:\n    //Utilize the function below instead of the linked function\n\n    this.getFunction = function (name) {\n      return functions[name][0];\n    }; //Parser.methods ===============================================================\n\n\n    this.addPreprocessor = function (name, action, order, shift_cells) {\n      var names = preprocessors.names;\n      var actions = preprocessors.actions;\n      if (typeof action !== 'function') //the person probably forgot to specify a name\n        throw new PreprocessorError('Incorrect parameters. Function expected!');\n\n      if (!order) {\n        names.push(name);\n        actions.push(action);\n      } else {\n        if (shift_cells) {\n          names.splice(order, 0, name);\n          actions.splice(order, 0, action);\n        } else {\n          names[order] = name;\n          actions[order] = action;\n        }\n      }\n    };\n\n    this.getPreprocessors = function () {\n      var preprocessors = {};\n\n      for (var i = 0, l = preprocessors.names.length; i < l; i++) {\n        var name = preprocessors.names[i];\n        preprocessors[name] = {\n          order: i,\n          action: preprocessors.actions[i]\n        };\n      }\n\n      return preprocessors;\n    };\n\n    this.removePreprocessor = function (name, shift_cells) {\n      var i = preprocessors.names.indexOf(name);\n\n      if (shift_cells) {\n        _remove(preprocessors.names, i);\n\n        _remove(preprocessors.actions, i);\n      } else {\n        preprocessors.names[i] = undefined;\n        preprocessors.actions[i] = undefined;\n      }\n    }; //The loader for functions which are not part of Math2\n\n\n    this.mapped_function = function () {\n      var subs = {},\n          params = this.params;\n\n      for (var i = 0; i < params.length; i++) {\n        subs[params[i]] = arguments[i];\n      }\n\n      return _.parse(this.body, subs);\n    };\n    /**\r\n     * Adds two symbols\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.add = function (a, b) {\n      var aIsSymbol = isSymbol(a),\n          bIsSymbol = isSymbol(b); //we're dealing with two symbols\n\n      if (aIsSymbol && bIsSymbol) {\n        //forward the adding of symbols with units to the Unit module\n        if (a.unit || b.unit) {\n          return _.Unit.add(a, b);\n        } //handle Infinity\n        //https://www.encyclopediaofmath.org/index.php/Infinity\n\n\n        if (a.isInfinity || b.isInfinity) {\n          var aneg = a.multiplier.lessThan(0),\n              bneg = b.multiplier.lessThan(0);\n\n          if (a.isInfinity && b.isInfinity && aneg !== bneg) {\n            throw new UndefinedError('(' + a + ')+(' + b + ') is not defined!');\n          }\n\n          var inf = Symbol.infinity();\n          if (bneg) inf.negate();\n          return inf;\n        }\n\n        if (a.isComposite() && a.isLinear() && b.isComposite() && b.isLinear()) {\n          a.distributeMultiplier();\n          b.distributeMultiplier();\n        } //no need to waste time on zeroes\n\n\n        if (a.multiplier.equals(0)) return b;\n        if (b.multiplier.equals(0)) return a;\n\n        if (a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\n          var result = new Symbol(a.multiplier.add(b.multiplier).toDecimal(Settings.PRECISION));\n          return result;\n        }\n\n        var g1 = a.group,\n            g2 = b.group,\n            ap = a.power.toString(),\n            bp = b.power.toString(); //always keep the greater group on the left. \n\n        if (g1 < g2 || g1 === g2 && ap > bp && bp > 0) {\n          return this.add(b, a);\n        }\n        /*note to self: Please don't forget about this dilemma ever again. In this model PL and CB goes crazy\r\n         * because it doesn't know which one to prioritize. */\n        //correction to PL dilemma\n\n\n        if (g1 === CB && g2 === PL && a.value === b.value) {\n          //swap\n          var t = a;\n          a = b;\n          b = t;\n          g1 = a.group;\n          g2 = b.group;\n          ap = a.power.toString();\n          bp = b.power.toString();\n        }\n\n        var powEQ = ap === bp,\n            v1 = a.value,\n            v2 = b.value,\n            aIsComposite = a.isComposite(),\n            bIsComposite = b.isComposite(),\n            h1,\n            h2,\n            result;\n        if (aIsComposite) h1 = _text(a, 'hash');\n        if (bIsComposite) h2 = _text(b, 'hash');\n\n        if (g1 === CP && g2 === CP && b.isLinear() && !a.isLinear() && h1 !== h2) {\n          return this.add(b, a);\n        } //PL & PL should compare hashes and not values e.g. compare x+x^2 with x+x^3 and not x with x\n\n\n        if (g1 === PL && g2 === PL) {\n          v1 = h1;\n          v2 = h2;\n        }\n\n        var PN = g1 === P && g2 === N,\n            PNEQ = a.value === b.multiplier.toString(),\n            valEQ = v1 === v2 || h1 === h2 && h1 !== undefined || PN && PNEQ; //equal values, equal powers\n\n        if (valEQ && powEQ && g1 === g2) {\n          //make sure to convert N to something P can work with\n          if (PN) b = b.convert(P); //CL\n          //handle PL\n\n          if (g1 === PL && (g2 === S || g2 === P)) {\n            a.distributeMultiplier();\n            result = a.attach(b);\n          } else {\n            result = a; //CL\n\n            if (a.multiplier.isOne() && b.multiplier.isOne() && g1 === CP && a.isLinear() && b.isLinear()) {\n              for (var s in b.symbols) {\n                var x = b.symbols[s];\n                result.attach(x);\n              }\n            } else result.multiplier = result.multiplier.add(b.multiplier);\n          }\n        } //equal values uneven powers\n        else if (valEQ && g1 !== PL) {\n            //break the tie for e.g. (x+1)+((x+1)^2+(x+1)^3)\n            if (g1 === CP && g2 === PL) {\n              b.insert(a);\n              result = b;\n            } else {\n              result = Symbol.shell(PL).attach([a, b]); //update the hash\n\n              result.value = g1 === PL ? h1 : v1;\n            }\n          } else if (aIsComposite && a.isLinear()) {\n            var canIterate = g1 === g2,\n                bothPL = g1 === PL && g2 === PL; //we can only iterate group PL if they values match\n\n            if (bothPL) canIterate = a.value === b.value; //distribute the multiplier over the entire symbol\n\n            a.distributeMultiplier();\n\n            if (b.isComposite() && b.isLinear() && canIterate) {\n              b.distributeMultiplier(); //CL\n\n              for (var s in b.symbols) {\n                var x = b.symbols[s];\n                a.attach(x);\n              }\n\n              result = a;\n            } //handle cases like 2*(x+x^2)^2+2*(x+x^2)^3+4*(x+x^2)^2\n            else if (bothPL && a.value !== h2 || g1 === PL && !valEQ) {\n                result = Symbol.shell(CP).attach([a, b]);\n                result.updateHash();\n              } else {\n                result = a.attach(b);\n              }\n          } else {\n            if (g1 === FN && a.fname === SQRT && g2 !== EX && b.power.equals(0.5)) {\n              var m = b.multiplier.clone();\n              b = _sqrt(b.toUnitMultiplier().toLinear());\n              b.multiplier = m;\n            } //fix for issue #3 and #159\n\n\n            if (a.length === 2 && b.length === 2 && even(a.power) && even(b.power)) {\n              result = _.add(expand(a), expand(b));\n            } else {\n              result = Symbol.shell(CP).attach([a, b]);\n              result.updateHash();\n            }\n          }\n\n        if (result.multiplier.equals(0)) result = new Symbol(0); //make sure to remove unnecessary wraps\n\n        if (result.length === 1) {\n          var m = result.multiplier;\n          result = firstObject(result.symbols);\n          result.multiplier = result.multiplier.multiply(m);\n        }\n\n        return result;\n      } else {\n        //keep symbols to the right \n        if (bIsSymbol && !aIsSymbol) {\n          var t = a;\n          a = b;\n          b = t; //swap\n\n          t = bIsSymbol;\n          bIsSymbol = aIsSymbol;\n          aIsSymbol = t;\n        }\n\n        var bIsMatrix = isMatrix(b);\n\n        if (aIsSymbol && bIsMatrix) {\n          var M = new Matrix();\n          b.eachElement(function (e, i, j) {\n            M.set(i, j, _.add(a.clone(), e));\n          });\n          b = M;\n        } else {\n          if (isMatrix(a) && bIsMatrix) {\n            b = a.add(b);\n          } else if (aIsSymbol && isVector(b)) {\n            b.each(function (x, i) {\n              i--;\n              b.elements[i] = _.add(a.clone(), b.elements[i]);\n            });\n          } else {\n            if (isVector(a) && isVector(b)) {\n              b.each(function (x, i) {\n                i--;\n                b.elements[i] = _.add(a.elements[i], b.elements[i]);\n              });\n            } else if (isVector(a) && isMatrix(b)) {\n              //try to convert a to a matrix\n              return _.add(b, a);\n            } else if (isMatrix(a) && isVector(b)) {\n              if (b.elements.length === a.rows()) {\n                var M = new Matrix(),\n                    l = a.cols();\n                b.each(function (e, i) {\n                  var row = [];\n\n                  for (var j = 0; j < l; j++) {\n                    row.push(_.add(a.elements[i - 1][j].clone(), e.clone()));\n                  }\n\n                  M.elements.push(row);\n                });\n                return M;\n              } else err('Dimensions must match!');\n            }\n          }\n        }\n\n        return b;\n      }\n    };\n    /**\r\n     * Gets called when the parser finds the - operator. Not the prefix operator. See this.add\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.subtract = function (a, b) {\n      var aIsSymbol = aIsSymbol = isSymbol(a),\n          bIsSymbol = isSymbol(b),\n          t;\n\n      if (aIsSymbol && bIsSymbol) {\n        if (a.unit || b.unit) {\n          return _.Unit.subtract(a, b);\n        }\n\n        return this.add(a, b.negate());\n      } else {\n        if (bIsSymbol && isVector(a)) {\n          b = a.map(function (x) {\n            return _.subtract(x, b.clone());\n          });\n        } else if (aIsSymbol && isVector(b)) {\n          b = b.map(function (x) {\n            return _.subtract(a.clone(), x);\n          });\n        } else if (isVector(a) && isVector(b)) {\n          if (a.dimensions() === b.dimensions()) b = a.subtract(b);else _.error('Unable to subtract vectors. Dimensions do not match.');\n        } else if (isMatrix(a) && isVector(b)) {\n          if (b.elements.length === a.rows()) {\n            var M = new Matrix(),\n                l = a.cols();\n            b.each(function (e, i) {\n              var row = [];\n\n              for (var j = 0; j < l; j++) {\n                row.push(_.subtract(a.elements[i - 1][j].clone(), e.clone()));\n              }\n\n              M.elements.push(row);\n            });\n            return M;\n          } else err('Dimensions must match!');\n        } else if (isVector(a) && isMatrix(b)) {\n          var M = b.clone().negate();\n          return _.add(M, a);\n        } else if (isMatrix(a) && isMatrix(b)) {\n          b = a.subtract(b);\n        } else if (isMatrix(a) && bIsSymbol) {\n          var M = new Matrix();\n          a.each(function (x, i, j) {\n            M.set(i, j, _.subtract(x, b.clone()));\n          });\n          b = M;\n        } else if (aIsSymbol && isMatrix(b)) {\n          var M = new Matrix();\n          b.each(function (x, i, j) {\n            M.set(i, j, _.subtract(a.clone(), x));\n          });\n          b = M;\n        }\n\n        return b;\n      }\n    };\n    /**\r\n     * Gets called when the parser finds the * operator. See this.add\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.multiply = function (a, b) {\n      var aIsSymbol = isSymbol(a),\n          bIsSymbol = isSymbol(b); //we're dealing with function assignment here\n\n      if (aIsSymbol && b instanceof Collection) {\n        b.elements.push(a);\n        return b;\n      }\n\n      if (aIsSymbol && bIsSymbol) {\n        //if it has a unit then add it and return it right away.\n        if (b.isUnit) {\n          var result = a.clone();\n          a.unit = b;\n          return result;\n        } //if it has units then just forward that problem to the unit module\n\n\n        if (a.unit || b.unit) {\n          return _.Unit.multiply(a, b);\n        } //handle Infinty\n\n\n        if (a.isInfinity || b.isInfinity) {\n          if (a.equals(0) || b.equals(0)) throw new UndefinedError(a + '*' + b + ' is undefined!'); //x/infinity\n\n          if (b.power.lessThan(0)) {\n            if (!a.isInfinity) {\n              return new Symbol(0);\n            } else {\n              throw new UndefinedError('Infinity/Infinity is not defined!');\n            }\n          }\n\n          var sign = a.multiplier.multiply(b.multiplier).sign(),\n              inf = Symbol.infinity();\n\n          if (a.isConstant() || b.isConstant() || a.isInfinity && b.isInfinity) {\n            if (sign < 0) inf.negate();\n            return inf;\n          }\n        } //the quickies\n\n\n        if (a.isConstant() && b.isConstant() && Settings.PARSE2NUMBER) {\n          var t = new bigDec(a.multiplier.toDecimal()).times(new bigDec(b.multiplier.toDecimal())).toFixed();\n          var retval = new Symbol(t);\n          return retval;\n        } //don't waste time\n\n\n        if (a.isOne()) {\n          return b.clone();\n        }\n\n        if (b.isOne()) {\n          return a.clone();\n        }\n\n        if (a.multiplier.equals(0) || b.multiplier.equals(0)) return new Symbol(0);\n        if (b.group > a.group && !(b.group === CP)) return this.multiply(b, a); //correction for PL/CB dilemma\n\n        if (a.group === CB && b.group === PL && a.value === b.value) {\n          var t = a;\n          a = b;\n          b = t; //swap\n        }\n\n        var g1 = a.group,\n            g2 = b.group,\n            bnum = b.multiplier.num,\n            bden = b.multiplier.den;\n\n        if (g1 === FN && a.fname === SQRT && !b.isConstant() && a.args[0].value === b.value && !a.args[0].multiplier.lessThan(0)) {\n          //unwrap sqrt\n          var a_pow = a.power;\n          a = a.args[0].clone();\n          a.setPower(new Frac(0.5).multiply(a_pow));\n          g1 = a.group;\n        } //simplify n/sqrt(n). Being very specific\n        else if (g1 === FN && a.fname === SQRT && a.multiplier.equals(1) && a.power.equals(-1) && b.isConstant() && a.args[0].equals(b)) {\n            a = _.symfunction(SQRT, [b.clone()]);\n            b = new Symbol(1);\n          }\n\n        ;\n        var v1 = a.value,\n            v2 = b.value,\n            sign = new Frac(a.sign()),\n            //since P is just a morphed version of N we need to see if they relate\n        ONN = g1 === P && g2 === N && b.multiplier.equals(a.value),\n            //don't multiply the multiplier of b since that's equal to the value of a\n        m = ONN ? new Frac(1).multiply(a.multiplier).abs() : a.multiplier.multiply(b.multiplier).abs(),\n            result = a.clone().toUnitMultiplier();\n        b = b.clone().toUnitMultiplier(true); //further simplification of sqrt\n\n        if (g1 === FN && g2 === FN) {\n          var u = a.args[0].clone();\n          var v = b.args[0].clone();\n\n          if (a.fname === SQRT && b.fname === SQRT && a.isLinear() && b.isLinear()) {\n            var q = _.divide(u, v).invert();\n\n            if (q.gt(1) && isInt(q)) {\n              //b contains a factor a which can be moved to a\n              result = _.multiply(a.args[0].clone(), _sqrt(q.clone()));\n              b = new Symbol(1);\n            }\n          }\n\n          if (a.fname === FACTORIAL && b.fname === FACTORIAL) {\n            if (a.power.equals(1) && b.power.equals(-1) && _.subtract(v.clone(), u.clone()).equals(1)) {\n              if (u.isConstant(true) && v.isConstant(true)) {\n                var _a = evaluate(a.clone());\n\n                var _b = evaluate(b.clone());\n\n                result = _.multiply(_a, _b);\n              } else {\n                result = _.divide(u, v);\n              }\n\n              b = new Symbol(1);\n            }\n          }\n        } //if both are PL then their hashes have to match\n\n\n        if (v1 === v2 && g1 === PL && g1 === g2) {\n          v1 = a.text('hash');\n          v2 = b.text('hash');\n        } //same issue with (x^2+1)^x*(x^2+1)\n        //EX needs an exception when multiplying because it needs to recognize\n        //that (x+x^2)^x has the same hash as (x+x^2). The latter is kept as x\n\n\n        if (g2 === EX && b.previousGroup === PL && g1 === PL) {\n          v1 = _text(a, 'hash', EX);\n        }\n\n        if ((v1 === v2 || ONN) && !(g1 === PL && (g2 === S || g2 === P || g2 === FN)) && !(g1 === PL && g2 === CB)) {\n          var p1 = a.power,\n              p2 = b.power,\n              isSymbolP1 = isSymbol(p1),\n              isSymbolP2 = isSymbol(p2),\n              toEX = isSymbolP1 || isSymbolP2; //TODO: this needs cleaning up\n\n          if (g1 === PL && g2 !== PL && b.previousGroup !== PL && p1.equals(1)) {\n            result = new Symbol(0);\n            a.each(function (x) {\n              result = _.add(result, _.multiply(x, b.clone()));\n            }, true);\n          } else {\n            //add the powers\n            result.power = toEX ? _.add(!isSymbol(p1) ? new Symbol(p1) : p1, !isSymbol(p2) ? new Symbol(p2) : p2) : g1 === N\n            /*don't add powers for N*/\n            ? p1 : p1.add(p2); //eliminate zero power values and convert them to numbers\n\n            if (result.power.equals(0)) result = result.convert(N); //properly convert to EX\n\n            if (toEX) result.convert(EX); //take care of imaginaries\n\n            if (a.imaginary && b.imaginary) {\n              var isEven = even(result.power % 2);\n\n              if (isEven) {\n                result = new Symbol(1);\n                m.negate();\n              }\n            } //cleanup: this causes the LaTeX generator to get confused as to how to render the symbol\n\n\n            if (result.group !== EX && result.previousGroup) result.previousGroup = undefined; //the sign for b is floating around. Remember we are assuming that the odd variable will carry\n            //the sign but this isn't true if they're equals symbols\n\n            result.multiplier = result.multiplier.multiply(b.multiplier);\n          }\n        } else if (g1 === CB && a.isLinear()) {\n          if (g2 === CB) b.distributeExponent();\n\n          if (g2 === CB && b.isLinear()) {\n            for (var s in b.symbols) {\n              var x = b.symbols[s];\n              result = result.combine(x);\n            }\n\n            result.multiplier = result.multiplier.multiply(b.multiplier);\n          } else {\n            result.combine(b);\n          }\n        } else {\n          //the multiplier was already handled so nothing left to do\n          if (g1 !== N) {\n            if (g1 === CB) {\n              result.distributeExponent();\n              result.combine(b);\n            } else if (!b.isOne()) {\n              var bm = b.multiplier.clone();\n              b.toUnitMultiplier();\n              result = Symbol.shell(CB).combine([result, b]); //transfer the multiplier to the outside\n\n              result.multiplier = result.multiplier.multiply(bm);\n            }\n          } else {\n            result = b.clone().toUnitMultiplier();\n          }\n        }\n\n        if (result.group === P) {\n          var logV = Math.log(result.value),\n              n1 = Math.log(bnum) / logV,\n              n2 = Math.log(bden) / logV,\n              ndiv = m.num / bnum,\n              ddiv = m.den / bden; //we don't want to divide by zero no do we? Strange things happen.\n\n          if (n1 !== 0 && isInt(n1) && isInt(ndiv)) {\n            result.power = result.power.add(new Frac(n1));\n            m.num /= bnum; //BigInt? Keep that in mind for the future.\n          }\n\n          if (n2 !== 0 && isInt(n2) && isInt(ddiv)) {\n            result.power = result.power.subtract(new Frac(n2));\n            m.den /= bden; //BigInt? Keep that in mind for the future.\n          }\n        } //unpack CB if length is only one\n\n\n        if (result.length === 1) {\n          var t = result.multiplier; //transfer the multiplier\n\n          result = firstObject(result.symbols);\n          result.multiplier = result.multiplier.multiply(t);\n        } //reduce square root\n\n\n        var ps = result.power.toString();\n\n        if (even(ps) && result.fname === SQRT) {\n          //grab the sign of the symbol\n          sign = sign * result.sign();\n          var p = result.power;\n          result = result.args[0];\n          result = _.multiply(new Symbol(m), _.pow(result, new Symbol(p.divide(new Frac(2))))); //flip it back to the correct sign\n\n          if (sign < 0) result.negate();\n        } else {\n          result.multiplier = result.multiplier.multiply(m).multiply(sign);\n          if (result.group === CP && result.isImaginary()) result.distributeMultiplier();\n        } //back convert group P to a simpler group N if possible\n\n\n        if (result.group === P && isInt(result.power.toDecimal())) result = result.convert(N);\n        return result;\n      } else {\n        //****** Matrices & Vector *****//\n        if (bIsSymbol && !aIsSymbol) {\n          //keep symbols to the right \n          t = a;\n          a = b;\n          b = t; //swap\n\n          t = bIsSymbol;\n          bIsSymbol = aIsSymbol;\n          aIsSymbol = t;\n        }\n\n        var isMatrixB = isMatrix(b),\n            isMatrixA = isMatrix(a);\n\n        if (aIsSymbol && isMatrixB) {\n          var M = new Matrix();\n          b.eachElement(function (e, i, j) {\n            M.set(i, j, _.multiply(a.clone(), e));\n          });\n          b = M;\n        } else {\n          if (isMatrixA && isMatrixB) {\n            b = a.multiply(b);\n          } else if (aIsSymbol && isVector(b)) {\n            b.each(function (x, i) {\n              i--;\n              b.elements[i] = _.multiply(a.clone(), b.elements[i]);\n            });\n          } else {\n            if (isVector(a) && isVector(b)) {\n              b.each(function (x, i) {\n                i--;\n                b.elements[i] = _.multiply(a.elements[i], b.elements[i]);\n              });\n            } else if (isVector(a) && isMatrix(b)) {\n              //try to convert a to a matrix\n              return this.multiply(b, a);\n            } else if (isMatrix(a) && isVector(b)) {\n              if (b.elements.length === a.rows()) {\n                var M = new Matrix(),\n                    l = a.cols();\n                b.each(function (e, i) {\n                  var row = [];\n\n                  for (var j = 0; j < l; j++) {\n                    row.push(_.multiply(a.elements[i - 1][j].clone(), e.clone()));\n                  }\n\n                  M.elements.push(row);\n                });\n                return M;\n              } else err('Dimensions must match!');\n            }\n          }\n        }\n\n        return b;\n      }\n    };\n    /**\r\n     * Gets called when the parser finds the / operator. See this.add\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.divide = function (a, b) {\n      var aIsSymbol = isSymbol(a),\n          bIsSymbol = isSymbol(b);\n\n      if (aIsSymbol && bIsSymbol) {\n        //forward to Unit division\n        if (a.unit || b.unit) {\n          return _.Unit.divide(a, b);\n        }\n\n        var result;\n        if (b.equals(0)) throw new DivisionByZero('Division by zero not allowed!');\n\n        if (a.isConstant() && b.isConstant()) {\n          result = a.clone();\n          result.multiplier = result.multiplier.divide(b.multiplier);\n        } else {\n          b.invert();\n          result = _.multiply(a, b);\n        }\n\n        return result;\n      } else {\n        //******* Vectors & Matrices *********//\n        var isVectorA = isVector(a),\n            isVectorB = isVector(b);\n\n        if (aIsSymbol && isVectorB) {\n          b = b.map(function (x) {\n            return _.divide(a.clone(), x);\n          });\n        } else if (isVectorA && bIsSymbol) {\n          b = a.map(function (x) {\n            return _.divide(x, b.clone());\n          });\n        } else if (isVectorA && isVectorB) {\n          if (a.dimensions() === b.dimensions()) {\n            b = b.map(function (x, i) {\n              return _.divide(a.elements[--i], x);\n            });\n          } else _.error('Cannot divide vectors. Dimensions do not match!');\n        } else {\n          var isMatrixA = isMatrix(a),\n              isMatrixB = isMatrix(b);\n\n          if (isMatrixA && bIsSymbol) {\n            var M = new Matrix();\n            a.eachElement(function (x, i, j) {\n              M.set(i, j, _.divide(x, b.clone()));\n            });\n            b = M;\n          } else if (aIsSymbol && isMatrixB) {\n            var M = new Matrix();\n            b.eachElement(function (x, i, j) {\n              M.set(i, j, _.divide(a.clone(), x));\n            });\n            b = M;\n          } else if (isMatrixA && isMatrixB) {\n            var M = new Matrix();\n\n            if (a.rows() === b.rows() && a.cols() === b.cols()) {\n              a.eachElement(function (x, i, j) {\n                M.set(i, j, _.divide(x, b.elements[i][j]));\n              });\n              b = M;\n            } else {\n              _.error('Dimensions do not match!');\n            }\n          } else if (isMatrixA && isVectorB) {\n            if (a.cols() === b.dimensions()) {\n              var M = new Matrix();\n              a.eachElement(function (x, i, j) {\n                M.set(i, j, _.divide(x, b.elements[i].clone()));\n              });\n              b = M;\n            } else {\n              _.error('Unable to divide matrix by vector.');\n            }\n          }\n        }\n\n        return b;\n      }\n    };\n    /**\r\n     * Gets called when the parser finds the ^ operator. See this.add\r\n     * @param {Symbol} a\r\n     * @param {Symbol} b\r\n     * @returns {Symbol}\r\n     */\n\n\n    this.pow = function (a, b) {\n      var aIsSymbol = isSymbol(a),\n          bIsSymbol = isSymbol(b);\n\n      if (aIsSymbol && bIsSymbol) {\n        //it has units then it's the Unit module's problem\n        if (a.unit || b.unit) {\n          return _.Unit.pow(a, b);\n        } //handle infinity\n\n\n        if (a.isInfinity || b.isInfinity) {\n          if (a.isInfinity && b.isInfinity) throw new UndefinedError('(' + a + ')^(' + b + ') is undefined!');\n\n          if (a.isConstant() && b.isInfinity) {\n            if (a.equals(0)) {\n              if (b.lessThan(0)) throw new UndefinedError('0^Infinity is undefined!');\n              return new Symbol(0);\n            }\n\n            if (a.equals(1)) throw new UndefinedError('1^' + b.toString() + ' is undefined!'); //a^-oo\n\n            if (b.lessThan(0)) return new Symbol(0); //a^oo\n\n            if (!a.lessThan(0)) return Symbol.infinity();\n          }\n\n          if (a.isInfinity && b.isConstant()) {\n            if (b.equals(0)) throw new UndefinedError(a + '^0 is undefined!');\n            if (b.lessThan(0)) return new Symbol(0);\n            return _.multiply(Symbol.infinity(), _.pow(new Symbol(a.sign()), b.clone()));\n          }\n        }\n\n        var aIsZero = a.equals(0);\n        var bIsZero = b.equals(0);\n        if (aIsZero && bIsZero) throw new UndefinedError('0^0 is undefined!'); //return 0 right away if possible\n\n        if (aIsZero && b.isConstant() && b.multiplier.greaterThan(0)) return new Symbol(0);\n        if (bIsZero) return new Symbol(1);\n        var bIsConstant = b.isConstant(),\n            aIsConstant = a.isConstant(),\n            bIsInt = b.isInteger(),\n            m = a.multiplier,\n            result = a.clone();\n        if (aIsConstant && bIsConstant && a.equals(0) && b.lessThan(0)) throw new UndefinedError('Division by zero is not allowed!'); //compute imaginary numbers right away\n\n        if (Settings.PARSE2NUMBER && aIsConstant && bIsConstant && a.sign() < 0 && evenFraction(b)) {\n          var k, re, im;\n          k = Math.PI * b;\n          re = new Symbol(Math.cos(k));\n          im = _.multiply(Symbol.imaginary(), new Symbol(Math.sin(k)));\n          return _.add(re, im);\n        } //imaginary number under negative nthroot or to the n\n\n\n        if (Settings.PARSE2NUMBER && a.isImaginary() && bIsConstant && isInt(b) && !b.lessThan(0)) {\n          var re, im, r, theta, nre, nim;\n          re = a.realpart();\n          im = a.imagpart();\n\n          if (re.isConstant('all') && im.isConstant('all')) {\n            theta = new Symbol(Math.atan2(im, re) * b);\n            r = _.pow(Symbol.hyp(re, im), b);\n            nre = _.multiply(r.clone(), _.trig.cos(theta.clone()));\n            nim = _.multiply(r, _.trig.sin(theta));\n            return _.add(nre, _.multiply(Symbol.imaginary(), nim));\n          }\n        }\n        /*\r\n         if(a.isImaginary() && bIsConstant && b.multiplier.num.abs().equals(1) && !b.multiplier.den.equals(1)) { \r\n         var sign = b.sign();\r\n         b = abs(b);\r\n         var p, re, im, theta, n, ai, bi, di, ei, ii, th;\r\n         p = Symbol.toPolarFormArray(a);\r\n         theta = _.multiply(b.clone(), arg(a));\r\n         di = _.pow(p[0], b);\r\n         ai = _.trig.cos(theta.clone());\r\n         bi = _.trig.sin(theta);\r\n         \r\n         if(sign < 0) {\r\n         re = _.divide(ai, di.clone());\r\n         im = _.divide(bi, di);\r\n         }\r\n         else {\r\n         re = _.multiply(ai, di.clone());\r\n         im = _.multiply(bi, di);\r\n         }\r\n         return _.add(re, _.multiply(im, Symbol.imaginary()));\r\n         }\r\n         */\n        //take care of the symbolic part\n\n\n        result.toUnitMultiplier(); //simpifly sqrt\n\n        if (result.group === FN && result.fname === SQRT && !bIsConstant) {\n          var s = result.args[0];\n          s.multiplyPower(new Symbol(0.5));\n          s.multiplier.multiply(result.multiplier);\n          s.multiplyPower(b);\n          result = s;\n        } else {\n          var sign = m.sign(); //handle cases such as (-a^3)^(1/4)\n\n          if (evenFraction(b) && sign < 0) {\n            //swaperoo\n            //first put the sign back on the symbol\n            result.negate(); //wrap it in brackets\n\n            result = _.symfunction(PARENTHESIS, [result]); //move the sign back the exterior and let nerdamer handle the rest\n\n            result.negate();\n          }\n\n          result.multiplyPower(b);\n        }\n\n        if (aIsConstant && bIsConstant && Settings.PARSE2NUMBER) {\n          var c; //remove the sign\n\n          if (sign < 0) {\n            a.negate();\n            if (b.multiplier.den.equals(2)) //we know that the numerator has to be odd and therefore it's i\n              c = new Symbol(Settings.IMAGINARY);else if (isInt(b.multiplier)) {\n              if (even(b.multiplier)) c = new Symbol(1);else c = new Symbol(-1);\n            } else if (!even(b.multiplier.den)) {\n              c = new Symbol(Math.pow(sign, b.multiplier.num));\n            } else {\n              c = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\n            }\n          }\n\n          result = new Symbol(Math.pow(a.multiplier.toDecimal(), b.multiplier.toDecimal())); //result = new Symbol(Math2.bigpow(a.multiplier, b.multiplier));\n          //put the back sign\n\n          if (c) result = _.multiply(result, c);\n        } else if (bIsInt && !m.equals(1)) {\n          var abs_b = b.abs(); // Provide fall back to JS until big number implementation is improved\n\n          if (abs_b.gt(Settings.MAX_EXP)) {\n            if (b.sign() < 0) return new Symbol(0);\n            return Symbol.infinity();\n          } else {\n            var p = b.multiplier.toDecimal();\n            var sgn = Math.sign(p);\n            p = Math.abs(p);\n            var multiplier = new Frac(1);\n            multiplier.num = m.num.pow(p);\n            multiplier.den = m.den.pow(p);\n            if (sgn < 0) multiplier.invert(); //multiplying is justified since after mulltiplyPower if it was of group P it will now be of group N\n\n            result.multiplier = result.multiplier.multiply(multiplier);\n          }\n        } else {\n          var sign = a.sign();\n\n          if (b.isConstant() && a.isConstant() && !b.multiplier.den.equals(1) && sign < 0) {\n            //we know the sign is negative so if the denominator for b == 2 then it's i\n            if (b.multiplier.den.equals(2)) {\n              var i = new Symbol(Settings.IMAGINARY);\n              a.negate(); //remove the sign\n              //if the power is negative then i is negative\n\n              if (b.lessThan(0)) {\n                i.negate();\n                b.negate(); //remove the sign from the power\n              } //pull the power normally and put back the imaginary\n\n\n              result = _.multiply(_.pow(a, b), i);\n            } else {\n              //                            if(a.equals(-1)) {\n              //                                var theta = _.multiply(b, _.parse('pi'));\n              //                                result = evaluate(_.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta))));\n              //                            }\n              //                            else {\n              var aa = a.clone();\n              aa.multiplier.negate();\n              result = _.pow(_.symfunction(PARENTHESIS, [new Symbol(sign)]), b.clone());\n\n              var _a = _.pow(new Symbol(aa.multiplier.num), b.clone());\n\n              var _b = _.pow(new Symbol(aa.multiplier.den), b.clone());\n\n              var r = _.divide(_a, _b);\n\n              result = _.multiply(result, r); //                            }  \n            }\n          } else if (Settings.PARSE2NUMBER && b.isImaginary()) {\n            //4^(i + 2) = e^(- (2 - 4 i) π n + (2 + i) log(4))\n            var re, im, aa, a1, b1, c1;\n            aa = a.clone().toLinear();\n            re = b.realpart();\n            im = b.imagpart();\n            a1 = _.pow(aa.clone(), re);\n            b1 = trig.cos(_.multiply(im.clone(), _log(aa.clone())));\n            c1 = _.multiply(trig.sin(_.multiply(im, _log(aa))), Symbol.imaginary());\n            result = _.multiply(a1, _.add(b1, c1));\n            result = _.expand(_.parse(result));\n          } else {\n            //b is a symbol\n            var neg_num = a.group === N && sign < 0,\n                num = testSQRT(new Symbol(neg_num ? m.num : Math.abs(m.num)).setPower(b.clone())),\n                den = testSQRT(new Symbol(m.den).setPower(b.clone()).invert()); //eliminate imaginary if possible\n\n            if (a.imaginary) {\n              if (bIsInt) {\n                var s, p, n;\n                s = Math.sign(b);\n                p = abs(b);\n                n = p % 4;\n                result = new Symbol(even(n) ? -1 : Settings.IMAGINARY);\n\n                if (n === 0 || s < 0 && n === 1 || s > 0 && n === 3) {\n                  result.negate();\n                }\n              } else {\n                //assume i = sqrt(-1) -> (-1)^(1/2)\n                var nr = b.multiplier.multiply(Frac.quick(1, 2)),\n                    //the denominator denotes the power so raise to it. It will turn positive it round\n                tn = Math.pow(-1, nr.num);\n                result = even(nr.den) ? new Symbol(-1).setPower(nr, true) : new Symbol(tn);\n              }\n            } //ensure that the sign is carried by the symbol and not the multiplier\n            //this enables us to check down the line if the multiplier can indeed be transferred\n\n\n            if (sign < 0 && !neg_num) result.negate(); //retain the absolute value\n\n            if (bIsConstant && a.group !== EX) {\n              var evenr = even(b.multiplier.den),\n                  evenp = even(a.power),\n                  n = result.power.toDecimal(),\n                  evennp = even(n);\n\n              if (evenr && evenp && !evennp) {\n                if (n === 1) result = _.symfunction(ABS, [result]);else if (!isInt(n)) {\n                  var p = result.power;\n                  result = _.symfunction(ABS, [result.toLinear()]).setPower(p);\n                } else {\n                  result = _.multiply(_.symfunction(ABS, [result.clone().toLinear()]), result.clone().setPower(new Frac(n - 1)));\n                } //quick workaround. Revisit\n\n                if (Settings.POSITIVE_MULTIPLIERS && result.fname === ABS) result = result.args[0];\n              }\n            } //multiply out sqrt\n\n\n            if (b.equals(2) && result.group === CB) {\n              var _result = new Symbol(1);\n\n              result.each(function (sym) {\n                _result = _.multiply(_result, _.pow(sym, b));\n              });\n              result = _result;\n            }\n          }\n        }\n\n        result = testSQRT(result); //don't multiply until we've tested the remaining symbol\n\n        if (num && den) result = _.multiply(result, testPow(_.multiply(num, den))); //reduce square root\n\n        if (result.fname === SQRT) {\n          var isEX = result.group === EX;\n          var t = isEX ? result.power.multiplier.toString() : result.power.toString();\n\n          if (even(t)) {\n            var pt = isEX ? _.divide(result.power, new Symbol(2)) : new Symbol(result.power.divide(new Frac(2))),\n                m = result.multiplier;\n            result = _.pow(result.args[0], pt);\n            result.multiplier = result.multiplier.multiply(m);\n          }\n        } //detect Euler's identity\n        else if (!Settings.IGNORE_E && result.isE() && result.group === EX && result.power.contains('pi') && result.power.contains(Settings.IMAGINARY)) {\n            var theta = b.stripVar(Settings.IMAGINARY);\n            result = _.add(trig.cos(theta), _.multiply(Symbol.imaginary(), trig.sin(theta))); //                    //we have a match\n            //                    var m1 = result.multiplier,\n            //                            m2 = result.power.multiplier;\n            //                    result = new Symbol(even(m2.num) ? m1 : m1.negate());\n            //                    result = _.pow(result, new Symbol(m2.den).invert());\n          }\n\n        return result;\n      } else {\n        if (isVector(a) && bIsSymbol) {\n          a = a.map(function (x) {\n            return _.pow(x, b.clone());\n          });\n        } else if (isMatrix(a) && bIsSymbol) {\n          var M = new Matrix();\n          a.eachElement(function (x, i, j) {\n            M.set(i, j, _.pow(x, b.clone()));\n          });\n          a = M;\n        } else if (aIsSymbol && isMatrix(b)) {\n          var M = new Matrix();\n          b.eachElement(function (x, i, j) {\n            M.set(i, j, _.pow(a.clone(), x));\n          });\n          a = M;\n        }\n\n        return a;\n      }\n    }; //gets called when the parser finds the , operator. \n    //Commas return a Collector object which roughly an array\n\n\n    this.comma = function (a, b) {\n      if (!(a instanceof Collection)) a = Collection.create(a);\n      a.append(b);\n      return a;\n    }; //link to modulus\n\n\n    this.mod = function (a, b) {\n      return mod(a, b);\n    }; //used to slice elements from arrays\n\n\n    this.slice = function (a, b) {\n      return new Slice(a, b);\n    }; //the equality setter\n\n\n    this.equals = function (a, b) {\n      //equality can only be set for group S so complain it's not\n      if (a.group !== S && !a.isLinear()) err('Cannot set equality for ' + a.toString());\n      VARS[a.value] = b.clone();\n      return b;\n    }; //percent\n\n\n    this.percent = function (a) {\n      return _.divide(a, new Symbol(100));\n    }; //set variable\n\n\n    this.assign = function (a, b) {\n      if (a instanceof Collection && b instanceof Collection) {\n        a.elements.map(function (x, i) {\n          return _.assign(x, b.elements[i]);\n        });\n        return Vector.fromArray(b.elements);\n      }\n\n      if (a.parent) {\n        //it's referring to the parent instead. The current item can be discarded\n        var e = a.parent;\n        e.elements[e.getter] = b;\n        delete e.getter;\n        return e;\n      }\n\n      if (a.group !== S) throw new NerdamerValueError('Cannot complete operation. Incorrect LH value for ' + a);\n      VARS[a.value] = b;\n      return b;\n    };\n\n    this.function_assign = function (a, b) {\n      var f = a.elements.pop();\n      return setFunction(f, a.elements, b);\n    }; //function to quickly convert bools to Symbols\n\n\n    var bool2Symbol = function bool2Symbol(x) {\n      return new Symbol(x === true ? 1 : 0);\n    }; //check for equality\n\n\n    this.eq = function (a, b) {\n      return bool2Symbol(a.equals(b));\n    }; //checks for greater than\n\n\n    this.gt = function (a, b) {\n      return bool2Symbol(a.gt(b));\n    }; //checks for greater than equal\n\n\n    this.gte = function (a, b) {\n      return bool2Symbol(a.gte(b));\n    }; //checks for less than\n\n\n    this.lt = function (a, b) {\n      return bool2Symbol(a.lt(b));\n    }; //checks for less than equal\n\n\n    this.lte = function (a, b) {\n      return bool2Symbol(a.lte(b));\n    }; //wraps the factorial\n\n\n    this.factorial = function (a) {\n      return this.symfunction(FACTORIAL, [a]);\n    }; //wraps the double factorial\n\n\n    this.dfactorial = function (a) {\n      return this.symfunction(DOUBLEFACTORIAL, [a]);\n    };\n  }\n\n  ;\n  /* \"STATIC\" */\n  //converts a number to a fraction. \n\n  var Fraction = {\n    /**\r\n     * Converts a decimal to a fraction\r\n     * @param {number} value\r\n     * @param {object} opts\r\n     * @returns {Array} - an array containing the denominator and the numerator\r\n     */\n    convert: function convert(value, opts) {\n      var frac;\n\n      if (value === 0) {\n        frac = [0, 1];\n      } else {\n        if (value < 1e-6 || value > 1e20) {\n          var qc = this.quickConversion(Number(value));\n\n          if (qc[1] <= 1e20) {\n            var abs = Math.abs(value);\n            var sign = value / abs;\n            frac = this.fullConversion(abs.toFixed((qc[1] + '').length - 1));\n            frac[0] = frac[0] * sign;\n          } else {\n            frac = qc;\n          }\n        } else {\n          frac = this.fullConversion(value);\n        }\n      }\n\n      return frac;\n    },\n\n    /**\r\n     * If the fraction is too small or too large this gets called instead of fullConversion method\r\n     * @param {number} dec\r\n     * @returns {Array} - an array containing the denominator and the numerator\r\n     */\n    quickConversion: function quickConversion(dec) {\n      var x = (dec.toExponential() + '').split('e');\n      var d = x[0].split('.')[1]; // get the number of places after the decimal\n\n      var l = (d ? d.length : 0) - parseInt(x[1]); // maybe the coefficient is an integer;\n      //call Math.round to avoid rounding error\n\n      return [Math.round(Math.pow(10, l) * x[0]), Math.pow(10, Math.abs(x[1]) + l)];\n    },\n\n    /**\r\n     * Returns a good approximation of a fraction. This method gets called by convert\r\n     * http://mathforum.org/library/drmath/view/61772.html\r\n     * Decimal To Fraction Conversion - A Simpler Version\r\n     * Dr Peterson\r\n     * @param {number} dec\r\n     * @returns {Array} - an array containing the denominator and the numerator\r\n     */\n    fullConversion: function fullConversion(dec) {\n      var done = false; //you can adjust the epsilon to a larger number if you don't need very high precision\n\n      var n1 = 0,\n          d1 = 1,\n          n2 = 1,\n          d2 = 0,\n          n = 0,\n          q = dec,\n          epsilon = 1e-16;\n\n      while (!done) {\n        n++;\n\n        if (n > 10000) {\n          done = true;\n        }\n\n        var a = Math.floor(q);\n        var num = n1 + a * n2;\n        var den = d1 + a * d2;\n        var e = q - a;\n\n        if (e < epsilon) {\n          done = true;\n        }\n\n        q = 1 / e;\n        n1 = n2;\n        d1 = d2;\n        n2 = num;\n        d2 = den;\n\n        if (Math.abs(num / den - dec) < epsilon || n > 30) {\n          done = true;\n        }\n      }\n\n      return [num, den];\n    }\n  }; //Depends on Fraction\n  //The latex generator\n\n  var LaTeX = {\n    parser: function () {\n      //create a parser and strip it from everything except the items that you need\n      var keep = ['classes', 'setOperator', 'getOperators', 'getBrackets', 'tokenize', 'toRPN', 'tree', 'units'];\n      var parser = new Parser();\n\n      for (var x in parser) {\n        if (keep.indexOf(x) === -1) delete parser[x];\n      } //declare the operators\n\n\n      parser.setOperator({\n        precedence: 8,\n        operator: '\\\\',\n        action: 'slash',\n        prefix: true,\n        postfix: false,\n        leftAssoc: true,\n        operation: function operation(e) {\n          return e; //bypass the slash\n        }\n      });\n      parser.setOperator({\n        precedence: 8,\n        operator: '\\\\,',\n        action: 'slash_comma',\n        prefix: true,\n        postfix: false,\n        leftAssoc: true,\n        operation: function operation(e) {\n          return e; //bypass the slash\n        }\n      }); //have braces not map to anything. We want them to be return as-is\n\n      var brackets = parser.getBrackets();\n      brackets['{'].maps_to = undefined;\n      return parser;\n    }(),\n    space: '~',\n    dot: ' \\\\cdot ',\n    //grab a list of supported functions but remove the excluded ones found in exclFN\n    latex: function latex(symbol, option) {\n      //it might be an array\n      if (symbol.clone) {\n        symbol = symbol.clone(); //leave original as-is\n      }\n\n      if (symbol instanceof _.classes.Collection) symbol = symbol.elements;\n\n      if (isArray(symbol)) {\n        var LaTeXArray = [];\n\n        for (var i = 0; i < symbol.length; i++) {\n          var sym = symbol[i]; //This way I can generate LaTeX on an array of strings.\n\n          if (!isSymbol(sym)) sym = _.parse(sym);\n          LaTeXArray.push(this.latex(sym, option));\n        }\n\n        return this.brackets(LaTeXArray.join(', '), 'square');\n      } else if (isMatrix(symbol)) {\n        var TeX = '\\\\begin{pmatrix}\\n';\n\n        for (var i = 0; i < symbol.elements.length; i++) {\n          var rowTeX = [],\n              e = symbol.elements[i];\n\n          for (var j = 0; j < e.length; j++) {\n            rowTeX.push(this.latex(e[j], option));\n          }\n\n          TeX += rowTeX.join(' & ');\n\n          if (i < symbol.elements.length - 1) {\n            TeX += '\\\\\\\\\\n';\n          }\n        }\n\n        TeX += '\\\\end{pmatrix}';\n        return TeX;\n      } else if (isVector(symbol)) {\n        var TeX = '\\\\left[';\n\n        for (var i = 0; i < symbol.elements.length; i++) {\n          TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\n        }\n\n        TeX += '\\\\right]';\n        return TeX;\n      } else if (isSet(symbol)) {\n        var TeX = '\\\\{';\n\n        for (var i = 0; i < symbol.elements.length; i++) {\n          TeX += this.latex(symbol.elements[i], option) + ' ' + (i !== symbol.elements.length - 1 ? ',\\\\,' : '');\n        }\n\n        TeX += '\\\\}';\n        return TeX;\n      }\n\n      symbol = symbol.clone();\n      var decimal = option === 'decimal' || option === 'decimals',\n          power = symbol.power,\n          invert = isNegative(power),\n          negative = symbol.multiplier.lessThan(0);\n\n      if (symbol.group === P && decimal) {\n        return String(symbol.multiplier.toDecimal() * Math.pow(symbol.value, symbol.power.toDecimal()));\n      } else {\n        symbol.multiplier = symbol.multiplier.abs(); //if the user wants the result in decimal format then return it as such by placing it at the top part\n\n        var m_array;\n\n        if (decimal) {\n          var m = String(symbol.multiplier.toDecimal()); //if(String(m) === '1' && !decimal) m = '';\n\n          m_array = [m, ''];\n        } else {\n          m_array = [symbol.multiplier.num, symbol.multiplier.den];\n        } //get the value as a two part array\n\n\n        var v_array = this.value(symbol, invert, option, negative),\n            p; //make it all positive since we know whether to push the power to the numerator or denominator already.\n\n        if (invert) power.negate(); //the power is simple since it requires no additional formatting. We can get it to a\n        //string right away. pass in true to neglect unit powers\n\n        if (decimal) {\n          p = isSymbol(power) ? LaTeX.latex(power, option) : String(power.toDecimal());\n          if (String(p) === '1') p = '';\n        } //get the latex representation\n        else if (isSymbol(power)) p = this.latex(power, option); //get it as a fraction\n          else p = this.formatFrac(power, true); //use this array to specify if the power is getting attached to the top or the bottom\n\n\n        var p_array = ['', ''],\n            //stick it to the top or the bottom. If it's negative then the power gets placed on the bottom\n        index = invert ? 1 : 0;\n        p_array[index] = p; //special case group P and decimal\n\n        var retval = (negative ? '-' : '') + this.set(m_array, v_array, p_array, symbol.group === CB);\n        return retval.replace(/\\+\\-/gi, '-');\n      }\n    },\n    //greek mapping\n    greek: {\n      alpha: '\\\\alpha',\n      beta: '\\\\beta',\n      gamma: '\\\\gamma',\n      delta: '\\\\delta',\n      epsilon: '\\\\epsilon',\n      zeta: '\\\\zeta',\n      eta: '\\\\eta',\n      theta: '\\\\theta',\n      iota: '\\\\iota',\n      kappa: '\\\\kappa',\n      lambda: '\\\\lambda',\n      mu: '\\\\mu',\n      nu: '\\\\nu',\n      xi: '\\\\xi',\n      omnikron: '\\\\omnikron',\n      pi: '\\\\pi',\n      rho: '\\\\rho',\n      sigma: '\\\\sigma',\n      tau: '\\\\tau',\n      upsilon: \"\\\\upsilon\",\n      phi: '\\\\phi',\n      chi: '\\\\chi',\n      psi: '\\\\psi',\n      omega: '\\\\omega',\n      Gamma: '\\\\Gamma',\n      Delta: '\\\\Delta',\n      Epsilon: '\\\\Epsilon',\n      Theta: '\\\\Theta',\n      Lambda: '\\\\Lambda',\n      Xi: '\\\\Xi',\n      Pi: '\\\\Pi',\n      Sigma: '\\\\Sigma',\n      Phi: '\\\\Phi',\n      Psi: '\\\\Psi',\n      Omega: '\\\\Omega'\n    },\n    symbols: {\n      arccos: '\\\\arccos',\n      cos: '\\\\cos',\n      csc: '\\\\csc',\n      exp: '\\\\exp',\n      ker: '\\\\ker',\n      limsup: '\\\\limsup',\n      min: '\\\\min',\n      sinh: '\\\\sinh',\n      arcsin: '\\\\arcsin',\n      cosh: '\\\\cosh',\n      deg: '\\\\deg',\n      gcd: '\\\\gcd',\n      lg: '\\\\lg',\n      ln: '\\\\ln',\n      Pr: '\\\\Pr',\n      sqrt: '\\\\sqrt',\n      sup: '\\\\sup',\n      arctan: '\\\\arctan',\n      cot: '\\\\cot',\n      det: '\\\\det',\n      hom: '\\\\hom',\n      lim: '\\\\lim',\n      log: '\\\\log',\n      LN: '\\\\LN',\n      sec: '\\\\sec',\n      tan: '\\\\tan',\n      arg: '\\\\arg',\n      coth: '\\\\coth',\n      dim: '\\\\dim',\n      inf: '\\\\inf',\n      liminf: '\\\\liminf',\n      max: '\\\\max',\n      sin: '\\\\sin',\n      tanh: '\\\\tanh'\n    },\n    //get the raw value of the symbol as an array\n    value: function value(symbol, inverted, option, negative) {\n      var group = symbol.group,\n          previousGroup = symbol.previousGroup,\n          v = ['', ''],\n          index = inverted ? 1 : 0;\n      /*if(group === N) //do nothing since we want to return top & bottom blank; */\n\n      if (symbol.isInfinity) {\n        v[index] = '\\\\infty';\n      } else if (group === S || group === P || previousGroup === S || previousGroup === P || previousGroup === N) {\n        var value = symbol.value;\n        if (value.replace) value = value.replace(/(.+)_$/, '$1\\\\_'); //split it so we can check for instances of alpha as well as alpha_b\n\n        var t_varray = String(value).split('_');\n        var greek = this.greek[t_varray[0]];\n\n        if (greek) {\n          t_varray[0] = greek;\n          value = t_varray.join('_');\n        }\n\n        var symbol = this.symbols[t_varray[0]];\n\n        if (symbol) {\n          t_varray[0] = symbol;\n          value = t_varray.join('_');\n        }\n\n        v[index] = value;\n      } else if (group === FN || previousGroup === FN) {\n        var name,\n            input = [],\n            fname = symbol.fname; //collect the arguments\n\n        for (var i = 0; i < symbol.args.length; i++) {\n          var arg = symbol.args[i],\n              item;\n          if (typeof arg === 'string') item = arg;else {\n            item = this.latex(arg, option);\n          }\n          input.push(item);\n        }\n\n        if (fname === SQRT) {\n          v[index] = '\\\\sqrt' + this.braces(input.join(','));\n        } else if (fname === ABS) {\n          v[index] = this.brackets(input.join(','), 'abs');\n        } else if (fname === PARENTHESIS) {\n          v[index] = this.brackets(input.join(','), 'parens');\n        } else if (fname === 'limit') {\n          v[index] = ' \\\\lim\\\\limits_{' + input[1] + ' \\\\to ' + input[2] + '} ' + input[0];\n        } else if (fname === 'integrate') {\n          v[index] = '\\\\int' + this.braces(input[0]) + this.braces('d' + input[1]);\n        } else if (fname === 'defint') {\n          v[index] = '\\\\int\\\\limits_' + this.braces(input[1]) + '^' + this.braces(input[2]) + ' ' + input[0] + ' d' + input[3];\n        } else if (fname === FACTORIAL || fname === DOUBLEFACTORIAL) {\n          var arg = symbol.args[0];\n\n          if (arg.power.equals(1) && (arg.isComposite() || arg.isCombination())) {\n            input[0] = this.brackets(input[0]);\n          }\n\n          v[index] = input[0] + (fname === FACTORIAL ? '!' : '!!');\n        } else if (fname === 'floor') {\n          v[index] = '\\\\left \\\\lfloor' + this.braces(input[0]) + '\\\\right \\\\rfloor';\n        } else if (fname === 'ceil') {\n          v[index] = '\\\\left \\\\lceil' + this.braces(input[0]) + '\\\\right \\\\rceil';\n        } //capture log(a, b)\n        else if (fname === Settings.LOG && input.length > 1) {\n            v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(input[1]) + this.brackets(input[0]);\n          } //capture log(a, b)\n          else if (fname === Settings.LOG10) {\n              v[index] = '\\\\mathrm' + this.braces(Settings.LOG) + '_' + this.braces(10) + this.brackets(input[0]);\n            } else if (fname === 'sum') {\n              var a = input[0],\n                  b = input[1],\n                  c = input[2],\n                  d = input[3];\n              v[index] = '\\\\sum\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\n            } else if (fname === 'product') {\n              var a = input[0],\n                  b = input[1],\n                  c = input[2],\n                  d = input[3];\n              v[index] = '\\\\prod\\\\limits_{' + this.braces(b) + '=' + this.braces(c) + '}^' + this.braces(d) + ' ' + this.braces(a) + '';\n            } else if (fname === 'nthroot') {\n              v[index] = '\\\\sqrt[' + input[1] + ']' + this.braces(input[0]);\n            } else if (fname === 'mod') {\n              v[index] = input[0] + ' \\\\bmod ' + input[1];\n            } else if (fname === 'realpart') {\n              v[index] = '\\\\operatorname{Re}' + this.brackets(input[0]);\n            } else if (fname === 'imagpart') {\n              v[index] = '\\\\operatorname{Im}' + this.brackets(input[0]);\n            } else {\n              var name = fname !== '' ? '\\\\mathrm' + this.braces(fname.replace(/_/g, '\\\\_')) : '';\n              if (symbol.isConversion) v[index] = name + this.brackets(input.join(''), 'parens');else v[index] = name + this.brackets(input.join(','), 'parens');\n            }\n      } else if (symbol.isComposite()) {\n        var collected = symbol.collectSymbols().sort(group === CP || previousGroup === CP ? function (a, b) {\n          return b.group - a.group;\n        } : function (a, b) {\n          var x = isSymbol(a.power) ? -1 : a.power;\n          var y = isSymbol(b.power) ? -1 : b.power;\n          return y - x;\n        }),\n            symbols = [],\n            l = collected.length;\n\n        for (var i = 0; i < l; i++) {\n          symbols.push(LaTeX.latex(collected[i], option));\n        }\n\n        var value = symbols.join('+');\n        v[index] = !(symbol.isLinear() && symbol.multiplier.equals(1)) || negative ? this.brackets(value, 'parens') : value;\n      } else if (group === CB || previousGroup === EX || previousGroup === CB) {\n        if (group === CB) symbol.distributeExponent(); //this almost feels a little like cheating but I need to know if I should be wrapping the symbol\n        //in brackets or not. We'll do this by checking the value of the numerator and then comparing it \n        //to whether the symbol value is \"simple\" or not.\n\n        var denominator = [],\n            numerator = []; //generate a profile\n\n        var den_map = [],\n            num_map = [],\n            num_c = 0,\n            den_c = 0;\n\n        var setBrackets = function setBrackets(container, map, counter) {\n          if (counter > 1 && map.length > 0) {\n            var l = map.length;\n\n            for (var i = 0; i < l; i++) {\n              var idx = map[i],\n                  item = container[idx];\n\n              if (!(/^\\\\left\\(.+\\\\right\\)\\^\\{.+\\}$/g.test(item) || /^\\\\left\\(.+\\\\right\\)$/g.test(item))) {\n                container[idx] = LaTeX.brackets(item, 'parens');\n              }\n            }\n          }\n\n          return container;\n        }; //generate latex for each of them\n\n\n        symbol.each(function (x) {\n          var isDenom = isNegative(x.power),\n              laTex;\n\n          if (isDenom) {\n            laTex = LaTeX.latex(x.invert(), option);\n            den_c++;\n\n            if (x.isComposite()) {\n              if (symbol.multiplier.den != 1 && Math.abs(x.power) == 1) laTex = LaTeX.brackets(laTex, 'parens');\n              den_map.push(denominator.length); //make a note of where the composite was found \n            }\n\n            denominator.push(laTex);\n          } else {\n            laTex = LaTeX.latex(x, option);\n            num_c++;\n\n            if (x.isComposite()) {\n              if (symbol.multiplier.num != 1 && Math.abs(x.power) == 1) laTex = LaTeX.brackets(laTex, 'parens');\n              num_map.push(numerator.length); //make a note of where the composite was found \n            }\n\n            numerator.push(laTex);\n          }\n        }); //apply brackets\n\n        setBrackets(numerator, num_map, num_c);\n        v[0] = numerator.join(this.dot); //collapse the numerator into one string\n\n        setBrackets(denominator, den_map, den_c);\n        v[1] = denominator.join(this.dot);\n      }\n\n      return v;\n    },\n    set: function set(m, v, p, combine_power) {\n      var isBracketed = function isBracketed(v) {\n        return /^\\\\left\\(.+\\\\right\\)$/.test(v);\n      }; //format the power if it exists\n\n\n      if (p) p = this.formatP(p); //group CB will have to be wrapped since the power applies to both it's numerator and denominator\n\n      if (combine_power) {\n        //POSSIBLE BUG: If powers for group CB format wrong, investigate this since I might have overlooked something\n        //the assumption is that in every case the denonimator should be empty when dealing with CB. I can't think\n        //of a case where this isn't true\n        var tp = p[0];\n        p[0] = ''; //temporarily make p blank\n      } //merge v and p. Not that v MUST be first since the order matters\n\n\n      v = this.merge(v, p);\n      var mn = m[0],\n          md = m[1],\n          vn = v[0],\n          vd = v[1]; //filters\n      //if the top has a variable but the numerator is one drop it\n\n      if (vn && Number(mn) === 1) mn = ''; //if denominator is 1 drop it always\n\n      if (Number(md) === 1) md = ''; //prepare the top portion but check that it's not already bracketed. If it is then leave out the cdot\n\n      var top = this.join(mn, vn, !isBracketed(vn) ? this.dot : ''); //prepare the bottom portion but check that it's not already bracketed. If it is then leave out the cdot\n\n      var bottom = this.join(md, vd, !isBracketed(vd) ? this.dot : ''); //format the power if it exists\n      //make it a fraction if both top and bottom exists\n\n      if (top && bottom) {\n        var frac = this.frac(top, bottom);\n        if (combine_power && tp) frac = this.brackets(frac) + tp;\n        return frac;\n      } //otherwise only the top exists so return that\n      else return top;\n    },\n    merge: function merge(a, b) {\n      var r = [];\n\n      for (var i = 0; i < 2; i++) {\n        r[i] = a[i] + b[i];\n      }\n\n      return r;\n    },\n    //joins together two strings if both exist\n    join: function join(n, d, glue) {\n      if (!n && !d) return '';\n      if (n && !d) return n;\n      if (d && !n) return d;\n      return n + glue + d;\n    },\n    formatP: function formatP(p_array) {\n      for (var i = 0; i < 2; i++) {\n        var p = p_array[i];\n        if (p) p_array[i] = '^' + this.braces(p);\n      }\n\n      return p_array;\n    },\n\n    /**\r\n     * formats the fractions accordingly.\r\n     * @param {Frac} f\r\n     * @param {bool} is_pow\r\n     */\n    formatFrac: function formatFrac(f, is_pow) {\n      var n = f.num.toString(),\n          d = f.den.toString(); //no need to have x^1\n\n      if (is_pow && n === '1' && d === '1') return ''; //no need to have x/1\n\n      if (d === '1') return n;\n      return this.frac(n, d);\n    },\n    frac: function frac(n, d) {\n      return '\\\\frac' + this.braces(n) + this.braces(d);\n    },\n    braces: function braces(e) {\n      return '{' + e + '}';\n    },\n    brackets: function brackets(e, typ) {\n      typ = typ || 'parens';\n      var bracketTypes = {\n        parens: ['(', ')'],\n        square: ['[', ']'],\n        brace: ['{', '}'],\n        abs: ['|', '|'],\n        angle: ['\\\\langle', '\\\\rangle']\n      };\n      var bracket = bracketTypes[typ];\n      return '\\\\left' + bracket[0] + e + '\\\\right' + bracket[1];\n    },\n\n    /**\r\n     * Removes extreneous tokens\r\n     * @param {Tokens[]} tokens\r\n     * @returns {Tokens[]}\r\n     */\n    filterTokens: function filterTokens(tokens) {\n      var filtered = []; //the items that need to be disposed\n\n      var d = ['\\\\', 'left', 'right', 'big', 'Big', 'large', 'Large'];\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n        if (isArray(token)) filtered.push(LaTeX.filterTokens(token));else if (d.indexOf(token.value) === -1) filtered.push(token);\n      }\n\n      return filtered;\n    },\n\n    /*\r\n     * Parses tokens from LaTeX string. Does not do any error checking\r\n     * @param {Tokens[]} rpn\r\n     * @returns {String}\r\n     */\n    parse: function parse(raw_tokens) {\n      var i, l;\n      var retval = '';\n      var tokens = this.filterTokens(raw_tokens);\n      var replace = {\n        'cdot': '',\n        'times': '',\n        'infty': 'Infinity'\n      }; //get the next token\n\n      var next = function next() {\n        return tokens[++i];\n      };\n\n      var parse_next = function parse_next() {\n        return LaTeX.parse(next());\n      };\n\n      var get = function get(token) {\n        if (token in replace) return replace[token];\n        return token;\n      }; //start parsing the tokens\n\n\n      for (i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i]; //fractions\n\n        if (token.value === 'frac') {\n          //parse and wrap it in brackets\n          var n = parse_next();\n          var d = parse_next();\n          retval += n + '/' + d;\n        } else if (token.value in LaTeX.symbols) {\n          retval += token.value + parse_next();\n        } else if (token.value === 'int') {\n          var f = parse_next(); //skip the comma\n\n          i++; //get the variable of integration\n\n          var dx = next().value;\n          dx = get(dx.substring(1, dx.length));\n          retval += 'integrate' + inBrackets(f + ',' + dx);\n        } else if (token.value === 'mathrm') {\n          var f = tokens[++i][0].value;\n          retval += f + parse_next();\n        } //sum and product\n        else if (token.value === 'sum_' || token.value === 'prod_') {\n            var fn = token.value === 'sum_' ? 'sum' : 'product';\n            var nxt = next();\n            i++; //skip the caret\n\n            var end = parse_next();\n            var f = parse_next();\n            retval += fn + inBrackets([f, get(nxt[0]), get(nxt[2]), get(end)].join(','));\n          } else if (token.value === 'lim_') {\n            var nxt = next();\n            retval += 'limit' + inBrackets([parse_next(), get(nxt[0]), get(nxt[2])].join(','));\n          } else {\n            if (Array.isArray(token)) {\n              retval += get(LaTeX.parse(token));\n            } else retval += get(token.value.toString());\n          }\n      }\n\n      return inBrackets(retval);\n    }\n  }; //Vector =======================================================================    \n\n  function Vector(v) {\n    if (isVector(v)) this.elements = v.items.slice(0);else if (isArray(v)) this.elements = v.slice(0);else this.elements = [].slice.call(arguments);\n  }\n  /*\r\n   * Generates a pre-filled array\r\n   * @param {type} n\r\n   * @param {type} val\r\n   * @returns {unresolved}\r\n   */\n\n\n  Vector.arrayPrefill = function (n, val) {\n    var a = [];\n    val = val || 0;\n\n    for (var i = 0; i < n; i++) {\n      a[i] = val;\n    }\n\n    return a;\n  };\n  /**\r\n   * Generate a vector from and array\r\n   * @param {type} a\r\n   * @returns {unresolved}\r\n   */\n\n\n  Vector.fromArray = function (a) {\n    var v = new Vector();\n    v.elements = a;\n    return v;\n  };\n  /**\r\n   * Convert a Set to a Vector\r\n   * @param {Set} set\r\n   * @returns {Vector}\r\n   */\n\n\n  Vector.fromSet = function (set) {\n    return Vector.fromArray(set.elements);\n  }; //Ported from Sylvester.js\n\n\n  Vector.prototype = {\n    custom: true,\n    // Returns element i of the vector\n    e: function e(i) {\n      return i < 1 || i > this.elements.length ? null : this.elements[i - 1];\n    },\n    set: function set(i, val) {\n      if (!isSymbol(val)) val = new Symbol(val);\n      this.elements[i] = val;\n    },\n    // Returns the number of elements the vector has\n    dimensions: function dimensions() {\n      return this.elements.length;\n    },\n    // Returns the modulus ('length') of the vector\n    modulus: function modulus() {\n      return block('SAFE', function () {\n        return _.pow(this.dot(this.clone()), new Symbol(0.5));\n      }, undefined, this);\n    },\n    // Returns true iff the vector is equal to the argument\n    eql: function eql(vector) {\n      var n = this.elements.length;\n      var V = vector.elements || vector;\n\n      if (n !== V.length) {\n        return false;\n      }\n\n      do {\n        if (Math.abs(_.subtract(this.elements[n - 1], V[n - 1]).valueOf()) > PRECISION) {\n          return false;\n        }\n      } while (--n);\n\n      return true;\n    },\n    // Returns a clone of the vector\n    clone: function clone() {\n      var V = new Vector(),\n          l = this.elements.length;\n\n      for (var i = 0; i < l; i++) {\n        //Rule: all items within the vector must have a clone method.\n        V.elements.push(this.elements[i].clone());\n      }\n\n      if (this.getter) {\n        V.getter = this.getter.clone();\n      }\n\n      return V;\n    },\n    // Maps the vector to another vector according to the given function\n    map: function map(fn) {\n      var elements = [];\n      this.each(function (x, i) {\n        elements.push(fn(x, i));\n      });\n      return new Vector(elements);\n    },\n    // Calls the iterator for each element of the vector in turn\n    each: function each(fn) {\n      var n = this.elements.length,\n          k = n,\n          i;\n\n      do {\n        i = k - n;\n        fn(this.elements[i], i + 1);\n      } while (--n);\n    },\n    // Returns a new vector created by normalizing the receiver\n    toUnitVector: function toUnitVector() {\n      return block('SAFE', function () {\n        var r = this.modulus();\n\n        if (r.valueOf() === 0) {\n          return this.clone();\n        }\n\n        return this.map(function (x) {\n          return _.divide(x, r);\n        });\n      }, undefined, this);\n    },\n    // Returns the angle between the vector and the argument (also a vector)\n    angleFrom: function angleFrom(vector) {\n      return block('SAFE', function () {\n        var V = vector.elements || vector;\n        var n = this.elements.length;\n\n        if (n !== V.length) {\n          return null;\n        }\n\n        var dot = new Symbol(0),\n            mod1 = new Symbol(0),\n            mod2 = new Symbol(0); // Work things out in parallel to save time\n\n        this.each(function (x, i) {\n          dot = _.add(dot, _.multiply(x, V[i - 1]));\n          mod1 = _.add(mod1, _.multiply(x, x)); //will not conflict in safe block\n\n          mod2 = _.add(mod2, _.multiply(V[i - 1], V[i - 1])); //will not conflict in safe block\n        });\n        mod1 = _.pow(mod1, new Symbol(0.5));\n        mod2 = _.pow(mod2, new Symbol(0.5));\n\n        var product = _.multiply(mod1, mod2);\n\n        if (product.valueOf() === 0) {\n          return null;\n        }\n\n        var theta = _.divide(dot, product);\n\n        var theta_val = theta.valueOf();\n\n        if (theta_val < -1) {\n          theta = -1;\n        }\n\n        if (theta_val > 1) {\n          theta = 1;\n        }\n\n        return new Symbol(Math.acos(theta));\n      }, undefined, this);\n    },\n    // Returns true iff the vector is parallel to the argument\n    isParallelTo: function isParallelTo(vector) {\n      var angle = this.angleFrom(vector).valueOf();\n      return angle === null ? null : angle <= PRECISION;\n    },\n    // Returns true iff the vector is antiparallel to the argument\n    isAntiparallelTo: function isAntiparallelTo(vector) {\n      var angle = this.angleFrom(vector).valueOf();\n      return angle === null ? null : Math.abs(angle - Math.PI) <= PRECISION;\n    },\n    // Returns true iff the vector is perpendicular to the argument\n    isPerpendicularTo: function isPerpendicularTo(vector) {\n      var dot = this.dot(vector);\n      return dot === null ? null : Math.abs(dot) <= PRECISION;\n    },\n    // Returns the result of adding the argument to the vector\n    add: function add(vector) {\n      return block('SAFE', function () {\n        var V = vector.elements || vector;\n\n        if (this.elements.length !== V.length) {\n          return null;\n        }\n\n        return this.map(function (x, i) {\n          return _.add(x, V[i - 1]);\n        });\n      }, undefined, this);\n    },\n    // Returns the result of subtracting the argument from the vector\n    subtract: function subtract(vector) {\n      return block('SAFE', function () {\n        var V = vector.elements || vector;\n\n        if (this.elements.length !== V.length) {\n          return null;\n        }\n\n        return this.map(function (x, i) {\n          return _.subtract(x, V[i - 1]);\n        });\n      }, undefined, this);\n    },\n    // Returns the result of multiplying the elements of the vector by the argument\n    multiply: function multiply(k) {\n      return this.map(function (x) {\n        return x.clone() * k.clone();\n      });\n    },\n    x: function x(k) {\n      return this.multiply(k);\n    },\n    // Returns the scalar product of the vector with the argument\n    // Both vectors must have equal dimensionality\n    dot: function dot(vector) {\n      return block('SAFE', function () {\n        var V = vector.elements || vector;\n        var product = new Symbol(0),\n            n = this.elements.length;\n\n        if (n !== V.length) {\n          return null;\n        }\n\n        do {\n          product = _.add(product, _.multiply(this.elements[n - 1], V[n - 1]));\n        } while (--n);\n\n        return product;\n      }, undefined, this);\n    },\n    // Returns the vector product of the vector with the argument\n    // Both vectors must have dimensionality 3\n    cross: function cross(vector) {\n      var B = vector.elements || vector;\n\n      if (this.elements.length !== 3 || B.length !== 3) {\n        return null;\n      }\n\n      var A = this.elements;\n      return block('SAFE', function () {\n        return new Vector([_.subtract(_.multiply(A[1], B[2]), _.multiply(A[2], B[1])), _.subtract(_.multiply(A[2], B[0]), _.multiply(A[0], B[2])), _.subtract(_.multiply(A[0], B[1]), _.multiply(A[1], B[0]))]);\n      }, undefined, this);\n    },\n    // Returns the (absolute) largest element of the vector\n    max: function max() {\n      var m = 0,\n          n = this.elements.length,\n          k = n,\n          i;\n\n      do {\n        i = k - n;\n\n        if (Math.abs(this.elements[i].valueOf()) > Math.abs(m.valueOf())) {\n          m = this.elements[i];\n        }\n      } while (--n);\n\n      return m;\n    },\n    magnitude: function magnitude() {\n      var magnitude = new Symbol(0);\n      this.each(function (e) {\n        magnitude = _.add(magnitude, _.pow(e, new Symbol(2)));\n      });\n      return _.sqrt(magnitude);\n    },\n    // Returns the index of the first match found\n    indexOf: function indexOf(x) {\n      var index = null,\n          n = this.elements.length,\n          k = n,\n          i;\n\n      do {\n        i = k - n;\n\n        if (index === null && this.elements[i].valueOf() === x.valueOf()) {\n          index = i + 1;\n        }\n      } while (--n);\n\n      return index;\n    },\n    text: function text(x) {\n      return _text(this);\n    },\n    toString: function toString() {\n      return this.text();\n    },\n    latex: function latex(option) {\n      var tex = [];\n\n      for (var i = 0; i < this.elements.length; i++) {\n        tex.push(LaTeX.latex.call(LaTeX, this.elements[i], option));\n      }\n\n      return '[' + tex.join(', ') + ']';\n    }\n  }; //Matrix =======================================================================\n\n  function Matrix() {\n    var m = arguments,\n        l = m.length,\n        i,\n        el = [];\n\n    if (isMatrix(m)) {\n      //if it's a matrix then make a clone\n      for (i = 0; i < l; i++) {\n        el.push(m[i].slice(0));\n      }\n    } else {\n      var row, lw, rl;\n\n      for (i = 0; i < l; i++) {\n        row = m[i];\n        if (isVector(row)) row = row.elements;\n        if (!isArray(row)) row = [row];\n        rl = row.length;\n        if (lw && lw !== rl) err('Unable to create Matrix. Row dimensions do not match!');\n        el.push(row);\n        lw = rl;\n      }\n    }\n\n    this.elements = el;\n  }\n\n  Matrix.identity = function (n) {\n    var m = new Matrix();\n\n    for (var i = 0; i < n; i++) {\n      m.elements.push([]);\n\n      for (var j = 0; j < n; j++) {\n        m.set(i, j, i === j ? new Symbol(1) : new Symbol(0));\n      }\n    }\n\n    return m;\n  };\n\n  Matrix.fromArray = function (arr) {\n    function F(args) {\n      return Matrix.apply(this, args);\n    }\n\n    F.prototype = Matrix.prototype;\n    return new F(arr);\n  };\n\n  Matrix.zeroMatrix = function (rows, cols) {\n    var m = new Matrix();\n\n    for (var i = 0; i < rows; i++) {\n      m.elements.push(Vector.arrayPrefill(cols, new Symbol(0)));\n    }\n\n    return m;\n  };\n\n  Matrix.prototype = {\n    //needs be true to let the parser know not to try to cast it to a symbol\n    custom: true,\n    get: function get(row, column) {\n      if (!this.elements[row]) return undefined;\n      return this.elements[row][column];\n    },\n    map: function map(f, raw_values) {\n      var M = new Matrix();\n      this.each(function (e, i, j) {\n        M.set(i, j, f.call(M, e), raw_values);\n      });\n      return M;\n    },\n    set: function set(row, column, value, raw) {\n      if (!this.elements[row]) this.elements[row] = [];\n      this.elements[row][column] = raw ? value : isSymbol(value) ? value : new Symbol(value);\n    },\n    cols: function cols() {\n      return this.elements[0].length;\n    },\n    rows: function rows() {\n      return this.elements.length;\n    },\n    row: function row(n) {\n      if (!n || n > this.cols()) return [];\n      return this.elements[n - 1];\n    },\n    col: function col(n) {\n      var nr = this.rows(),\n          col = [];\n      if (n > this.cols() || !n) return col;\n\n      for (var i = 0; i < nr; i++) {\n        col.push(this.elements[i][n - 1]);\n      }\n\n      return col;\n    },\n    eachElement: function eachElement(fn) {\n      var nr = this.rows(),\n          nc = this.cols(),\n          i,\n          j;\n\n      for (i = 0; i < nr; i++) {\n        for (j = 0; j < nc; j++) {\n          fn.call(this, this.elements[i][j], i, j);\n        }\n      }\n    },\n    //ported from Sylvester.js\n    determinant: function determinant() {\n      if (!this.isSquare()) {\n        return null;\n      }\n\n      var M = this.toRightTriangular();\n      var det = M.elements[0][0],\n          n = M.elements.length - 1,\n          k = n,\n          i;\n\n      do {\n        i = k - n + 1;\n        det = _.multiply(det, M.elements[i][i]);\n      } while (--n);\n\n      return det;\n    },\n    isSquare: function isSquare() {\n      return this.elements.length === this.elements[0].length;\n    },\n    isSingular: function isSingular() {\n      return this.isSquare() && this.determinant() === 0;\n    },\n    augment: function augment(m) {\n      var r = this.rows(),\n          rr = m.rows();\n      if (r !== rr) err(\"Cannot augment matrix. Rows don't match.\");\n\n      for (var i = 0; i < r; i++) {\n        this.elements[i] = this.elements[i].concat(m.elements[i]);\n      }\n\n      return this;\n    },\n    clone: function clone() {\n      var r = this.rows(),\n          c = this.cols(),\n          m = new Matrix();\n\n      for (var i = 0; i < r; i++) {\n        m.elements[i] = [];\n\n        for (var j = 0; j < c; j++) {\n          var symbol = this.elements[i][j];\n          m.elements[i][j] = isSymbol(symbol) ? symbol.clone() : symbol;\n        }\n      }\n\n      return m;\n    },\n    //ported from Sylvester.js\n    invert: function invert() {\n      if (!this.isSquare()) err('Matrix is not square!');\n      return block('SAFE', function () {\n        var ni = this.elements.length,\n            ki = ni,\n            i,\n            j;\n        var imatrix = Matrix.identity(ni);\n        var M = this.augment(imatrix).toRightTriangular();\n        var np,\n            kp = M.elements[0].length,\n            p,\n            els,\n            divisor;\n        var inverse_elements = [],\n            new_element; // Matrix is non-singular so there will be no zeros on the diagonal\n        // Cycle through rows from last to first\n\n        do {\n          i = ni - 1; // First, normalise diagonal elements to 1\n\n          els = [];\n          np = kp;\n          inverse_elements[i] = [];\n          divisor = M.elements[i][i];\n\n          do {\n            p = kp - np;\n            new_element = _.divide(M.elements[i][p], divisor.clone());\n            els.push(new_element); // Shuffle of the current row of the right hand side into the results\n            // array as it will not be modified by later runs through this loop\n\n            if (p >= ki) {\n              inverse_elements[i].push(new_element);\n            }\n          } while (--np);\n\n          M.elements[i] = els; // Then, subtract this row from those above it to\n          // give the identity matrix on the left hand side\n\n          for (j = 0; j < i; j++) {\n            els = [];\n            np = kp;\n\n            do {\n              p = kp - np;\n              els.push(_.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), M.elements[j][i].clone())));\n            } while (--np);\n\n            M.elements[j] = els;\n          }\n        } while (--ni);\n\n        return Matrix.fromArray(inverse_elements);\n      }, undefined, this);\n    },\n    //ported from Sylvester.js\n    toRightTriangular: function toRightTriangular() {\n      return block('SAFE', function () {\n        var M = this.clone(),\n            els,\n            fel,\n            nel,\n            n = this.elements.length,\n            k = n,\n            i,\n            np,\n            kp = this.elements[0].length,\n            p;\n\n        do {\n          i = k - n;\n          fel = M.elements[i][i];\n\n          if (fel.valueOf() === 0) {\n            for (var j = i + 1; j < k; j++) {\n              nel = M.elements[j][i];\n\n              if (nel && nel.valueOf() !== 0) {\n                els = [];\n                np = kp;\n\n                do {\n                  p = kp - np;\n                  els.push(_.add(M.elements[i][p].clone(), M.elements[j][p].clone()));\n                } while (--np);\n\n                M.elements[i] = els;\n                break;\n              }\n            }\n          }\n\n          var fel = M.elements[i][i];\n\n          if (fel.valueOf() !== 0) {\n            for (j = i + 1; j < k; j++) {\n              var multiplier = _.divide(M.elements[j][i].clone(), M.elements[i][i].clone());\n\n              els = [];\n              np = kp;\n\n              do {\n                p = kp - np; // Elements with column numbers up to an including the number\n                // of the row that we're subtracting can safely be set straight to\n                // zero, since that's the point of this routine and it avoids having\n                // to loop over and correct rounding errors later\n\n                els.push(p <= i ? new Symbol(0) : _.subtract(M.elements[j][p].clone(), _.multiply(M.elements[i][p].clone(), multiplier.clone())));\n              } while (--np);\n\n              M.elements[j] = els;\n            }\n          }\n        } while (--n);\n\n        return M;\n      }, undefined, this);\n    },\n    transpose: function transpose() {\n      var rows = this.elements.length,\n          cols = this.elements[0].length;\n      var M = new Matrix(),\n          ni = cols,\n          i,\n          nj,\n          j;\n\n      do {\n        i = cols - ni;\n        M.elements[i] = [];\n        nj = rows;\n\n        do {\n          j = rows - nj;\n          M.elements[i][j] = this.elements[j][i].clone();\n        } while (--nj);\n      } while (--ni);\n\n      return M;\n    },\n    // Returns true if the matrix can multiply the argument from the left\n    canMultiplyFromLeft: function canMultiplyFromLeft(matrix) {\n      var l = isMatrix(matrix) ? matrix.elements.length : matrix.length; // this.columns should equal matrix.rows\n\n      return this.elements[0].length === l;\n    },\n    sameSize: function sameSize(matrix) {\n      return this.rows() === matrix.rows() && this.cols() === matrix.cols();\n    },\n    multiply: function multiply(matrix) {\n      return block('SAFE', function () {\n        var M = matrix.elements || matrix;\n\n        if (!this.canMultiplyFromLeft(M)) {\n          if (this.sameSize(matrix)) {\n            var MM = new Matrix();\n            var rows = this.rows();\n\n            for (var i = 0; i < rows; i++) {\n              var e = _.multiply(new Vector(this.elements[i]), new Vector(matrix.elements[i]));\n\n              MM.elements[i] = e.elements;\n            }\n\n            return MM;\n          }\n\n          return null;\n        }\n\n        var ni = this.elements.length,\n            ki = ni,\n            i,\n            nj,\n            kj = M[0].length,\n            j;\n        var cols = this.elements[0].length,\n            elements = [],\n            sum,\n            nc,\n            c;\n\n        do {\n          i = ki - ni;\n          elements[i] = [];\n          nj = kj;\n\n          do {\n            j = kj - nj;\n            sum = new Symbol(0);\n            nc = cols;\n\n            do {\n              c = cols - nc;\n              sum = _.add(sum, _.multiply(this.elements[i][c], M[c][j]));\n            } while (--nc);\n\n            elements[i][j] = sum;\n          } while (--nj);\n        } while (--ni);\n\n        return Matrix.fromArray(elements);\n      }, undefined, this);\n    },\n    add: function add(matrix, callback) {\n      var M = new Matrix();\n\n      if (this.sameSize(matrix)) {\n        this.eachElement(function (e, i, j) {\n          var result = _.add(e.clone(), matrix.elements[i][j].clone());\n\n          if (callback) {\n            result = callback.call(M, result, e, matrix.elements[i][j]);\n          }\n\n          M.set(i, j, result);\n        });\n      }\n\n      return M;\n    },\n    subtract: function subtract(matrix, callback) {\n      var M = new Matrix();\n\n      if (this.sameSize(matrix)) {\n        this.eachElement(function (e, i, j) {\n          var result = _.subtract(e.clone(), matrix.elements[i][j].clone());\n\n          if (callback) {\n            result = callback.call(M, result, e, matrix.elements[i][j]);\n          }\n\n          M.set(i, j, result);\n        });\n      }\n\n      return M;\n    },\n    negate: function negate() {\n      this.each(function (e) {\n        return e.negate();\n      });\n      return this;\n    },\n    toVector: function toVector() {\n      if (this.rows() === 1 || this.cols() === 1) {\n        var v = new Vector();\n        v.elements = this.elements;\n        return v;\n      }\n\n      return this;\n    },\n    toString: function toString(newline, to_decimal) {\n      var l = this.rows(),\n          s = [];\n      newline = newline === undefined ? '\\n' : newline;\n\n      for (var i = 0; i < l; i++) {\n        s.push('[' + this.elements[i].map(function (x) {\n          var v = to_decimal ? x.multiplier.toDecimal() : x.toString();\n          return x !== undefined ? v : '';\n        }).join(',') + ']');\n      }\n\n      return 'matrix' + inBrackets(s.join(','));\n    },\n    text: function text() {\n      return 'matrix(' + this.elements.toString('') + ')';\n    },\n    latex: function latex(option) {\n      var cols = this.cols(),\n          elements = this.elements;\n      return format('\\\\begin{vmatrix}{0}\\\\end{vmatrix}', function () {\n        var tex = [];\n\n        for (var row in elements) {\n          var row_tex = [];\n\n          for (var i = 0; i < cols; i++) {\n            row_tex.push(LaTeX.latex.call(LaTeX, elements[row][i], option));\n          }\n\n          tex.push(row_tex.join(' & '));\n        }\n\n        return tex.join(' \\\\cr ');\n      });\n    }\n  }; //aliases\n\n  Matrix.prototype.each = Matrix.prototype.eachElement;\n\n  function Set(set) {\n    this.elements = []; //if the first object isn't an array, convert it to one.\n\n    if (!isVector(set)) set = Vector.fromArray(arguments);\n\n    if (set) {\n      var elements = set.elements;\n\n      for (var i = 0, l = elements.length; i < l; i++) {\n        this.add(elements[i]);\n      }\n    }\n  }\n\n  Set.fromArray = function (arr) {\n    function F(args) {\n      return Set.apply(this, args);\n    }\n\n    F.prototype = Set.prototype;\n    return new F(arr);\n  };\n\n  Set.prototype = {\n    add: function add(x) {\n      if (!this.contains(x)) this.elements.push(x.clone());\n    },\n    contains: function contains(x) {\n      for (var i = 0; i < this.elements.length; i++) {\n        var e = this.elements[i];\n        if (x.equals(e)) return true;\n      }\n\n      return false;\n    },\n    each: function each(f) {\n      var elements = this.elements;\n      var set = new Set();\n\n      for (var i = 0, l = elements.length; i < l; i++) {\n        var e = elements[i];\n        f.call(this, e, set, i);\n      }\n\n      return set;\n    },\n    clone: function clone() {\n      var set = new Set();\n      this.each(function (e) {\n        set.add(e.clone());\n      });\n      return set;\n    },\n    union: function union(set) {\n      var _union = this.clone();\n\n      set.each(function (e) {\n        _union.add(e);\n      });\n      return _union;\n    },\n    difference: function difference(set) {\n      var diff = this.clone();\n      set.each(function (e) {\n        diff.remove(e);\n      });\n      return diff;\n    },\n    remove: function remove(element) {\n      for (var i = 0, l = this.elements.length; i < l; i++) {\n        var e = this.elements[i];\n\n        if (e.equals(element)) {\n          _remove(this.elements, i);\n\n          return true;\n        }\n      }\n\n      return false;\n    },\n    intersection: function intersection(set) {\n      var _intersection = new Set();\n\n      var A = this;\n      set.each(function (e) {\n        if (A.contains(e)) {\n          _intersection.add(e);\n        }\n\n        ;\n      });\n      return _intersection;\n    },\n    intersects: function intersects(set) {\n      return this.intersection(set).elements.length > 0;\n    },\n    is_subset: function is_subset(set) {\n      var elements = set.elements;\n\n      for (var i = 0, l = elements.length; i < l; i++) {\n        if (!this.contains(elements[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    toString: function toString() {\n      return '{' + this.elements.join(',') + '}';\n    }\n  }; //build ========================================================================\n\n  var Build = {\n    dependencies: {\n      _rename: {\n        'Math2.factorial': 'factorial'\n      },\n      factorial: {\n        'Math2.gamma': Math2.gamma\n      },\n      gamma_incomplete: {\n        'Math2.factorial': Math2.factorial\n      },\n      Li: {\n        'Math2.Ei': Math2.Ei,\n        'Math2.bigLog': Math2.bigLog,\n        'Frac': Frac\n      },\n      Ci: {\n        'Math2.factorial': Math2.factorial\n      },\n      Ei: {\n        'Math2.factorial': Math2.factorial\n      },\n      Si: {\n        'Math2.factorial': Math2.factorial\n      },\n      Shi: {\n        'Math2.factorial': Math2.factorial\n      },\n      Chi: {\n        'isInt': isInt,\n        'nround': nround,\n        'Math2.num_integrate': Math2.num_integrate\n      },\n      factor: {\n        'Math2.ifactor': Math2.ifactor,\n        'Symbol': Symbol\n      },\n      num_integrate: {\n        'Math2.simpson': Math2.simpson,\n        'nround': nround\n      },\n      fib: {\n        'even': even\n      }\n    },\n\n    /* Some functions need to be made numeric safe. Build checks if there's a \r\n     * reformat option and calls that instead when compiling the function string.\r\n     */\n    reformat: {\n      //this simply extends the build function\n      diff: function diff(symbol, deps) {\n        var f = 'var f = ' + Build.build(symbol.args[0].toString()) + ';';\n        deps[1] += 'var diff = ' + Math2.diff.toString() + ';';\n        deps[1] += f;\n        return ['diff(f)(' + symbol.args[1].toString() + ')', deps];\n      }\n    },\n    getProperName: function getProperName(f) {\n      var map = {\n        continued_fraction: 'continuedFraction'\n      };\n      return map[f] || f;\n    },\n    //assumes that dependences are at max 2 levels\n    compileDependencies: function compileDependencies(f, deps) {\n      //grab the predefined dependiences\n      var dependencies = Build.dependencies[f]; //the dependency string\n\n      var dep_string = deps && deps[1] ? deps[1] : ''; //the functions to be replaced\n\n      var replacements = deps && deps[0] ? deps[0] : {}; //loop through them and add them to the list\n\n      for (var x in dependencies) {\n        if (typeof dependencies[x] === 'object') continue; //skip object\n\n        var components = x.split('.'); //Math.f becomes f\n        //if the function isn't part of an object then reference the function itself\n\n        dep_string += 'var ' + (components.length > 1 ? components[1] : components[0]) + '=' + dependencies[x] + ';';\n        replacements[x] = components.pop();\n      }\n\n      return [replacements, dep_string];\n    },\n    getArgsDeps: function getArgsDeps(symbol, dependencies) {\n      var args = symbol.args;\n\n      for (var i = 0; i < args.length; i++) {\n        symbol.args[i].each(function (x) {\n          if (x.group === FN) dependencies = Build.compileDependencies(x.fname, dependencies);\n        });\n      }\n\n      return dependencies;\n    },\n    build: function build(symbol, arg_array) {\n      symbol = block('PARSE2NUMBER', function () {\n        return _.parse(symbol);\n      }, true);\n\n      var args = _variables(symbol);\n\n      var supplements = [];\n      var dependencies = [];\n\n      var ftext = function ftext(symbol, xports) {\n        xports = xports || [];\n        var c = [],\n            group = symbol.group,\n            prefix = '';\n\n        var ftext_complex = function ftext_complex(group) {\n          var d = group === CB ? '*' : '+',\n              cc = [];\n\n          for (var x in symbol.symbols) {\n            var sym = symbol.symbols[x],\n                ft = ftext(sym, xports)[0]; //wrap it in brackets if it's group PL or CP\n\n            if (sym.isComposite()) ft = inBrackets(ft);\n            cc.push(ft);\n          }\n\n          var retval = cc.join(d);\n          retval = retval && !symbol.multiplier.equals(1) ? inBrackets(retval) : retval;\n          return retval;\n        },\n            ftext_function = function ftext_function(bn) {\n          var retval;\n          if (bn in Math) retval = 'Math.' + bn;else {\n            bn = Build.getProperName(bn);\n\n            if (supplements.indexOf(bn) === -1) {\n              //make sure you're not adding the function twice\n              //Math2 functions aren't part of the standard javascript\n              //Math library and must be exported.\n              xports.push('var ' + bn + ' = ' + Math2[bn].toString() + '; ');\n              supplements.push(bn);\n            }\n\n            retval = bn;\n          }\n          retval = retval + inBrackets(symbol.args.map(function (x) {\n            return ftext(x, xports)[0];\n          }).join(','));\n          return retval;\n        }; //the multiplier\n\n\n        if (group === N) c.push(symbol.multiplier.toDecimal());else if (symbol.multiplier.equals(-1)) prefix = '-';else if (!symbol.multiplier.equals(1)) c.push(symbol.multiplier.toDecimal()); //the value\n\n        var value;\n        if (group === S || group === P) value = symbol.value;else if (group === FN) {\n          dependencies = Build.compileDependencies(symbol.fname, dependencies);\n          dependencies = Build.getArgsDeps(symbol, dependencies);\n\n          if (Build.reformat[symbol.fname]) {\n            var components = Build.reformat[symbol.fname](symbol, dependencies);\n            dependencies = components[1];\n            value = components[0];\n          } else {\n            value = ftext_function(symbol.fname);\n          }\n        } else if (group === EX) {\n          var pg = symbol.previousGroup;\n          if (pg === N || pg === S) value = symbol.value;else if (pg === FN) {\n            value = ftext_function(symbol.fname);\n            dependencies = Build.compileDependencies(symbol.fname, dependencies);\n            dependencies = Build.getArgsDeps(symbol, dependencies);\n          } else value = ftext_complex(symbol.previousGroup);\n        } else {\n          value = ftext_complex(symbol.group);\n        }\n\n        if (symbol.group !== N && !symbol.power.equals(1)) {\n          var pow = ftext(_.parse(symbol.power));\n          xports.push(pow[1]);\n          value = 'Math.pow' + inBrackets(value + ',' + pow[0]);\n        }\n\n        if (value) c.push(prefix + value);\n        return [c.join('*'), xports.join('').replace(/\\n+\\s+/g, ' ')];\n      };\n\n      if (arg_array) {\n        for (var i = 0; i < args.length; i++) {\n          var arg = args[i];\n          if (arg_array.indexOf(arg) === -1) err(arg + ' not found in argument array');\n        }\n\n        args = arg_array;\n      }\n\n      var f_array = ftext(symbol); //make all the substitutions;\n\n      for (var x in dependencies[0]) {\n        var alias = dependencies[0][x];\n        f_array[1] = f_array[1].replace(x, alias);\n        dependencies[1] = dependencies[1].replace(x, alias);\n      }\n\n      var f = new Function(args, (dependencies[1] || '') + f_array[1] + ' return ' + f_array[0] + ';');\n      return f;\n    }\n  }; //finalize =====================================================================\n\n  /* FINALIZE */\n\n  (function () {\n    reserveNames(_.CONSTANTS);\n    reserveNames(_.functions);\n\n    _.initConstants(); //bug fix for error but needs to be revisited\n\n\n    if (!_.error) _.error = err; //Store the log and log10 functions\n\n    Settings.LOG_FNS = {\n      log: _.functions['log'],\n      log10: _.functions['log10']\n    };\n  })();\n  /* END FINALIZE */\n  //Core =========================================================================\n\n\n  var Utils = {\n    allSame: allSame,\n    allNumeric: allNumeric,\n    arguments2Array: arguments2Array,\n    arrayAddSlices: arrayAddSlices,\n    arrayClone: arrayClone,\n    arrayMax: arrayMax,\n    arrayMin: arrayMin,\n    arrayUnique: arrayUnique,\n    arraySum: arraySum,\n    block: block,\n    build: Build.build,\n    clearU: clearU,\n    comboSort: comboSort,\n    compare: compare,\n    convertToVector: convertToVector,\n    customError: customError,\n    customType: customType,\n    decompose_fn: decompose_fn,\n    each: each,\n    evaluate: evaluate,\n    even: even,\n    evenFraction: evenFraction,\n    fillHoles: fillHoles,\n    firstObject: firstObject,\n    format: format,\n    generatePrimes: generatePrimes,\n    getCoeffs: getCoeffs,\n    getU: getU,\n    importFunctions: importFunctions,\n    inBrackets: inBrackets,\n    isArray: isArray,\n    isExpression: isExpression,\n    isFraction: _isFraction,\n    isInt: isInt,\n    isMatrix: isMatrix,\n    isNegative: isNegative,\n    isNumericSymbol: isNumericSymbol,\n    isPrime: isPrime,\n    isReserved: isReserved,\n    isSymbol: isSymbol,\n    isVariableSymbol: isVariableSymbol,\n    isVector: isVector,\n    keys: keys,\n    nroots: nroots,\n    remove: _remove,\n    reserveNames: reserveNames,\n    range: range,\n    round: nround,\n    sameSign: sameSign,\n    scientificToDecimal: scientificToDecimal,\n    separate: separate,\n    stringReplace: stringReplace,\n    text: _text,\n    validateName: validateName,\n    variables: _variables,\n    warn: warn\n  }; //This contains all the parts of nerdamer and enables nerdamer's internal functions\n  //to be used.\n\n  var C = {\n    groups: Groups,\n    Symbol: Symbol,\n    Expression: Expression,\n    Frac: Frac,\n    Vector: Vector,\n    Matrix: Matrix,\n    Parser: Parser,\n    Fraction: Fraction,\n    Math2: Math2,\n    LaTeX: LaTeX,\n    Utils: Utils,\n    PARSER: _,\n    PARENTHESIS: PARENTHESIS,\n    Settings: Settings,\n    err: err,\n    bigInt: bigInt,\n    bigDec: bigDec,\n    exceptions: exceptions\n  }; //libExports ===================================================================  \n\n  /**\r\n   * \r\n   * @param {String} expression the expression to be evaluated\r\n   * @param {Object} subs the object containing the variable values\r\n   * @param {Integer} location a specific location in the equation list to \r\n   * insert the evaluated expression\r\n   * @param {String} option additional options\r\n   * @returns {Expression} \r\n   */\n\n  var libExports = function libExports(expression, subs, option, location) {\n    //is the user declaring a function?\n    var fndec = /^([a-z_][a-z\\d\\_]*)\\(([a-z_,\\s]*)\\):=(.+)$/gi.exec(expression);\n    if (fndec) return nerdamer.setFunction(fndec[1], fndec[2].split(','), fndec[3]); //var variable, fn, args;\n    //convert any expression passed in to a string\n\n    if (expression instanceof Expression) expression = expression.toString();\n    var multi_options = isArray(option),\n        expand = 'expand',\n        numer = multi_options ? option.indexOf('numer') !== -1 : option === 'numer';\n\n    if (multi_options ? option.indexOf(expand) !== -1 : option === expand) {\n      expression = format('{0}({1})', expand, expression);\n    }\n\n    var e = block('PARSE2NUMBER', function () {\n      return _.parse(expression, subs);\n    }, numer || Settings.PARSE2NUMBER);\n\n    if (location) {\n      EXPRESSIONS[location - 1] = e;\n    } else {\n      EXPRESSIONS.push(e);\n    }\n    /*\r\n     if(variable) libExports.setVar(variable, e);\r\n     if(fn) libExports.setFunction(fn, args, e);\r\n     */\n\n\n    return new Expression(e);\n  };\n  /**\r\n   * Converts expression into rpn form\r\n   * @param {String} expression\r\n   * @returns {Token[]}\r\n   */\n\n\n  libExports.rpn = function (expression) {\n    return _.tokenize(_.toRPN(expression));\n  };\n  /**\r\n   * Generates LaTeX from expression string\r\n   * @param {String} e\r\n   * @param {object} opt\r\n   * @returns {String}\r\n   */\n\n\n  libExports.convertToLaTeX = function (e, opt) {\n    return _.toTeX(e, opt);\n  };\n  /**\r\n   * Converts latex to text - Very very very basic at the moment\r\n   * @param {String} e\r\n   * @returns {String}\r\n   */\n\n\n  libExports.convertFromLaTeX = function (e) {\n    var txt = LaTeX.parse(_.tokenize(e));\n    return new Expression(_.parse(txt));\n  };\n  /**\r\n   * Get the version of nerdamer or a loaded add-on\r\n   * @param {String} add_on - The add-on being checked\r\n   * @returns {String} returns the version of nerdamer\r\n   */\n\n\n  libExports.version = function (add_on) {\n    if (add_on) {\n      try {\n        return C[add_on].version;\n      } catch (e) {\n        return \"No module named \" + add_on + \" found!\";\n      }\n    }\n\n    return version;\n  };\n  /**\r\n   * Get nerdamer generated warnings\r\n   * @returns {String[]}\r\n   */\n\n\n  libExports.getWarnings = function () {\n    return WARNINGS;\n  };\n  /**\r\n   * \r\n   * @param {String} constant The name of the constant to be set\r\n   * @param {mixed} value The value of the constant \r\n   * @returns {Object} Returns the nerdamer object\r\n   */\n\n\n  libExports.setConstant = function (constant, value) {\n    validateName(constant);\n\n    if (!isReserved(constant)) {\n      //fix for issue #127\n      if (value === 'delete' || value === '') {\n        delete _.CONSTANTS[constant];\n      } else {\n        if (isNaN(value)) throw new NerdamerTypeError('Constant must be a number!');\n        _.CONSTANTS[constant] = value;\n      }\n    }\n\n    return this;\n  };\n  /**\r\n   * Returns the value of a previously set constant\r\n   * @param {type} constant\r\n   * @returns {String}\r\n   */\n\n\n  libExports.getConstant = function (constant) {\n    return String(_.constant[constant]);\n  };\n  /**\r\n   * \r\n   * @param {String} name The name of the function\r\n   * @param {Array} params_array A list containing the parameter name of the functions\r\n   * @param {String} body The body of the function\r\n   * @returns {Boolean} returns true if succeeded and falls on fail\r\n   * @example nerdamer.setFunction('f',['x'], 'x^2+2');\r\n   */\n\n\n  libExports.setFunction = setFunction;\n  /**\r\n   * \r\n   * @returns {C} Exports the nerdamer core functions and objects\r\n   */\n\n  libExports.getCore = function () {\n    return C;\n  };\n\n  libExports.getExpression = libExports.getEquation = Expression.getExpression;\n  /**\r\n   * \r\n   * @param {Boolean} asArray The returned names are returned as an array if this is set to true;\r\n   * @returns {String|Array}\r\n   */\n\n  libExports.reserved = function (asArray) {\n    if (asArray) {\n      return RESERVED;\n    }\n\n    return RESERVED.join(', ');\n  };\n  /**\r\n   * \r\n   * @param {Integer} equation_number the number of the equation to clear. \r\n   * If 'all' is supplied then all equations are cleared\r\n   * @param {Boolean} keep_EXPRESSIONS_fixed use true if you don't want to keep EXPRESSIONS length fixed\r\n   * @returns {Object} Returns the nerdamer object\r\n   */\n\n\n  libExports.clear = function (equation_number, keep_EXPRESSIONS_fixed) {\n    if (equation_number === 'all') {\n      EXPRESSIONS = [];\n    } else if (equation_number === 'last') {\n      EXPRESSIONS.pop();\n    } else if (equation_number === 'first') {\n      EXPRESSIONS.shift();\n    } else {\n      var index = !equation_number ? EXPRESSIONS.length : equation_number - 1;\n      keep_EXPRESSIONS_fixed === true ? EXPRESSIONS[index] = undefined : _remove(EXPRESSIONS, index);\n    }\n\n    return this;\n  };\n  /**\r\n   * Alias for nerdamer.clear('all')\r\n   */\n\n\n  libExports.flush = function () {\n    this.clear('all');\n    return this;\n  };\n  /**\r\n   * \r\n   * @param {Boolean} asObject\r\n   * @param {Boolean} asLaTeX\r\n   * @param {String|String[]} option \r\n   * @returns {Array}\r\n   */\n\n\n  libExports.expressions = function (asObject, asLaTeX, option) {\n    var result = asObject ? {} : [];\n\n    for (var i = 0; i < EXPRESSIONS.length; i++) {\n      var eq = asLaTeX ? LaTeX.latex(EXPRESSIONS[i], option) : _text(EXPRESSIONS[i], option);\n      asObject ? result[i + 1] = eq : result.push(eq);\n    }\n\n    return result;\n  }; //the method for registering modules\n\n\n  libExports.register = function (obj) {\n    var core = this.getCore();\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n        if (obj) this.register(obj[i]);\n      }\n    } else if (obj && Settings.exclude.indexOf(obj.name) === -1) {\n      //make sure all the dependencies are available\n      if (obj.dependencies) {\n        for (var i = 0; i < obj.dependencies.length; i++) {\n          if (!core[obj.dependencies[i]]) throw new Error(format('{0} requires {1} to be loaded!', obj.name, obj.dependencies[i]));\n        }\n      } //if no parent object is provided then the function does not have an address and cannot be called directly\n\n\n      var parent_obj = obj.parent,\n          fn = obj.build.call(core); //call constructor to get function\n\n      if (parent_obj) {\n        if (!core[parent_obj]) core[obj.parent] = {};\n        var ref_obj = parent_obj === 'nerdamer' ? this : core[parent_obj]; //attach the function to the core\n\n        ref_obj[obj.name] = fn;\n      }\n\n      if (obj.visible) _.functions[obj.name] = [fn, obj.numargs]; //make the function available\n    }\n  };\n  /**\r\n   * @param {String} name variable name\r\n   * @returns {boolean} validates if the profided string is a valid variable name\r\n   */\n\n\n  libExports.validateName = validateName;\n  /**\r\n   * @param {String} varname variable name\r\n   * @returns {boolean} validates if the profided string is a valid variable name\r\n   */\n\n  libExports.validVarName = function (varname) {\n    try {\n      validateName(varname);\n      return RESERVED.indexOf(varname) === -1;\n    } catch (e) {\n      return false;\n    }\n  };\n  /**\r\n   * \r\n   * @returns {Array} Array of functions currently supported by nerdamer\r\n   */\n\n\n  libExports.supported = function () {\n    return keys(_.functions);\n  };\n  /**\r\n   * \r\n   * @returns {Number} The number equations/expressions currently loaded\r\n   */\n\n\n  libExports.numEquations = libExports.numExpressions = function () {\n    return EXPRESSIONS.length;\n  };\n  /* END EXPORTS */\n\n  /**\r\n   * \r\n   * @param {String} v variable to be set\r\n   * @param {String} val value of variable. This can be a variable expression or number\r\n   * @returns {Object} Returns the nerdamer object\r\n   */\n\n\n  libExports.setVar = function (v, val) {\n    validateName(v); //check if it's not already a constant\n\n    if (v in _.CONSTANTS) err('Cannot set value for constant ' + v);\n    if (val === 'delete' || val === '') delete VARS[v];else {\n      VARS[v] = isSymbol(val) ? val : _.parse(val);\n    }\n    return this;\n  };\n  /**\r\n   * Returns the value of a set variable\r\n   * @param {type} v\r\n   * @returns {varies}\r\n   */\n\n\n  libExports.getVar = function (v) {\n    return VARS[v];\n  };\n  /**\r\n   * Clear the variables from the VARS object\r\n   * @returns {Object} Returns the nerdamer object\r\n   */\n\n\n  libExports.clearVars = function () {\n    VARS = {};\n    return this;\n  };\n  /**\r\n   * \r\n   * @param {Function} loader\r\n   * @returns {nerdamer}\r\n   */\n\n\n  libExports.load = function (loader) {\n    loader.call(this);\n    return this;\n  };\n  /**\r\n   * @param {String} output - output format. Can be 'object' (just returns the VARS object), 'text' or 'latex'. Default: 'text'\r\n   * @param {String|String[]} option\r\n   * @returns {Object} Returns an object with the variables\r\n   */\n\n\n  libExports.getVars = function (output, option) {\n    output = output || 'text';\n    var variables = {};\n    if (output === 'object') variables = VARS;else {\n      for (var v in VARS) {\n        if (output === 'latex') {\n          variables[v] = VARS[v].latex(option);\n        } else if (output === 'text') {\n          variables[v] = VARS[v].text(option);\n        }\n      }\n    }\n    return variables;\n  };\n  /**\r\n   * Set the value of a setting\r\n   * @param {String} setting The setting to be changed\r\n   * @param {boolean} value \r\n   */\n\n\n  libExports.set = function (setting, value) {\n    //current options:\n    //PARSE2NUMBER, suppress_errors\n    if (typeof setting === 'object') for (var x in setting) {\n      libExports.set(x, setting[x]);\n    }\n    var disallowed = ['SAFE'];\n    if (disallowed.indexOf(setting) !== -1) err('Cannot modify setting: ' + setting);\n    if (setting === 'PRECISION') bigDec.set({\n      precision: value\n    });else if (setting === 'USE_LN' && value === true) {\n      //set log as LN\n      Settings.LOG = 'LN'; //set log10 as log\n\n      Settings.LOG10 = 'log'; //point the functions in the right direction\n\n      _.functions['log'] = Settings.LOG_FNS.log10; //log is now log10\n      //the log10 function must be explicitly set\n\n      _.functions['log'][0] = function (x) {\n        if (x.isConstant()) return new Symbol(Math.log10(x));\n        return _.symfunction(Settings.LOG10, [x]);\n      };\n\n      _.functions['LN'] = Settings.LOG_FNS.log; //LN is now log\n      //remove log10\n\n      delete _.functions['log10'];\n    } else Settings[setting] = value;\n  };\n  /**\r\n   * Get the value of a setting\r\n   * @param {type} setting\r\n   * @returns {undefined}\r\n   */\n\n\n  libExports.get = function (setting) {\n    return Settings[setting];\n  };\n  /**\r\n   * This functions makes internal functions available externally\r\n   * @param {bool} override Override the functions when calling api if it exists \r\n   */\n\n\n  libExports.api = function (override) {\n    //Map internal functions to external ones\n    var linker = function linker(fname) {\n      return function () {\n        var args = [].slice.call(arguments);\n\n        for (var i = 0; i < args.length; i++) {\n          args[i] = _.parse(args[i]);\n        }\n\n        return new Expression(block('PARSE2NUMBER', function () {\n          return _.callfunction(fname, args);\n        }));\n      };\n    }; //perform the mapping\n\n\n    for (var x in _.functions) {\n      if (!(x in libExports) || override) libExports[x] = linker(x);\n    }\n  };\n\n  libExports.replaceFunction = function (name, fn, num_args) {\n    var existing = _.functions[name];\n    var new_num_args = typeof num_args === 'undefined' ? existing[1] : num_args;\n    _.functions[name] = [fn.call(undefined, existing[0], C), new_num_args];\n  };\n\n  libExports.setOperator = function (operator, shift) {\n    _.setOperator(operator, shift);\n  };\n\n  libExports.getOperator = function (operator) {\n    return _.getOperator(operator);\n  };\n\n  libExports.aliasOperator = function (operator, withOperator) {\n    _.aliasOperator(operator, withOperator);\n  };\n\n  libExports.tree = function (expression) {\n    return _.tree(_.toRPN(_.tokenize(expression)));\n  };\n\n  libExports.htmlTree = function (expression, indent) {\n    var tree = this.tree(expression);\n    return '<div class=\"tree\">\\n' + '    <ul>\\n' + '        <li>\\n' + tree.toHTML(3, indent) + '\\n' + '        </li>\\n' + '    </ul>\\n' + '</div>';\n  };\n\n  libExports.addPeeker = function (name, f) {\n    if (_.peekers[name]) _.peekers[name].push(f);\n  };\n\n  libExports.removePeeker = function (name, f) {\n    _remove(_.peekers[name], f);\n  };\n\n  libExports.parse = function (e) {\n    return String(e).split(';').map(function (x) {\n      return _.parse(x);\n    });\n  };\n\n  libExports.api();\n  return libExports; //Done\n  //imports ======================================================================\n}({\n  //https://github.com/peterolson/BigInteger.js\n  bigInt: function () {\n    var bigInt = function (undefined) {\n      \"use strict\";\n\n      var BASE = 1e7,\n          LOG_BASE = 7,\n          MAX_INT = 9007199254740992,\n          MAX_INT_ARR = smallToArray(MAX_INT),\n          LOG_MAX_INT = Math.log(MAX_INT);\n\n      function Integer(v, radix) {\n        if (typeof v === \"undefined\") return Integer[0];\n        if (typeof radix !== \"undefined\") return +radix === 10 ? parseValue(v) : parseBase(v, radix);\n        return parseValue(v);\n      }\n\n      function BigInteger(value, sign) {\n        this.value = value;\n        this.sign = sign;\n        this.isSmall = false;\n      }\n\n      BigInteger.prototype = Object.create(Integer.prototype);\n\n      function SmallInteger(value) {\n        this.value = value;\n        this.sign = value < 0;\n        this.isSmall = true;\n      }\n\n      SmallInteger.prototype = Object.create(Integer.prototype);\n\n      function isPrecise(n) {\n        return -MAX_INT < n && n < MAX_INT;\n      }\n\n      function smallToArray(n) {\n        if (n < 1e7) return [n];\n        if (n < 1e14) return [n % 1e7, Math.floor(n / 1e7)];\n        return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];\n      }\n\n      function arrayToSmall(arr) {\n        trim(arr);\n        var length = arr.length;\n\n        if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {\n          switch (length) {\n            case 0:\n              return 0;\n\n            case 1:\n              return arr[0];\n\n            case 2:\n              return arr[0] + arr[1] * BASE;\n\n            default:\n              return arr[0] + (arr[1] + arr[2] * BASE) * BASE;\n          }\n        }\n\n        return arr;\n      }\n\n      function trim(v) {\n        var i = v.length;\n\n        while (v[--i] === 0) {\n          ;\n        }\n\n        v.length = i + 1;\n      }\n\n      function createArray(length) {\n        var x = new Array(length);\n        var i = -1;\n\n        while (++i < length) {\n          x[i] = 0;\n        }\n\n        return x;\n      }\n\n      function truncate(n) {\n        if (n > 0) return Math.floor(n);\n        return Math.ceil(n);\n      }\n\n      function add(a, b) {\n        var l_a = a.length,\n            l_b = b.length,\n            r = new Array(l_a),\n            carry = 0,\n            base = BASE,\n            sum,\n            i;\n\n        for (i = 0; i < l_b; i++) {\n          sum = a[i] + b[i] + carry;\n          carry = sum >= base ? 1 : 0;\n          r[i] = sum - carry * base;\n        }\n\n        while (i < l_a) {\n          sum = a[i] + carry;\n          carry = sum === base ? 1 : 0;\n          r[i++] = sum - carry * base;\n        }\n\n        if (carry > 0) r.push(carry);\n        return r;\n      }\n\n      function addAny(a, b) {\n        if (a.length >= b.length) return add(a, b);\n        return add(b, a);\n      }\n\n      function addSmall(a, carry) {\n        var l = a.length,\n            r = new Array(l),\n            base = BASE,\n            sum,\n            i;\n\n        for (i = 0; i < l; i++) {\n          sum = a[i] - base + carry;\n          carry = Math.floor(sum / base);\n          r[i] = sum - carry * base;\n          carry += 1;\n        }\n\n        while (carry > 0) {\n          r[i++] = carry % base;\n          carry = Math.floor(carry / base);\n        }\n\n        return r;\n      }\n\n      BigInteger.prototype.add = function (v) {\n        var n = parseValue(v);\n\n        if (this.sign !== n.sign) {\n          return this.subtract(n.negate());\n        }\n\n        var a = this.value,\n            b = n.value;\n\n        if (n.isSmall) {\n          return new BigInteger(addSmall(a, Math.abs(b)), this.sign);\n        }\n\n        return new BigInteger(addAny(a, b), this.sign);\n      };\n\n      BigInteger.prototype.plus = BigInteger.prototype.add;\n\n      SmallInteger.prototype.add = function (v) {\n        var n = parseValue(v);\n        var a = this.value;\n\n        if (a < 0 !== n.sign) {\n          return this.subtract(n.negate());\n        }\n\n        var b = n.value;\n\n        if (n.isSmall) {\n          if (isPrecise(a + b)) return new SmallInteger(a + b);\n          b = smallToArray(Math.abs(b));\n        }\n\n        return new BigInteger(addSmall(b, Math.abs(a)), a < 0);\n      };\n\n      SmallInteger.prototype.plus = SmallInteger.prototype.add;\n\n      function subtract(a, b) {\n        var a_l = a.length,\n            b_l = b.length,\n            r = new Array(a_l),\n            borrow = 0,\n            base = BASE,\n            i,\n            difference;\n\n        for (i = 0; i < b_l; i++) {\n          difference = a[i] - borrow - b[i];\n\n          if (difference < 0) {\n            difference += base;\n            borrow = 1;\n          } else borrow = 0;\n\n          r[i] = difference;\n        }\n\n        for (i = b_l; i < a_l; i++) {\n          difference = a[i] - borrow;\n          if (difference < 0) difference += base;else {\n            r[i++] = difference;\n            break;\n          }\n          r[i] = difference;\n        }\n\n        for (; i < a_l; i++) {\n          r[i] = a[i];\n        }\n\n        trim(r);\n        return r;\n      }\n\n      function subtractAny(a, b, sign) {\n        var value;\n\n        if (compareAbs(a, b) >= 0) {\n          value = subtract(a, b);\n        } else {\n          value = subtract(b, a);\n          sign = !sign;\n        }\n\n        value = arrayToSmall(value);\n\n        if (typeof value === \"number\") {\n          if (sign) value = -value;\n          return new SmallInteger(value);\n        }\n\n        return new BigInteger(value, sign);\n      }\n\n      function subtractSmall(a, b, sign) {\n        var l = a.length,\n            r = new Array(l),\n            carry = -b,\n            base = BASE,\n            i,\n            difference;\n\n        for (i = 0; i < l; i++) {\n          difference = a[i] + carry;\n          carry = Math.floor(difference / base);\n          difference %= base;\n          r[i] = difference < 0 ? difference + base : difference;\n        }\n\n        r = arrayToSmall(r);\n\n        if (typeof r === \"number\") {\n          if (sign) r = -r;\n          return new SmallInteger(r);\n        }\n\n        return new BigInteger(r, sign);\n      }\n\n      BigInteger.prototype.subtract = function (v) {\n        var n = parseValue(v);\n\n        if (this.sign !== n.sign) {\n          return this.add(n.negate());\n        }\n\n        var a = this.value,\n            b = n.value;\n        if (n.isSmall) return subtractSmall(a, Math.abs(b), this.sign);\n        return subtractAny(a, b, this.sign);\n      };\n\n      BigInteger.prototype.minus = BigInteger.prototype.subtract;\n\n      SmallInteger.prototype.subtract = function (v) {\n        var n = parseValue(v);\n        var a = this.value;\n\n        if (a < 0 !== n.sign) {\n          return this.add(n.negate());\n        }\n\n        var b = n.value;\n\n        if (n.isSmall) {\n          return new SmallInteger(a - b);\n        }\n\n        return subtractSmall(b, Math.abs(a), a >= 0);\n      };\n\n      SmallInteger.prototype.minus = SmallInteger.prototype.subtract;\n\n      BigInteger.prototype.negate = function () {\n        return new BigInteger(this.value, !this.sign);\n      };\n\n      SmallInteger.prototype.negate = function () {\n        var sign = this.sign;\n        var small = new SmallInteger(-this.value);\n        small.sign = !sign;\n        return small;\n      };\n\n      BigInteger.prototype.abs = function () {\n        return new BigInteger(this.value, false);\n      };\n\n      SmallInteger.prototype.abs = function () {\n        return new SmallInteger(Math.abs(this.value));\n      };\n\n      function multiplyLong(a, b) {\n        var a_l = a.length,\n            b_l = b.length,\n            l = a_l + b_l,\n            r = createArray(l),\n            base = BASE,\n            product,\n            carry,\n            i,\n            a_i,\n            b_j;\n\n        for (i = 0; i < a_l; ++i) {\n          a_i = a[i];\n\n          for (var j = 0; j < b_l; ++j) {\n            b_j = b[j];\n            product = a_i * b_j + r[i + j];\n            carry = Math.floor(product / base);\n            r[i + j] = product - carry * base;\n            r[i + j + 1] += carry;\n          }\n        }\n\n        trim(r);\n        return r;\n      }\n\n      function multiplySmall(a, b) {\n        var l = a.length,\n            r = new Array(l),\n            base = BASE,\n            carry = 0,\n            product,\n            i;\n\n        for (i = 0; i < l; i++) {\n          product = a[i] * b + carry;\n          carry = Math.floor(product / base);\n          r[i] = product - carry * base;\n        }\n\n        while (carry > 0) {\n          r[i++] = carry % base;\n          carry = Math.floor(carry / base);\n        }\n\n        return r;\n      }\n\n      function shiftLeft(x, n) {\n        var r = [];\n\n        while (n-- > 0) {\n          r.push(0);\n        }\n\n        return r.concat(x);\n      }\n\n      function multiplyKaratsuba(x, y) {\n        var n = Math.max(x.length, y.length);\n        if (n <= 30) return multiplyLong(x, y);\n        n = Math.ceil(n / 2);\n        var b = x.slice(n),\n            a = x.slice(0, n),\n            d = y.slice(n),\n            c = y.slice(0, n);\n        var ac = multiplyKaratsuba(a, c),\n            bd = multiplyKaratsuba(b, d),\n            abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));\n        var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));\n        trim(product);\n        return product;\n      }\n\n      function useKaratsuba(l1, l2) {\n        return -.012 * l1 - .012 * l2 + 15e-6 * l1 * l2 > 0;\n      }\n\n      BigInteger.prototype.multiply = function (v) {\n        var n = parseValue(v),\n            a = this.value,\n            b = n.value,\n            sign = this.sign !== n.sign,\n            abs;\n\n        if (n.isSmall) {\n          if (b === 0) return Integer[0];\n          if (b === 1) return this;\n          if (b === -1) return this.negate();\n          abs = Math.abs(b);\n\n          if (abs < BASE) {\n            return new BigInteger(multiplySmall(a, abs), sign);\n          }\n\n          b = smallToArray(abs);\n        }\n\n        if (useKaratsuba(a.length, b.length)) return new BigInteger(multiplyKaratsuba(a, b), sign);\n        return new BigInteger(multiplyLong(a, b), sign);\n      };\n\n      BigInteger.prototype.times = BigInteger.prototype.multiply;\n\n      function multiplySmallAndArray(a, b, sign) {\n        if (a < BASE) {\n          return new BigInteger(multiplySmall(b, a), sign);\n        }\n\n        return new BigInteger(multiplyLong(b, smallToArray(a)), sign);\n      }\n\n      SmallInteger.prototype._multiplyBySmall = function (a) {\n        if (isPrecise(a.value * this.value)) {\n          return new SmallInteger(a.value * this.value);\n        }\n\n        return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);\n      };\n\n      BigInteger.prototype._multiplyBySmall = function (a) {\n        if (a.value === 0) return Integer[0];\n        if (a.value === 1) return this;\n        if (a.value === -1) return this.negate();\n        return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);\n      };\n\n      SmallInteger.prototype.multiply = function (v) {\n        return parseValue(v)._multiplyBySmall(this);\n      };\n\n      SmallInteger.prototype.times = SmallInteger.prototype.multiply;\n\n      function square(a) {\n        var l = a.length,\n            r = createArray(l + l),\n            base = BASE,\n            product,\n            carry,\n            i,\n            a_i,\n            a_j;\n\n        for (i = 0; i < l; i++) {\n          a_i = a[i];\n          carry = 0 - a_i * a_i;\n\n          for (var j = i; j < l; j++) {\n            a_j = a[j];\n            product = 2 * (a_i * a_j) + r[i + j] + carry;\n            carry = Math.floor(product / base);\n            r[i + j] = product - carry * base;\n          }\n\n          r[i + l] = carry;\n        }\n\n        trim(r);\n        return r;\n      }\n\n      BigInteger.prototype.square = function () {\n        return new BigInteger(square(this.value), false);\n      };\n\n      SmallInteger.prototype.square = function () {\n        var value = this.value * this.value;\n        if (isPrecise(value)) return new SmallInteger(value);\n        return new BigInteger(square(smallToArray(Math.abs(this.value))), false);\n      };\n\n      function divMod1(a, b) {\n        var a_l = a.length,\n            b_l = b.length,\n            base = BASE,\n            result = createArray(b.length),\n            divisorMostSignificantDigit = b[b_l - 1],\n            lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),\n            remainder = multiplySmall(a, lambda),\n            divisor = multiplySmall(b, lambda),\n            quotientDigit,\n            shift,\n            carry,\n            borrow,\n            i,\n            l,\n            q;\n        if (remainder.length <= a_l) remainder.push(0);\n        divisor.push(0);\n        divisorMostSignificantDigit = divisor[b_l - 1];\n\n        for (shift = a_l - b_l; shift >= 0; shift--) {\n          quotientDigit = base - 1;\n\n          if (remainder[shift + b_l] !== divisorMostSignificantDigit) {\n            quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);\n          }\n\n          carry = 0;\n          borrow = 0;\n          l = divisor.length;\n\n          for (i = 0; i < l; i++) {\n            carry += quotientDigit * divisor[i];\n            q = Math.floor(carry / base);\n            borrow += remainder[shift + i] - (carry - q * base);\n            carry = q;\n\n            if (borrow < 0) {\n              remainder[shift + i] = borrow + base;\n              borrow = -1;\n            } else {\n              remainder[shift + i] = borrow;\n              borrow = 0;\n            }\n          }\n\n          while (borrow !== 0) {\n            quotientDigit -= 1;\n            carry = 0;\n\n            for (i = 0; i < l; i++) {\n              carry += remainder[shift + i] - base + divisor[i];\n\n              if (carry < 0) {\n                remainder[shift + i] = carry + base;\n                carry = 0;\n              } else {\n                remainder[shift + i] = carry;\n                carry = 1;\n              }\n            }\n\n            borrow += carry;\n          }\n\n          result[shift] = quotientDigit;\n        }\n\n        remainder = divModSmall(remainder, lambda)[0];\n        return [arrayToSmall(result), arrayToSmall(remainder)];\n      }\n\n      function divMod2(a, b) {\n        var a_l = a.length,\n            b_l = b.length,\n            result = [],\n            part = [],\n            base = BASE,\n            guess,\n            xlen,\n            highx,\n            highy,\n            check;\n\n        while (a_l) {\n          part.unshift(a[--a_l]);\n          trim(part);\n\n          if (compareAbs(part, b) < 0) {\n            result.push(0);\n            continue;\n          }\n\n          xlen = part.length;\n          highx = part[xlen - 1] * base + part[xlen - 2];\n          highy = b[b_l - 1] * base + b[b_l - 2];\n\n          if (xlen > b_l) {\n            highx = (highx + 1) * base;\n          }\n\n          guess = Math.ceil(highx / highy);\n\n          do {\n            check = multiplySmall(b, guess);\n            if (compareAbs(check, part) <= 0) break;\n            guess--;\n          } while (guess);\n\n          result.push(guess);\n          part = subtract(part, check);\n        }\n\n        result.reverse();\n        return [arrayToSmall(result), arrayToSmall(part)];\n      }\n\n      function divModSmall(value, lambda) {\n        var length = value.length,\n            quotient = createArray(length),\n            base = BASE,\n            i,\n            q,\n            remainder,\n            divisor;\n        remainder = 0;\n\n        for (i = length - 1; i >= 0; --i) {\n          divisor = remainder * base + value[i];\n          q = truncate(divisor / lambda);\n          remainder = divisor - q * lambda;\n          quotient[i] = q | 0;\n        }\n\n        return [quotient, remainder | 0];\n      }\n\n      function divModAny(self, v) {\n        var value,\n            n = parseValue(v);\n        var a = self.value,\n            b = n.value;\n        var quotient;\n        if (b === 0) throw new Error(\"Cannot divide by zero\");\n\n        if (self.isSmall) {\n          if (n.isSmall) {\n            return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];\n          }\n\n          return [Integer[0], self];\n        }\n\n        if (n.isSmall) {\n          if (b === 1) return [self, Integer[0]];\n          if (b == -1) return [self.negate(), Integer[0]];\n          var abs = Math.abs(b);\n\n          if (abs < BASE) {\n            value = divModSmall(a, abs);\n            quotient = arrayToSmall(value[0]);\n            var remainder = value[1];\n            if (self.sign) remainder = -remainder;\n\n            if (typeof quotient === \"number\") {\n              if (self.sign !== n.sign) quotient = -quotient;\n              return [new SmallInteger(quotient), new SmallInteger(remainder)];\n            }\n\n            return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];\n          }\n\n          b = smallToArray(abs);\n        }\n\n        var comparison = compareAbs(a, b);\n        if (comparison === -1) return [Integer[0], self];\n        if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];\n        if (a.length + b.length <= 200) value = divMod1(a, b);else value = divMod2(a, b);\n        quotient = value[0];\n        var qSign = self.sign !== n.sign,\n            mod = value[1],\n            mSign = self.sign;\n\n        if (typeof quotient === \"number\") {\n          if (qSign) quotient = -quotient;\n          quotient = new SmallInteger(quotient);\n        } else quotient = new BigInteger(quotient, qSign);\n\n        if (typeof mod === \"number\") {\n          if (mSign) mod = -mod;\n          mod = new SmallInteger(mod);\n        } else mod = new BigInteger(mod, mSign);\n\n        return [quotient, mod];\n      }\n\n      BigInteger.prototype.divmod = function (v) {\n        var result = divModAny(this, v);\n        return {\n          quotient: result[0],\n          remainder: result[1]\n        };\n      };\n\n      SmallInteger.prototype.divmod = BigInteger.prototype.divmod;\n\n      BigInteger.prototype.divide = function (v) {\n        return divModAny(this, v)[0];\n      };\n\n      SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;\n\n      BigInteger.prototype.mod = function (v) {\n        return divModAny(this, v)[1];\n      };\n\n      SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;\n\n      BigInteger.prototype.pow = function (v) {\n        var n = parseValue(v),\n            a = this.value,\n            b = n.value,\n            value,\n            x,\n            y;\n        if (b === 0) return Integer[1];\n        if (a === 0) return Integer[0];\n        if (a === 1) return Integer[1];\n        if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];\n\n        if (n.sign) {\n          return Integer[0];\n        }\n\n        if (!n.isSmall) throw new Error(\"The exponent \" + n.toString() + \" is too large.\");\n\n        if (this.isSmall) {\n          if (isPrecise(value = Math.pow(a, b))) return new SmallInteger(truncate(value));\n        }\n\n        x = this;\n        y = Integer[1];\n\n        while (true) {\n          if (b & 1 === 1) {\n            y = y.times(x);\n            --b;\n          }\n\n          if (b === 0) break;\n          b /= 2;\n          x = x.square();\n        }\n\n        return y;\n      };\n\n      SmallInteger.prototype.pow = BigInteger.prototype.pow;\n\n      BigInteger.prototype.modPow = function (exp, mod) {\n        exp = parseValue(exp);\n        mod = parseValue(mod);\n        if (mod.isZero()) throw new Error(\"Cannot take modPow with modulus 0\");\n        var r = Integer[1],\n            base = this.mod(mod);\n\n        while (exp.isPositive()) {\n          if (base.isZero()) return Integer[0];\n          if (exp.isOdd()) r = r.multiply(base).mod(mod);\n          exp = exp.divide(2);\n          base = base.square().mod(mod);\n        }\n\n        return r;\n      };\n\n      SmallInteger.prototype.modPow = BigInteger.prototype.modPow;\n\n      function compareAbs(a, b) {\n        if (a.length !== b.length) {\n          return a.length > b.length ? 1 : -1;\n        }\n\n        for (var i = a.length - 1; i >= 0; i--) {\n          if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;\n        }\n\n        return 0;\n      }\n\n      BigInteger.prototype.compareAbs = function (v) {\n        var n = parseValue(v),\n            a = this.value,\n            b = n.value;\n        if (n.isSmall) return 1;\n        return compareAbs(a, b);\n      };\n\n      SmallInteger.prototype.compareAbs = function (v) {\n        var n = parseValue(v),\n            a = Math.abs(this.value),\n            b = n.value;\n\n        if (n.isSmall) {\n          b = Math.abs(b);\n          return a === b ? 0 : a > b ? 1 : -1;\n        }\n\n        return -1;\n      };\n\n      BigInteger.prototype.compare = function (v) {\n        if (v === Infinity) {\n          return -1;\n        }\n\n        if (v === -Infinity) {\n          return 1;\n        }\n\n        var n = parseValue(v),\n            a = this.value,\n            b = n.value;\n\n        if (this.sign !== n.sign) {\n          return n.sign ? 1 : -1;\n        }\n\n        if (n.isSmall) {\n          return this.sign ? -1 : 1;\n        }\n\n        return compareAbs(a, b) * (this.sign ? -1 : 1);\n      };\n\n      BigInteger.prototype.compareTo = BigInteger.prototype.compare;\n\n      SmallInteger.prototype.compare = function (v) {\n        if (v === Infinity) {\n          return -1;\n        }\n\n        if (v === -Infinity) {\n          return 1;\n        }\n\n        var n = parseValue(v),\n            a = this.value,\n            b = n.value;\n\n        if (n.isSmall) {\n          return a == b ? 0 : a > b ? 1 : -1;\n        }\n\n        if (a < 0 !== n.sign) {\n          return a < 0 ? -1 : 1;\n        }\n\n        return a < 0 ? 1 : -1;\n      };\n\n      SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;\n\n      BigInteger.prototype.equals = function (v) {\n        return this.compare(v) === 0;\n      };\n\n      SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;\n\n      BigInteger.prototype.notEquals = function (v) {\n        return this.compare(v) !== 0;\n      };\n\n      SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;\n\n      BigInteger.prototype.greater = function (v) {\n        return this.compare(v) > 0;\n      };\n\n      SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;\n\n      BigInteger.prototype.lesser = function (v) {\n        return this.compare(v) < 0;\n      };\n\n      SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;\n\n      BigInteger.prototype.greaterOrEquals = function (v) {\n        return this.compare(v) >= 0;\n      };\n\n      SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;\n\n      BigInteger.prototype.lesserOrEquals = function (v) {\n        return this.compare(v) <= 0;\n      };\n\n      SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;\n\n      BigInteger.prototype.isEven = function () {\n        return (this.value[0] & 1) === 0;\n      };\n\n      SmallInteger.prototype.isEven = function () {\n        return (this.value & 1) === 0;\n      };\n\n      BigInteger.prototype.isOdd = function () {\n        return (this.value[0] & 1) === 1;\n      };\n\n      SmallInteger.prototype.isOdd = function () {\n        return (this.value & 1) === 1;\n      };\n\n      BigInteger.prototype.isPositive = function () {\n        return !this.sign;\n      };\n\n      SmallInteger.prototype.isPositive = function () {\n        return this.value > 0;\n      };\n\n      BigInteger.prototype.isNegative = function () {\n        return this.sign;\n      };\n\n      SmallInteger.prototype.isNegative = function () {\n        return this.value < 0;\n      };\n\n      BigInteger.prototype.isUnit = function () {\n        return false;\n      };\n\n      SmallInteger.prototype.isUnit = function () {\n        return Math.abs(this.value) === 1;\n      };\n\n      BigInteger.prototype.isZero = function () {\n        return false;\n      };\n\n      SmallInteger.prototype.isZero = function () {\n        return this.value === 0;\n      };\n\n      BigInteger.prototype.isDivisibleBy = function (v) {\n        var n = parseValue(v);\n        var value = n.value;\n        if (value === 0) return false;\n        if (value === 1) return true;\n        if (value === 2) return this.isEven();\n        return this.mod(n).equals(Integer[0]);\n      };\n\n      SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;\n\n      function isBasicPrime(v) {\n        var n = v.abs();\n        if (n.isUnit()) return false;\n        if (n.equals(2) || n.equals(3) || n.equals(5)) return true;\n        if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;\n        if (n.lesser(49)) return true;\n      }\n\n      function millerRabinTest(n, a) {\n        var nPrev = n.prev(),\n            b = nPrev,\n            r = 0,\n            d,\n            t,\n            i,\n            x;\n\n        while (b.isEven()) {\n          b = b.divide(2), r++;\n        }\n\n        next: for (i = 0; i < a.length; i++) {\n          if (n.lesser(a[i])) continue;\n          x = bigInt(a[i]).modPow(b, n);\n          if (x.equals(Integer[1]) || x.equals(nPrev)) continue;\n\n          for (d = r - 1; d != 0; d--) {\n            x = x.square().mod(n);\n            if (x.isUnit()) return false;\n            if (x.equals(nPrev)) continue next;\n          }\n\n          return false;\n        }\n\n        return true;\n      }\n\n      BigInteger.prototype.isPrime = function (strict) {\n        var isPrime = isBasicPrime(this);\n        if (isPrime !== undefined) return isPrime;\n        var n = this.abs();\n        var bits = n.bitLength();\n        if (bits <= 64) return millerRabinTest(n, [2, 325, 9375, 28178, 450775, 9780504, 1795265022]);\n        var logN = Math.log(2) * bits;\n        var t = Math.ceil(strict === true ? 2 * Math.pow(logN, 2) : logN);\n\n        for (var a = [], i = 0; i < t; i++) {\n          a.push(bigInt(i + 2));\n        }\n\n        return millerRabinTest(n, a);\n      };\n\n      SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;\n\n      BigInteger.prototype.isProbablePrime = function (iterations) {\n        var isPrime = isBasicPrime(this);\n        if (isPrime !== undefined) return isPrime;\n        var n = this.abs();\n        var t = iterations === undefined ? 5 : iterations;\n\n        for (var a = [], i = 0; i < t; i++) {\n          a.push(bigInt.randBetween(2, n.minus(2)));\n        }\n\n        return millerRabinTest(n, a);\n      };\n\n      SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;\n\n      BigInteger.prototype.modInv = function (n) {\n        var t = bigInt.zero,\n            newT = bigInt.one,\n            r = parseValue(n),\n            newR = this.abs(),\n            q,\n            lastT,\n            lastR;\n\n        while (!newR.equals(bigInt.zero)) {\n          q = r.divide(newR);\n          lastT = t;\n          lastR = r;\n          t = newT;\n          r = newR;\n          newT = lastT.subtract(q.multiply(newT));\n          newR = lastR.subtract(q.multiply(newR));\n        }\n\n        if (!r.equals(1)) throw new Error(this.toString() + \" and \" + n.toString() + \" are not co-prime\");\n\n        if (t.compare(0) === -1) {\n          t = t.add(n);\n        }\n\n        if (this.isNegative()) {\n          return t.negate();\n        }\n\n        return t;\n      };\n\n      SmallInteger.prototype.modInv = BigInteger.prototype.modInv;\n\n      BigInteger.prototype.next = function () {\n        var value = this.value;\n\n        if (this.sign) {\n          return subtractSmall(value, 1, this.sign);\n        }\n\n        return new BigInteger(addSmall(value, 1), this.sign);\n      };\n\n      SmallInteger.prototype.next = function () {\n        var value = this.value;\n        if (value + 1 < MAX_INT) return new SmallInteger(value + 1);\n        return new BigInteger(MAX_INT_ARR, false);\n      };\n\n      BigInteger.prototype.prev = function () {\n        var value = this.value;\n\n        if (this.sign) {\n          return new BigInteger(addSmall(value, 1), true);\n        }\n\n        return subtractSmall(value, 1, this.sign);\n      };\n\n      SmallInteger.prototype.prev = function () {\n        var value = this.value;\n        if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);\n        return new BigInteger(MAX_INT_ARR, true);\n      };\n\n      var powersOfTwo = [1];\n\n      while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) {\n        powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);\n      }\n\n      var powers2Length = powersOfTwo.length,\n          highestPower2 = powersOfTwo[powers2Length - 1];\n\n      function shift_isSmall(n) {\n        return (typeof n === \"number\" || typeof n === \"string\") && +Math.abs(n) <= BASE || n instanceof BigInteger && n.value.length <= 1;\n      }\n\n      BigInteger.prototype.shiftLeft = function (n) {\n        if (!shift_isSmall(n)) {\n          throw new Error(String(n) + \" is too large for shifting.\");\n        }\n\n        n = +n;\n        if (n < 0) return this.shiftRight(-n);\n        var result = this;\n        if (result.isZero()) return result;\n\n        while (n >= powers2Length) {\n          result = result.multiply(highestPower2);\n          n -= powers2Length - 1;\n        }\n\n        return result.multiply(powersOfTwo[n]);\n      };\n\n      SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;\n\n      BigInteger.prototype.shiftRight = function (n) {\n        var remQuo;\n\n        if (!shift_isSmall(n)) {\n          throw new Error(String(n) + \" is too large for shifting.\");\n        }\n\n        n = +n;\n        if (n < 0) return this.shiftLeft(-n);\n        var result = this;\n\n        while (n >= powers2Length) {\n          if (result.isZero() || result.isNegative() && result.isUnit()) return result;\n          remQuo = divModAny(result, highestPower2);\n          result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\n          n -= powers2Length - 1;\n        }\n\n        remQuo = divModAny(result, powersOfTwo[n]);\n        return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];\n      };\n\n      SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;\n\n      function bitwise(x, y, fn) {\n        y = parseValue(y);\n        var xSign = x.isNegative(),\n            ySign = y.isNegative();\n        var xRem = xSign ? x.not() : x,\n            yRem = ySign ? y.not() : y;\n        var xDigit = 0,\n            yDigit = 0;\n        var xDivMod = null,\n            yDivMod = null;\n        var result = [];\n\n        while (!xRem.isZero() || !yRem.isZero()) {\n          xDivMod = divModAny(xRem, highestPower2);\n          xDigit = xDivMod[1].toJSNumber();\n\n          if (xSign) {\n            xDigit = highestPower2 - 1 - xDigit;\n          }\n\n          yDivMod = divModAny(yRem, highestPower2);\n          yDigit = yDivMod[1].toJSNumber();\n\n          if (ySign) {\n            yDigit = highestPower2 - 1 - yDigit;\n          }\n\n          xRem = xDivMod[0];\n          yRem = yDivMod[0];\n          result.push(fn(xDigit, yDigit));\n        }\n\n        var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);\n\n        for (var i = result.length - 1; i >= 0; i -= 1) {\n          sum = sum.multiply(highestPower2).add(bigInt(result[i]));\n        }\n\n        return sum;\n      }\n\n      BigInteger.prototype.not = function () {\n        return this.negate().prev();\n      };\n\n      SmallInteger.prototype.not = BigInteger.prototype.not;\n\n      BigInteger.prototype.and = function (n) {\n        return bitwise(this, n, function (a, b) {\n          return a & b;\n        });\n      };\n\n      SmallInteger.prototype.and = BigInteger.prototype.and;\n\n      BigInteger.prototype.or = function (n) {\n        return bitwise(this, n, function (a, b) {\n          return a | b;\n        });\n      };\n\n      SmallInteger.prototype.or = BigInteger.prototype.or;\n\n      BigInteger.prototype.xor = function (n) {\n        return bitwise(this, n, function (a, b) {\n          return a ^ b;\n        });\n      };\n\n      SmallInteger.prototype.xor = BigInteger.prototype.xor;\n      var LOBMASK_I = 1 << 30,\n          LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;\n\n      function roughLOB(n) {\n        var v = n.value,\n            x = typeof v === \"number\" ? v | LOBMASK_I : v[0] + v[1] * BASE | LOBMASK_BI;\n        return x & -x;\n      }\n\n      function integerLogarithm(value, base) {\n        if (base.compareTo(value) <= 0) {\n          var tmp = integerLogarithm(value, base.square(base));\n          var p = tmp.p;\n          var e = tmp.e;\n          var t = p.multiply(base);\n          return t.compareTo(value) <= 0 ? {\n            p: t,\n            e: e * 2 + 1\n          } : {\n            p: p,\n            e: e * 2\n          };\n        }\n\n        return {\n          p: bigInt(1),\n          e: 0\n        };\n      }\n\n      BigInteger.prototype.bitLength = function () {\n        var n = this;\n\n        if (n.compareTo(bigInt(0)) < 0) {\n          n = n.negate().subtract(bigInt(1));\n        }\n\n        if (n.compareTo(bigInt(0)) === 0) {\n          return bigInt(0);\n        }\n\n        return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));\n      };\n\n      SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;\n\n      function max(a, b) {\n        a = parseValue(a);\n        b = parseValue(b);\n        return a.greater(b) ? a : b;\n      }\n\n      function min(a, b) {\n        a = parseValue(a);\n        b = parseValue(b);\n        return a.lesser(b) ? a : b;\n      }\n\n      function gcd(a, b) {\n        a = parseValue(a).abs();\n        b = parseValue(b).abs();\n        if (a.equals(b)) return a;\n        if (a.isZero()) return b;\n        if (b.isZero()) return a;\n        var c = Integer[1],\n            d,\n            t;\n\n        while (a.isEven() && b.isEven()) {\n          d = Math.min(roughLOB(a), roughLOB(b));\n          a = a.divide(d);\n          b = b.divide(d);\n          c = c.multiply(d);\n        }\n\n        while (a.isEven()) {\n          a = a.divide(roughLOB(a));\n        }\n\n        do {\n          while (b.isEven()) {\n            b = b.divide(roughLOB(b));\n          }\n\n          if (a.greater(b)) {\n            t = b;\n            b = a;\n            a = t;\n          }\n\n          b = b.subtract(a);\n        } while (!b.isZero());\n\n        return c.isUnit() ? a : a.multiply(c);\n      }\n\n      function lcm(a, b) {\n        a = parseValue(a).abs();\n        b = parseValue(b).abs();\n        return a.divide(gcd(a, b)).multiply(b);\n      }\n\n      function randBetween(a, b) {\n        a = parseValue(a);\n        b = parseValue(b);\n        var low = min(a, b),\n            high = max(a, b);\n        var range = high.subtract(low).add(1);\n        if (range.isSmall) return low.add(Math.floor(Math.random() * range));\n        var length = range.value.length - 1;\n        var result = [],\n            restricted = true;\n\n        for (var i = length; i >= 0; i--) {\n          var top = restricted ? range.value[i] : BASE;\n          var digit = truncate(Math.random() * top);\n          result.unshift(digit);\n          if (digit < top) restricted = false;\n        }\n\n        result = arrayToSmall(result);\n        return low.add(typeof result === \"number\" ? new SmallInteger(result) : new BigInteger(result, false));\n      }\n\n      var parseBase = function parseBase(text, base) {\n        var length = text.length;\n        var i;\n        var absBase = Math.abs(base);\n\n        for (var i = 0; i < length; i++) {\n          var c = text[i].toLowerCase();\n          if (c === \"-\") continue;\n\n          if (/[a-z0-9]/.test(c)) {\n            if (/[0-9]/.test(c) && +c >= absBase) {\n              if (c === \"1\" && absBase === 1) continue;\n              throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n            } else if (c.charCodeAt(0) - 87 >= absBase) {\n              throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n            }\n          }\n        }\n\n        if (2 <= base && base <= 36) {\n          if (length <= LOG_MAX_INT / Math.log(base)) {\n            var result = parseInt(text, base);\n\n            if (isNaN(result)) {\n              throw new Error(c + \" is not a valid digit in base \" + base + \".\");\n            }\n\n            return new SmallInteger(parseInt(text, base));\n          }\n        }\n\n        base = parseValue(base);\n        var digits = [];\n        var isNegative = text[0] === \"-\";\n\n        for (i = isNegative ? 1 : 0; i < text.length; i++) {\n          var c = text[i].toLowerCase(),\n              charCode = c.charCodeAt(0);\n          if (48 <= charCode && charCode <= 57) digits.push(parseValue(c));else if (97 <= charCode && charCode <= 122) digits.push(parseValue(c.charCodeAt(0) - 87));else if (c === \"<\") {\n            var start = i;\n\n            do {\n              i++;\n            } while (text[i] !== \">\");\n\n            digits.push(parseValue(text.slice(start + 1, i)));\n          } else throw new Error(c + \" is not a valid character\");\n        }\n\n        return parseBaseFromArray(digits, base, isNegative);\n      };\n\n      function parseBaseFromArray(digits, base, isNegative) {\n        var val = Integer[0],\n            pow = Integer[1],\n            i;\n\n        for (i = digits.length - 1; i >= 0; i--) {\n          val = val.add(digits[i].times(pow));\n          pow = pow.times(base);\n        }\n\n        return isNegative ? val.negate() : val;\n      }\n\n      function stringify(digit) {\n        if (digit <= 35) {\n          return \"0123456789abcdefghijklmnopqrstuvwxyz\".charAt(digit);\n        }\n\n        return \"<\" + digit + \">\";\n      }\n\n      function toBase(n, base) {\n        base = bigInt(base);\n\n        if (base.isZero()) {\n          if (n.isZero()) return {\n            value: [0],\n            isNegative: false\n          };\n          throw new Error(\"Cannot convert nonzero numbers to base 0.\");\n        }\n\n        if (base.equals(-1)) {\n          if (n.isZero()) return {\n            value: [0],\n            isNegative: false\n          };\n          if (n.isNegative()) return {\n            value: [].concat.apply([], Array.apply(null, Array(-n)).map(Array.prototype.valueOf, [1, 0])),\n            isNegative: false\n          };\n          var arr = Array.apply(null, Array(+n - 1)).map(Array.prototype.valueOf, [0, 1]);\n          arr.unshift([1]);\n          return {\n            value: [].concat.apply([], arr),\n            isNegative: false\n          };\n        }\n\n        var neg = false;\n\n        if (n.isNegative() && base.isPositive()) {\n          neg = true;\n          n = n.abs();\n        }\n\n        if (base.equals(1)) {\n          if (n.isZero()) return {\n            value: [0],\n            isNegative: false\n          };\n          return {\n            value: Array.apply(null, Array(+n)).map(Number.prototype.valueOf, 1),\n            isNegative: neg\n          };\n        }\n\n        var out = [];\n        var left = n,\n            divmod;\n\n        while (left.isNegative() || left.compareAbs(base) >= 0) {\n          divmod = left.divmod(base);\n          left = divmod.quotient;\n          var digit = divmod.remainder;\n\n          if (digit.isNegative()) {\n            digit = base.minus(digit).abs();\n            left = left.next();\n          }\n\n          out.push(digit.toJSNumber());\n        }\n\n        out.push(left.toJSNumber());\n        return {\n          value: out.reverse(),\n          isNegative: neg\n        };\n      }\n\n      function toBaseString(n, base) {\n        var arr = toBase(n, base);\n        return (arr.isNegative ? \"-\" : \"\") + arr.value.map(stringify).join(\"\");\n      }\n\n      BigInteger.prototype.toArray = function (radix) {\n        return toBase(this, radix);\n      };\n\n      SmallInteger.prototype.toArray = function (radix) {\n        return toBase(this, radix);\n      };\n\n      BigInteger.prototype.toString = function (radix) {\n        if (radix === undefined) radix = 10;\n        if (radix !== 10) return toBaseString(this, radix);\n        var v = this.value,\n            l = v.length,\n            str = String(v[--l]),\n            zeros = \"0000000\",\n            digit;\n\n        while (--l >= 0) {\n          digit = String(v[l]);\n          str += zeros.slice(digit.length) + digit;\n        }\n\n        var sign = this.sign ? \"-\" : \"\";\n        return sign + str;\n      };\n\n      SmallInteger.prototype.toString = function (radix) {\n        if (radix === undefined) radix = 10;\n        if (radix != 10) return toBaseString(this, radix);\n        return String(this.value);\n      };\n\n      BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () {\n        return this.toString();\n      };\n\n      BigInteger.prototype.valueOf = function () {\n        return parseInt(this.toString(), 10);\n      };\n\n      BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;\n\n      SmallInteger.prototype.valueOf = function () {\n        return this.value;\n      };\n\n      SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;\n\n      function parseStringValue(v) {\n        if (isPrecise(+v)) {\n          var x = +v;\n          if (x === truncate(x)) return new SmallInteger(x);\n          throw new Error(\"Invalid integer: \" + v);\n        }\n\n        var sign = v[0] === \"-\";\n        if (sign) v = v.slice(1);\n        var split = v.split(/e/i);\n        if (split.length > 2) throw new Error(\"Invalid integer: \" + split.join(\"e\"));\n\n        if (split.length === 2) {\n          var exp = split[1];\n          if (exp[0] === \"+\") exp = exp.slice(1);\n          exp = +exp;\n          if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error(\"Invalid integer: \" + exp + \" is not a valid exponent.\");\n          var text = split[0];\n          var decimalPlace = text.indexOf(\".\");\n\n          if (decimalPlace >= 0) {\n            exp -= text.length - decimalPlace - 1;\n            text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);\n          }\n\n          if (exp < 0) throw new Error(\"Cannot include negative exponent part for integers\");\n          text += new Array(exp + 1).join(\"0\");\n          v = text;\n        }\n\n        var isValid = /^([0-9][0-9]*)$/.test(v);\n        if (!isValid) throw new Error(\"Invalid integer: \" + v);\n        var r = [],\n            max = v.length,\n            l = LOG_BASE,\n            min = max - l;\n\n        while (max > 0) {\n          r.push(+v.slice(min, max));\n          min -= l;\n          if (min < 0) min = 0;\n          max -= l;\n        }\n\n        trim(r);\n        return new BigInteger(r, sign);\n      }\n\n      function parseNumberValue(v) {\n        if (isPrecise(v)) {\n          if (v !== truncate(v)) throw new Error(v + \" is not an integer.\");\n          return new SmallInteger(v);\n        }\n\n        return parseStringValue(v.toString());\n      }\n\n      function parseValue(v) {\n        if (typeof v === \"number\") {\n          return parseNumberValue(v);\n        }\n\n        if (typeof v === \"string\") {\n          return parseStringValue(v);\n        }\n\n        return v;\n      }\n\n      for (var i = 0; i < 1e3; i++) {\n        Integer[i] = new SmallInteger(i);\n        if (i > 0) Integer[-i] = new SmallInteger(-i);\n      }\n\n      Integer.one = Integer[1];\n      Integer.zero = Integer[0];\n      Integer.minusOne = Integer[-1];\n      Integer.max = max;\n      Integer.min = min;\n      Integer.gcd = gcd;\n      Integer.lcm = lcm;\n\n      Integer.isInstance = function (x) {\n        return x instanceof BigInteger || x instanceof SmallInteger;\n      };\n\n      Integer.randBetween = randBetween;\n\n      Integer.fromArray = function (digits, base, isNegative) {\n        return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);\n      };\n\n      return Integer;\n    }();\n\n    if (typeof module !== \"undefined\" && module.hasOwnProperty(\"exports\")) {\n      module.exports = bigInt;\n    }\n\n    if (typeof define === \"function\" && define.amd) {\n      define(\"big-integer\", [], function () {\n        return bigInt;\n      });\n    }\n\n    return bigInt;\n  }(),\n\n  /* big.js v5.2.2 https://github.com/MikeMcl/big.js/LICENCE */\n  bigDec: function (n) {\n    \"use strict\";\n\n    var e,\n        i,\n        t,\n        r = 9e15,\n        s = 1e9,\n        o = \"0123456789abcdef\",\n        u = \"2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058\",\n        c = \"3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789\",\n        f = {\n      precision: 20,\n      rounding: 4,\n      modulo: 1,\n      toExpNeg: -7,\n      toExpPos: 21,\n      minE: -r,\n      maxE: r,\n      crypto: !1\n    },\n        h = !0,\n        a = \"[DecimalError] \",\n        d = a + \"Invalid argument: \",\n        l = a + \"Precision limit exceeded\",\n        p = a + \"crypto unavailable\",\n        g = Math.floor,\n        w = Math.pow,\n        m = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\n        v = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\n        N = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\n        b = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\n        E = 1e7,\n        x = 7,\n        M = u.length - 1,\n        y = c.length - 1,\n        q = {\n      name: \"[object Decimal]\"\n    };\n\n    function O(n) {\n      var e,\n          i,\n          t,\n          r = n.length - 1,\n          s = \"\",\n          o = n[0];\n\n      if (r > 0) {\n        for (s += o, e = 1; e < r; e++) {\n          t = n[e] + \"\", (i = x - t.length) && (s += S(i)), s += t;\n        }\n\n        o = n[e], (i = x - (t = o + \"\").length) && (s += S(i));\n      } else if (0 === o) return \"0\";\n\n      for (; o % 10 == 0;) {\n        o /= 10;\n      }\n\n      return s + o;\n    }\n\n    function F(n, e, i) {\n      if (n !== ~~n || n < e || n > i) throw Error(d + n);\n    }\n\n    function A(n, e, i, t) {\n      var r, s, o, u;\n\n      for (s = n[0]; s >= 10; s /= 10) {\n        --e;\n      }\n\n      return --e < 0 ? (e += x, r = 0) : (r = Math.ceil((e + 1) / x), e %= x), s = w(10, x - e), u = n[r] % s | 0, null == t ? e < 3 ? (0 == e ? u = u / 100 | 0 : 1 == e && (u = u / 10 | 0), o = i < 4 && 99999 == u || i > 3 && 49999 == u || 5e4 == u || 0 == u) : o = (i < 4 && u + 1 == s || i > 3 && u + 1 == s / 2) && (n[r + 1] / s / 100 | 0) == w(10, e - 2) - 1 || (u == s / 2 || 0 == u) && 0 == (n[r + 1] / s / 100 | 0) : e < 4 ? (0 == e ? u = u / 1e3 | 0 : 1 == e ? u = u / 100 | 0 : 2 == e && (u = u / 10 | 0), o = (t || i < 4) && 9999 == u || !t && i > 3 && 4999 == u) : o = ((t || i < 4) && u + 1 == s || !t && i > 3 && u + 1 == s / 2) && (n[r + 1] / s / 1e3 | 0) == w(10, e - 3) - 1, o;\n    }\n\n    function D(n, e, i) {\n      for (var t, r, s = [0], u = 0, c = n.length; u < c;) {\n        for (r = s.length; r--;) {\n          s[r] *= e;\n        }\n\n        for (s[0] += o.indexOf(n.charAt(u++)), t = 0; t < s.length; t++) {\n          s[t] > i - 1 && (void 0 === s[t + 1] && (s[t + 1] = 0), s[t + 1] += s[t] / i | 0, s[t] %= i);\n        }\n      }\n\n      return s.reverse();\n    }\n\n    q.absoluteValue = q.abs = function () {\n      var n = new this.constructor(this);\n      return n.s < 0 && (n.s = 1), P(n);\n    }, q.ceil = function () {\n      return P(new this.constructor(this), this.e + 1, 2);\n    }, q.comparedTo = q.cmp = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s = this,\n          o = s.d,\n          u = (n = new s.constructor(n)).d,\n          c = s.s,\n          f = n.s;\n      if (!o || !u) return c && f ? c !== f ? c : o === u ? 0 : !o ^ c < 0 ? 1 : -1 : NaN;\n      if (!o[0] || !u[0]) return o[0] ? c : u[0] ? -f : 0;\n      if (c !== f) return c;\n      if (s.e !== n.e) return s.e > n.e ^ c < 0 ? 1 : -1;\n\n      for (e = 0, i = (t = o.length) < (r = u.length) ? t : r; e < i; ++e) {\n        if (o[e] !== u[e]) return o[e] > u[e] ^ c < 0 ? 1 : -1;\n      }\n\n      return t === r ? 0 : t > r ^ c < 0 ? 1 : -1;\n    }, q.cosine = q.cos = function () {\n      var n,\n          e,\n          i = this,\n          r = i.constructor;\n      return i.d ? i.d[0] ? (n = r.precision, e = r.rounding, r.precision = n + Math.max(i.e, i.sd()) + x, r.rounding = 1, i = function (n, e) {\n        var i,\n            t,\n            r = e.d.length;\n        r < 32 ? (i = Math.ceil(r / 3), t = Math.pow(4, -i).toString()) : (i = 16, t = \"2.3283064365386962890625e-10\");\n        n.precision += i, e = W(n, 1, e.times(t), new n(1));\n\n        for (var s = i; s--;) {\n          var o = e.times(e);\n          e = o.times(o).minus(o).times(8).plus(1);\n        }\n\n        return n.precision -= i, e;\n      }(r, J(r, i)), r.precision = n, r.rounding = e, P(2 == t || 3 == t ? i.neg() : i, n, e, !0)) : new r(1) : new r(NaN);\n    }, q.cubeRoot = q.cbrt = function () {\n      var n,\n          e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a = this,\n          d = a.constructor;\n      if (!a.isFinite() || a.isZero()) return new d(a);\n\n      for (h = !1, (s = a.s * Math.pow(a.s * a, 1 / 3)) && Math.abs(s) != 1 / 0 ? t = new d(s.toString()) : (i = O(a.d), (s = ((n = a.e) - i.length + 1) % 3) && (i += 1 == s || -2 == s ? \"0\" : \"00\"), s = Math.pow(i, 1 / 3), n = g((n + 1) / 3) - (n % 3 == (n < 0 ? -1 : 2)), (t = new d(i = s == 1 / 0 ? \"5e\" + n : (i = s.toExponential()).slice(0, i.indexOf(\"e\") + 1) + n)).s = a.s), o = (n = d.precision) + 3;;) {\n        if (f = (c = (u = t).times(u).times(u)).plus(a), t = Z(f.plus(a).times(u), f.plus(c), o + 2, 1), O(u.d).slice(0, o) === (i = O(t.d)).slice(0, o)) {\n          if (\"9999\" != (i = i.slice(o - 3, o + 1)) && (r || \"4999\" != i)) {\n            +i && (+i.slice(1) || \"5\" != i.charAt(0)) || (P(t, n + 1, 1), e = !t.times(t).times(t).eq(a));\n            break;\n          }\n\n          if (!r && (P(u, n + 1, 0), u.times(u).times(u).eq(a))) {\n            t = u;\n            break;\n          }\n\n          o += 4, r = 1;\n        }\n      }\n\n      return h = !0, P(t, n, d.rounding, e);\n    }, q.decimalPlaces = q.dp = function () {\n      var n,\n          e = this.d,\n          i = NaN;\n\n      if (e) {\n        if (i = ((n = e.length - 1) - g(this.e / x)) * x, n = e[n]) for (; n % 10 == 0; n /= 10) {\n          i--;\n        }\n        i < 0 && (i = 0);\n      }\n\n      return i;\n    }, q.dividedBy = q.div = function (n) {\n      return Z(this, new this.constructor(n));\n    }, q.dividedToIntegerBy = q.divToInt = function (n) {\n      var e = this.constructor;\n      return P(Z(this, new e(n), 0, 1, 1), e.precision, e.rounding);\n    }, q.equals = q.eq = function (n) {\n      return 0 === this.cmp(n);\n    }, q.floor = function () {\n      return P(new this.constructor(this), this.e + 1, 3);\n    }, q.greaterThan = q.gt = function (n) {\n      return this.cmp(n) > 0;\n    }, q.greaterThanOrEqualTo = q.gte = function (n) {\n      var e = this.cmp(n);\n      return 1 == e || 0 === e;\n    }, q.hyperbolicCosine = q.cosh = function () {\n      var n,\n          e,\n          i,\n          t,\n          r,\n          s = this,\n          o = s.constructor,\n          u = new o(1);\n      if (!s.isFinite()) return new o(s.s ? 1 / 0 : NaN);\n      if (s.isZero()) return u;\n      i = o.precision, t = o.rounding, o.precision = i + Math.max(s.e, s.sd()) + 4, o.rounding = 1, (r = s.d.length) < 32 ? (n = Math.ceil(r / 3), e = Math.pow(4, -n).toString()) : (n = 16, e = \"2.3283064365386962890625e-10\"), s = W(o, 1, s.times(e), new o(1), !0);\n\n      for (var c, f = n, h = new o(8); f--;) {\n        c = s.times(s), s = u.minus(c.times(h.minus(c.times(h))));\n      }\n\n      return P(s, o.precision = i, o.rounding = t, !0);\n    }, q.hyperbolicSine = q.sinh = function () {\n      var n,\n          e,\n          i,\n          t,\n          r = this,\n          s = r.constructor;\n      if (!r.isFinite() || r.isZero()) return new s(r);\n      if (e = s.precision, i = s.rounding, s.precision = e + Math.max(r.e, r.sd()) + 4, s.rounding = 1, (t = r.d.length) < 3) r = W(s, 2, r, r, !0);else {\n        n = (n = 1.4 * Math.sqrt(t)) > 16 ? 16 : 0 | n, r = W(s, 2, r = r.times(Math.pow(5, -n)), r, !0);\n\n        for (var o, u = new s(5), c = new s(16), f = new s(20); n--;) {\n          o = r.times(r), r = r.times(u.plus(o.times(c.times(o).plus(f))));\n        }\n      }\n      return s.precision = e, s.rounding = i, P(r, e, i, !0);\n    }, q.hyperbolicTangent = q.tanh = function () {\n      var n,\n          e,\n          i = this,\n          t = i.constructor;\n      return i.isFinite() ? i.isZero() ? new t(i) : (n = t.precision, e = t.rounding, t.precision = n + 7, t.rounding = 1, Z(i.sinh(), i.cosh(), t.precision = n, t.rounding = e)) : new t(i.s);\n    }, q.inverseCosine = q.acos = function () {\n      var n,\n          e = this,\n          i = e.constructor,\n          t = e.abs().cmp(1),\n          r = i.precision,\n          s = i.rounding;\n      return -1 !== t ? 0 === t ? e.isNeg() ? _(i, r, s) : new i(0) : new i(NaN) : e.isZero() ? _(i, r + 4, s).times(.5) : (i.precision = r + 6, i.rounding = 1, e = e.asin(), n = _(i, r + 4, s).times(.5), i.precision = r, i.rounding = s, n.minus(e));\n    }, q.inverseHyperbolicCosine = q.acosh = function () {\n      var n,\n          e,\n          i = this,\n          t = i.constructor;\n      return i.lte(1) ? new t(i.eq(1) ? 0 : NaN) : i.isFinite() ? (n = t.precision, e = t.rounding, t.precision = n + Math.max(Math.abs(i.e), i.sd()) + 4, t.rounding = 1, h = !1, i = i.times(i).minus(1).sqrt().plus(i), h = !0, t.precision = n, t.rounding = e, i.ln()) : new t(i);\n    }, q.inverseHyperbolicSine = q.asinh = function () {\n      var n,\n          e,\n          i = this,\n          t = i.constructor;\n      return !i.isFinite() || i.isZero() ? new t(i) : (n = t.precision, e = t.rounding, t.precision = n + 2 * Math.max(Math.abs(i.e), i.sd()) + 6, t.rounding = 1, h = !1, i = i.times(i).plus(1).sqrt().plus(i), h = !0, t.precision = n, t.rounding = e, i.ln());\n    }, q.inverseHyperbolicTangent = q.atanh = function () {\n      var n,\n          e,\n          i,\n          t,\n          r = this,\n          s = r.constructor;\n      return r.isFinite() ? r.e >= 0 ? new s(r.abs().eq(1) ? r.s / 0 : r.isZero() ? r : NaN) : (n = s.precision, e = s.rounding, t = r.sd(), Math.max(t, n) < 2 * -r.e - 1 ? P(new s(r), n, e, !0) : (s.precision = i = t - r.e, r = Z(r.plus(1), new s(1).minus(r), i + n, 1), s.precision = n + 4, s.rounding = 1, r = r.ln(), s.precision = n, s.rounding = e, r.times(.5))) : new s(NaN);\n    }, q.inverseSine = q.asin = function () {\n      var n,\n          e,\n          i,\n          t,\n          r = this,\n          s = r.constructor;\n      return r.isZero() ? new s(r) : (e = r.abs().cmp(1), i = s.precision, t = s.rounding, -1 !== e ? 0 === e ? ((n = _(s, i + 4, t).times(.5)).s = r.s, n) : new s(NaN) : (s.precision = i + 6, s.rounding = 1, r = r.div(new s(1).minus(r.times(r)).sqrt().plus(1)).atan(), s.precision = i, s.rounding = t, r.times(2)));\n    }, q.inverseTangent = q.atan = function () {\n      var n,\n          e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f = this,\n          a = f.constructor,\n          d = a.precision,\n          l = a.rounding;\n\n      if (f.isFinite()) {\n        if (f.isZero()) return new a(f);\n        if (f.abs().eq(1) && d + 4 <= y) return (o = _(a, d + 4, l).times(.25)).s = f.s, o;\n      } else {\n        if (!f.s) return new a(NaN);\n        if (d + 4 <= y) return (o = _(a, d + 4, l).times(.5)).s = f.s, o;\n      }\n\n      for (a.precision = u = d + 10, a.rounding = 1, n = i = Math.min(28, u / x + 2 | 0); n; --n) {\n        f = f.div(f.times(f).plus(1).sqrt().plus(1));\n      }\n\n      for (h = !1, e = Math.ceil(u / x), t = 1, c = f.times(f), o = new a(f), r = f; -1 !== n;) {\n        if (r = r.times(c), s = o.minus(r.div(t += 2)), r = r.times(c), void 0 !== (o = s.plus(r.div(t += 2))).d[e]) for (n = e; o.d[n] === s.d[n] && n--;) {\n          ;\n        }\n      }\n\n      return i && (o = o.times(2 << i - 1)), h = !0, P(o, a.precision = d, a.rounding = l, !0);\n    }, q.isFinite = function () {\n      return !!this.d;\n    }, q.isInteger = q.isInt = function () {\n      return !!this.d && g(this.e / x) > this.d.length - 2;\n    }, q.isNaN = function () {\n      return !this.s;\n    }, q.isNegative = q.isNeg = function () {\n      return this.s < 0;\n    }, q.isPositive = q.isPos = function () {\n      return this.s > 0;\n    }, q.isZero = function () {\n      return !!this.d && 0 === this.d[0];\n    }, q.lessThan = q.lt = function (n) {\n      return this.cmp(n) < 0;\n    }, q.lessThanOrEqualTo = q.lte = function (n) {\n      return this.cmp(n) < 1;\n    }, q.logarithm = q.log = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f = this.constructor,\n          a = f.precision,\n          d = f.rounding;\n      if (null == n) n = new f(10), e = !0;else {\n        if (i = (n = new f(n)).d, n.s < 0 || !i || !i[0] || n.eq(1)) return new f(NaN);\n        e = n.eq(10);\n      }\n      if (i = this.d, this.s < 0 || !i || !i[0] || this.eq(1)) return new f(i && !i[0] ? -1 / 0 : 1 != this.s ? NaN : i ? 0 : 1 / 0);\n      if (e) if (i.length > 1) s = !0;else {\n        for (r = i[0]; r % 10 == 0;) {\n          r /= 10;\n        }\n\n        s = 1 !== r;\n      }\n      if (h = !1, o = B(this, u = a + 5), t = e ? U(f, u + 10) : B(n, u), A((c = Z(o, t, u, 1)).d, r = a, d)) do {\n        if (o = B(this, u += 10), t = e ? U(f, u + 10) : B(n, u), c = Z(o, t, u, 1), !s) {\n          +O(c.d).slice(r + 1, r + 15) + 1 == 1e14 && (c = P(c, a + 1, 0));\n          break;\n        }\n      } while (A(c.d, r += 10, d));\n      return h = !0, P(c, a, d);\n    }, q.minus = q.sub = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a,\n          d,\n          l,\n          p = this,\n          w = p.constructor;\n      if (n = new w(n), !p.d || !n.d) return p.s && n.s ? p.d ? n.s = -n.s : n = new w(n.d || p.s !== n.s ? p : NaN) : n = new w(NaN), n;\n      if (p.s != n.s) return n.s = -n.s, p.plus(n);\n\n      if (f = p.d, l = n.d, u = w.precision, c = w.rounding, !f[0] || !l[0]) {\n        if (l[0]) n.s = -n.s;else {\n          if (!f[0]) return new w(3 === c ? -0 : 0);\n          n = new w(p);\n        }\n        return h ? P(n, u, c) : n;\n      }\n\n      if (i = g(n.e / x), a = g(p.e / x), f = f.slice(), s = a - i) {\n        for ((d = s < 0) ? (e = f, s = -s, o = l.length) : (e = l, i = a, o = f.length), s > (t = Math.max(Math.ceil(u / x), o) + 2) && (s = t, e.length = 1), e.reverse(), t = s; t--;) {\n          e.push(0);\n        }\n\n        e.reverse();\n      } else {\n        for ((d = (t = f.length) < (o = l.length)) && (o = t), t = 0; t < o; t++) {\n          if (f[t] != l[t]) {\n            d = f[t] < l[t];\n            break;\n          }\n        }\n\n        s = 0;\n      }\n\n      for (d && (e = f, f = l, l = e, n.s = -n.s), o = f.length, t = l.length - o; t > 0; --t) {\n        f[o++] = 0;\n      }\n\n      for (t = l.length; t > s;) {\n        if (f[--t] < l[t]) {\n          for (r = t; r && 0 === f[--r];) {\n            f[r] = E - 1;\n          }\n\n          --f[r], f[t] += E;\n        }\n\n        f[t] -= l[t];\n      }\n\n      for (; 0 === f[--o];) {\n        f.pop();\n      }\n\n      for (; 0 === f[0]; f.shift()) {\n        --i;\n      }\n\n      return f[0] ? (n.d = f, n.e = L(f, i), h ? P(n, u, c) : n) : new w(3 === c ? -0 : 0);\n    }, q.modulo = q.mod = function (n) {\n      var e,\n          i = this,\n          t = i.constructor;\n      return n = new t(n), !i.d || !n.s || n.d && !n.d[0] ? new t(NaN) : !n.d || i.d && !i.d[0] ? P(new t(i), t.precision, t.rounding) : (h = !1, 9 == t.modulo ? (e = Z(i, n.abs(), 0, 3, 1)).s *= n.s : e = Z(i, n, 0, t.modulo, 1), e = e.times(n), h = !0, i.minus(e));\n    }, q.naturalExponential = q.exp = function () {\n      return H(this);\n    }, q.naturalLogarithm = q.ln = function () {\n      return B(this);\n    }, q.negated = q.neg = function () {\n      var n = new this.constructor(this);\n      return n.s = -n.s, P(n);\n    }, q.plus = q.add = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a,\n          d = this,\n          l = d.constructor;\n      if (n = new l(n), !d.d || !n.d) return d.s && n.s ? d.d || (n = new l(n.d || d.s === n.s ? d : NaN)) : n = new l(NaN), n;\n      if (d.s != n.s) return n.s = -n.s, d.minus(n);\n      if (f = d.d, a = n.d, u = l.precision, c = l.rounding, !f[0] || !a[0]) return a[0] || (n = new l(d)), h ? P(n, u, c) : n;\n\n      if (s = g(d.e / x), t = g(n.e / x), f = f.slice(), r = s - t) {\n        for (r < 0 ? (i = f, r = -r, o = a.length) : (i = a, t = s, o = f.length), r > (o = (s = Math.ceil(u / x)) > o ? s + 1 : o + 1) && (r = o, i.length = 1), i.reverse(); r--;) {\n          i.push(0);\n        }\n\n        i.reverse();\n      }\n\n      for ((o = f.length) - (r = a.length) < 0 && (r = o, i = a, a = f, f = i), e = 0; r;) {\n        e = (f[--r] = f[r] + a[r] + e) / E | 0, f[r] %= E;\n      }\n\n      for (e && (f.unshift(e), ++t), o = f.length; 0 == f[--o];) {\n        f.pop();\n      }\n\n      return n.d = f, n.e = L(f, t), h ? P(n, u, c) : n;\n    }, q.precision = q.sd = function (n) {\n      var e,\n          i = this;\n      if (void 0 !== n && n !== !!n && 1 !== n && 0 !== n) throw Error(d + n);\n      return i.d ? (e = k(i.d), n && i.e + 1 > e && (e = i.e + 1)) : e = NaN, e;\n    }, q.round = function () {\n      var n = this,\n          e = n.constructor;\n      return P(new e(n), n.e + 1, e.rounding);\n    }, q.sine = q.sin = function () {\n      var n,\n          e,\n          i = this,\n          r = i.constructor;\n      return i.isFinite() ? i.isZero() ? new r(i) : (n = r.precision, e = r.rounding, r.precision = n + Math.max(i.e, i.sd()) + x, r.rounding = 1, i = function (n, e) {\n        var i,\n            t = e.d.length;\n        if (t < 3) return W(n, 2, e, e);\n        i = (i = 1.4 * Math.sqrt(t)) > 16 ? 16 : 0 | i, e = e.times(Math.pow(5, -i)), e = W(n, 2, e, e);\n\n        for (var r, s = new n(5), o = new n(16), u = new n(20); i--;) {\n          r = e.times(e), e = e.times(s.plus(r.times(o.times(r).minus(u))));\n        }\n\n        return e;\n      }(r, J(r, i)), r.precision = n, r.rounding = e, P(t > 2 ? i.neg() : i, n, e, !0)) : new r(NaN);\n    }, q.squareRoot = q.sqrt = function () {\n      var n,\n          e,\n          i,\n          t,\n          r,\n          s,\n          o = this,\n          u = o.d,\n          c = o.e,\n          f = o.s,\n          a = o.constructor;\n      if (1 !== f || !u || !u[0]) return new a(!f || f < 0 && (!u || u[0]) ? NaN : u ? o : 1 / 0);\n\n      for (h = !1, 0 == (f = Math.sqrt(+o)) || f == 1 / 0 ? (((e = O(u)).length + c) % 2 == 0 && (e += \"0\"), f = Math.sqrt(e), c = g((c + 1) / 2) - (c < 0 || c % 2), t = new a(e = f == 1 / 0 ? \"1e\" + c : (e = f.toExponential()).slice(0, e.indexOf(\"e\") + 1) + c)) : t = new a(f.toString()), i = (c = a.precision) + 3;;) {\n        if (t = (s = t).plus(Z(o, s, i + 2, 1)).times(.5), O(s.d).slice(0, i) === (e = O(t.d)).slice(0, i)) {\n          if (\"9999\" != (e = e.slice(i - 3, i + 1)) && (r || \"4999\" != e)) {\n            +e && (+e.slice(1) || \"5\" != e.charAt(0)) || (P(t, c + 1, 1), n = !t.times(t).eq(o));\n            break;\n          }\n\n          if (!r && (P(s, c + 1, 0), s.times(s).eq(o))) {\n            t = s;\n            break;\n          }\n\n          i += 4, r = 1;\n        }\n      }\n\n      return h = !0, P(t, c, a.rounding, n);\n    }, q.tangent = q.tan = function () {\n      var n,\n          e,\n          i = this,\n          r = i.constructor;\n      return i.isFinite() ? i.isZero() ? new r(i) : (n = r.precision, e = r.rounding, r.precision = n + 10, r.rounding = 1, (i = i.sin()).s = 1, i = Z(i, new r(1).minus(i.times(i)).sqrt(), n + 10, 0), r.precision = n, r.rounding = e, P(2 == t || 4 == t ? i.neg() : i, n, e, !0)) : new r(NaN);\n    }, q.times = q.mul = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a = this,\n          d = a.constructor,\n          l = a.d,\n          p = (n = new d(n)).d;\n      if (n.s *= a.s, !(l && l[0] && p && p[0])) return new d(!n.s || l && !l[0] && !p || p && !p[0] && !l ? NaN : l && p ? 0 * n.s : n.s / 0);\n\n      for (i = g(a.e / x) + g(n.e / x), (c = l.length) < (f = p.length) && (s = l, l = p, p = s, o = c, c = f, f = o), s = [], t = o = c + f; t--;) {\n        s.push(0);\n      }\n\n      for (t = f; --t >= 0;) {\n        for (e = 0, r = c + t; r > t;) {\n          u = s[r] + p[t] * l[r - t - 1] + e, s[r--] = u % E | 0, e = u / E | 0;\n        }\n\n        s[r] = (s[r] + e) % E | 0;\n      }\n\n      for (; !s[--o];) {\n        s.pop();\n      }\n\n      return e ? ++i : s.shift(), n.d = s, n.e = L(s, i), h ? P(n, d.precision, d.rounding) : n;\n    }, q.toBinary = function (n, e) {\n      return z(this, 2, n, e);\n    }, q.toDecimalPlaces = q.toDP = function (n, e) {\n      var i = this,\n          t = i.constructor;\n      return i = new t(i), void 0 === n ? i : (F(n, 0, s), void 0 === e ? e = t.rounding : F(e, 0, 8), P(i, n + i.e + 1, e));\n    }, q.toExponential = function (n, e) {\n      var i,\n          t = this,\n          r = t.constructor;\n      return void 0 === n ? i = R(t, !0) : (F(n, 0, s), void 0 === e ? e = r.rounding : F(e, 0, 8), i = R(t = P(new r(t), n + 1, e), !0, n + 1)), t.isNeg() && !t.isZero() ? \"-\" + i : i;\n    }, q.toFixed = function (n, e) {\n      var i,\n          t,\n          r = this,\n          o = r.constructor;\n      return void 0 === n ? i = R(r) : (F(n, 0, s), void 0 === e ? e = o.rounding : F(e, 0, 8), i = R(t = P(new o(r), n + r.e + 1, e), !1, n + t.e + 1)), r.isNeg() && !r.isZero() ? \"-\" + i : i;\n    }, q.toFraction = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a,\n          l,\n          p,\n          g = this,\n          m = g.d,\n          v = g.constructor;\n      if (!m) return new v(g);\n      if (f = i = new v(1), t = c = new v(0), o = (s = (e = new v(t)).e = k(m) - g.e - 1) % x, e.d[0] = w(10, o < 0 ? x + o : o), null == n) n = s > 0 ? e : f;else {\n        if (!(u = new v(n)).isInt() || u.lt(f)) throw Error(d + u);\n        n = u.gt(e) ? s > 0 ? e : f : u;\n      }\n\n      for (h = !1, u = new v(O(m)), a = v.precision, v.precision = s = m.length * x * 2; l = Z(u, e, 0, 1, 1), 1 != (r = i.plus(l.times(t))).cmp(n);) {\n        i = t, t = r, r = f, f = c.plus(l.times(r)), c = r, r = e, e = u.minus(l.times(r)), u = r;\n      }\n\n      return r = Z(n.minus(i), t, 0, 1, 1), c = c.plus(r.times(f)), i = i.plus(r.times(t)), c.s = f.s = g.s, p = Z(f, t, s, 1).minus(g).abs().cmp(Z(c, i, s, 1).minus(g).abs()) < 1 ? [f, t] : [c, i], v.precision = a, h = !0, p;\n    }, q.toHexadecimal = q.toHex = function (n, e) {\n      return z(this, 16, n, e);\n    }, q.toNearest = function (n, e) {\n      var i = this,\n          t = i.constructor;\n\n      if (i = new t(i), null == n) {\n        if (!i.d) return i;\n        n = new t(1), e = t.rounding;\n      } else {\n        if (n = new t(n), void 0 === e ? e = t.rounding : F(e, 0, 8), !i.d) return n.s ? i : n;\n        if (!n.d) return n.s && (n.s = i.s), n;\n      }\n\n      return n.d[0] ? (h = !1, i = Z(i, n, 0, e, 1).times(n), h = !0, P(i)) : (n.s = i.s, i = n), i;\n    }, q.toNumber = function () {\n      return +this;\n    }, q.toOctal = function (n, e) {\n      return z(this, 8, n, e);\n    }, q.toPower = q.pow = function (n) {\n      var e,\n          i,\n          t,\n          r,\n          s,\n          o,\n          u = this,\n          c = u.constructor,\n          f = +(n = new c(n));\n      if (!(u.d && n.d && u.d[0] && n.d[0])) return new c(w(+u, f));\n      if ((u = new c(u)).eq(1)) return u;\n      if (t = c.precision, s = c.rounding, n.eq(1)) return P(u, t, s);\n      if ((e = g(n.e / x)) >= n.d.length - 1 && (i = f < 0 ? -f : f) <= 9007199254740991) return r = T(c, u, i, t), n.s < 0 ? new c(1).div(r) : P(r, t, s);\n\n      if ((o = u.s) < 0) {\n        if (e < n.d.length - 1) return new c(NaN);\n        if (0 == (1 & n.d[e]) && (o = 1), 0 == u.e && 1 == u.d[0] && 1 == u.d.length) return u.s = o, u;\n      }\n\n      return (e = 0 != (i = w(+u, f)) && isFinite(i) ? new c(i + \"\").e : g(f * (Math.log(\"0.\" + O(u.d)) / Math.LN10 + u.e + 1))) > c.maxE + 1 || e < c.minE - 1 ? new c(e > 0 ? o / 0 : 0) : (h = !1, c.rounding = u.s = 1, i = Math.min(12, (e + \"\").length), (r = H(n.times(B(u, t + i)), t)).d && A((r = P(r, t + 5, 1)).d, t, s) && (e = t + 10, +O((r = P(H(n.times(B(u, e + i)), e), e + 5, 1)).d).slice(t + 1, t + 15) + 1 == 1e14 && (r = P(r, t + 1, 0))), r.s = o, h = !0, c.rounding = s, P(r, t, s));\n    }, q.toPrecision = function (n, e) {\n      var i,\n          t = this,\n          r = t.constructor;\n      return void 0 === n ? i = R(t, t.e <= r.toExpNeg || t.e >= r.toExpPos) : (F(n, 1, s), void 0 === e ? e = r.rounding : F(e, 0, 8), i = R(t = P(new r(t), n, e), n <= t.e || t.e <= r.toExpNeg, n)), t.isNeg() && !t.isZero() ? \"-\" + i : i;\n    }, q.toSignificantDigits = q.toSD = function (n, e) {\n      var i = this.constructor;\n      return void 0 === n ? (n = i.precision, e = i.rounding) : (F(n, 1, s), void 0 === e ? e = i.rounding : F(e, 0, 8)), P(new i(this), n, e);\n    }, q.toString = function () {\n      var n = this,\n          e = n.constructor,\n          i = R(n, n.e <= e.toExpNeg || n.e >= e.toExpPos);\n      return n.isNeg() && !n.isZero() ? \"-\" + i : i;\n    }, q.truncated = q.trunc = function () {\n      return P(new this.constructor(this), this.e + 1, 1);\n    }, q.valueOf = q.toJSON = function () {\n      var n = this,\n          e = n.constructor,\n          i = R(n, n.e <= e.toExpNeg || n.e >= e.toExpPos);\n      return n.isNeg() ? \"-\" + i : i;\n    };\n\n    var Z = function () {\n      function n(n, e, i) {\n        var t,\n            r = 0,\n            s = n.length;\n\n        for (n = n.slice(); s--;) {\n          t = n[s] * e + r, n[s] = t % i | 0, r = t / i | 0;\n        }\n\n        return r && n.unshift(r), n;\n      }\n\n      function e(n, e, i, t) {\n        var r, s;\n        if (i != t) s = i > t ? 1 : -1;else for (r = s = 0; r < i; r++) {\n          if (n[r] != e[r]) {\n            s = n[r] > e[r] ? 1 : -1;\n            break;\n          }\n        }\n        return s;\n      }\n\n      function t(n, e, i, t) {\n        for (var r = 0; i--;) {\n          n[i] -= r, r = n[i] < e[i] ? 1 : 0, n[i] = r * t + n[i] - e[i];\n        }\n\n        for (; !n[0] && n.length > 1;) {\n          n.shift();\n        }\n      }\n\n      return function (r, s, o, u, c, f) {\n        var h,\n            a,\n            d,\n            l,\n            p,\n            w,\n            m,\n            v,\n            N,\n            b,\n            M,\n            y,\n            q,\n            O,\n            F,\n            A,\n            D,\n            Z,\n            R,\n            L,\n            U = r.constructor,\n            _ = r.s == s.s ? 1 : -1,\n            k = r.d,\n            S = s.d;\n\n        if (!(k && k[0] && S && S[0])) return new U(r.s && s.s && (k ? !S || k[0] != S[0] : S) ? k && 0 == k[0] || !S ? 0 * _ : _ / 0 : NaN);\n\n        for (f ? (p = 1, a = r.e - s.e) : (f = E, p = x, a = g(r.e / p) - g(s.e / p)), R = S.length, D = k.length, b = (N = new U(_)).d = [], d = 0; S[d] == (k[d] || 0); d++) {\n          ;\n        }\n\n        if (S[d] > (k[d] || 0) && a--, null == o ? (O = o = U.precision, u = U.rounding) : O = c ? o + (r.e - s.e) + 1 : o, O < 0) b.push(1), w = !0;else {\n          if (O = O / p + 2 | 0, d = 0, 1 == R) {\n            for (l = 0, S = S[0], O++; (d < D || l) && O--; d++) {\n              F = l * f + (k[d] || 0), b[d] = F / S | 0, l = F % S | 0;\n            }\n\n            w = l || d < D;\n          } else {\n            for ((l = f / (S[0] + 1) | 0) > 1 && (S = n(S, l, f), k = n(k, l, f), R = S.length, D = k.length), A = R, y = (M = k.slice(0, R)).length; y < R;) {\n              M[y++] = 0;\n            }\n\n            (L = S.slice()).unshift(0), Z = S[0], S[1] >= f / 2 && ++Z;\n\n            do {\n              l = 0, (h = e(S, M, R, y)) < 0 ? (q = M[0], R != y && (q = q * f + (M[1] || 0)), (l = q / Z | 0) > 1 ? (l >= f && (l = f - 1), 1 == (h = e(m = n(S, l, f), M, v = m.length, y = M.length)) && (l--, t(m, R < v ? L : S, v, f))) : (0 == l && (h = l = 1), m = S.slice()), (v = m.length) < y && m.unshift(0), t(M, m, y, f), -1 == h && (h = e(S, M, R, y = M.length)) < 1 && (l++, t(M, R < y ? L : S, y, f)), y = M.length) : 0 === h && (l++, M = [0]), b[d++] = l, h && M[0] ? M[y++] = k[A] || 0 : (M = [k[A]], y = 1);\n            } while ((A++ < D || void 0 !== M[0]) && O--);\n\n            w = void 0 !== M[0];\n          }\n\n          b[0] || b.shift();\n        }\n        if (1 == p) N.e = a, i = w;else {\n          for (d = 1, l = b[0]; l >= 10; l /= 10) {\n            d++;\n          }\n\n          N.e = d + a * p - 1, P(N, c ? o + N.e + 1 : o, u, w);\n        }\n        return N;\n      };\n    }();\n\n    function P(n, e, i, t) {\n      var r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a,\n          d,\n          l,\n          p = n.constructor;\n\n      n: if (null != e) {\n        if (!(d = n.d)) return n;\n\n        for (r = 1, u = d[0]; u >= 10; u /= 10) {\n          r++;\n        }\n\n        if ((s = e - r) < 0) s += x, o = e, c = (a = d[l = 0]) / w(10, r - o - 1) % 10 | 0;else if ((l = Math.ceil((s + 1) / x)) >= (u = d.length)) {\n          if (!t) break n;\n\n          for (; u++ <= l;) {\n            d.push(0);\n          }\n\n          a = c = 0, r = 1, o = (s %= x) - x + 1;\n        } else {\n          for (a = u = d[l], r = 1; u >= 10; u /= 10) {\n            r++;\n          }\n\n          c = (o = (s %= x) - x + r) < 0 ? 0 : a / w(10, r - o - 1) % 10 | 0;\n        }\n        if (t = t || e < 0 || void 0 !== d[l + 1] || (o < 0 ? a : a % w(10, r - o - 1)), f = i < 4 ? (c || t) && (0 == i || i == (n.s < 0 ? 3 : 2)) : c > 5 || 5 == c && (4 == i || t || 6 == i && (s > 0 ? o > 0 ? a / w(10, r - o) : 0 : d[l - 1]) % 10 & 1 || i == (n.s < 0 ? 8 : 7)), e < 1 || !d[0]) return d.length = 0, f ? (e -= n.e + 1, d[0] = w(10, (x - e % x) % x), n.e = -e || 0) : d[0] = n.e = 0, n;\n        if (0 == s ? (d.length = l, u = 1, l--) : (d.length = l + 1, u = w(10, x - s), d[l] = o > 0 ? (a / w(10, r - o) % w(10, o) | 0) * u : 0), f) for (;;) {\n          if (0 == l) {\n            for (s = 1, o = d[0]; o >= 10; o /= 10) {\n              s++;\n            }\n\n            for (o = d[0] += u, u = 1; o >= 10; o /= 10) {\n              u++;\n            }\n\n            s != u && (n.e++, d[0] == E && (d[0] = 1));\n            break;\n          }\n\n          if (d[l] += u, d[l] != E) break;\n          d[l--] = 0, u = 1;\n        }\n\n        for (s = d.length; 0 === d[--s];) {\n          d.pop();\n        }\n      }\n\n      return h && (n.e > p.maxE ? (n.d = null, n.e = NaN) : n.e < p.minE && (n.e = 0, n.d = [0])), n;\n    }\n\n    function R(n, e, i) {\n      if (!n.isFinite()) return V(n);\n      var t,\n          r = n.e,\n          s = O(n.d),\n          o = s.length;\n      return e ? (i && (t = i - o) > 0 ? s = s.charAt(0) + \".\" + s.slice(1) + S(t) : o > 1 && (s = s.charAt(0) + \".\" + s.slice(1)), s = s + (n.e < 0 ? \"e\" : \"e+\") + n.e) : r < 0 ? (s = \"0.\" + S(-r - 1) + s, i && (t = i - o) > 0 && (s += S(t))) : r >= o ? (s += S(r + 1 - o), i && (t = i - r - 1) > 0 && (s = s + \".\" + S(t))) : ((t = r + 1) < o && (s = s.slice(0, t) + \".\" + s.slice(t)), i && (t = i - o) > 0 && (r + 1 === o && (s += \".\"), s += S(t))), s;\n    }\n\n    function L(n, e) {\n      var i = n[0];\n\n      for (e *= x; i >= 10; i /= 10) {\n        e++;\n      }\n\n      return e;\n    }\n\n    function U(n, e, i) {\n      if (e > M) throw h = !0, i && (n.precision = i), Error(l);\n      return P(new n(u), e, 1, !0);\n    }\n\n    function _(n, e, i) {\n      if (e > y) throw Error(l);\n      return P(new n(c), e, i, !0);\n    }\n\n    function k(n) {\n      var e = n.length - 1,\n          i = e * x + 1;\n\n      if (e = n[e]) {\n        for (; e % 10 == 0; e /= 10) {\n          i--;\n        }\n\n        for (e = n[0]; e >= 10; e /= 10) {\n          i++;\n        }\n      }\n\n      return i;\n    }\n\n    function S(n) {\n      for (var e = \"\"; n--;) {\n        e += \"0\";\n      }\n\n      return e;\n    }\n\n    function T(n, e, i, t) {\n      var r,\n          s = new n(1),\n          o = Math.ceil(t / x + 4);\n\n      for (h = !1;;) {\n        if (i % 2 && G((s = s.times(e)).d, o) && (r = !0), 0 === (i = g(i / 2))) {\n          i = s.d.length - 1, r && 0 === s.d[i] && ++s.d[i];\n          break;\n        }\n\n        G((e = e.times(e)).d, o);\n      }\n\n      return h = !0, s;\n    }\n\n    function I(n) {\n      return 1 & n.d[n.d.length - 1];\n    }\n\n    function C(n, e, i) {\n      for (var t, r = new n(e[0]), s = 0; ++s < e.length;) {\n        if (!(t = new n(e[s])).s) {\n          r = t;\n          break;\n        }\n\n        r[i](t) && (r = t);\n      }\n\n      return r;\n    }\n\n    function H(n, e) {\n      var i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f = 0,\n          a = 0,\n          d = 0,\n          l = n.constructor,\n          p = l.rounding,\n          g = l.precision;\n      if (!n.d || !n.d[0] || n.e > 17) return new l(n.d ? n.d[0] ? n.s < 0 ? 0 : 1 / 0 : 1 : n.s ? n.s < 0 ? 0 : n : NaN);\n\n      for (null == e ? (h = !1, c = g) : c = e, u = new l(.03125); n.e > -2;) {\n        n = n.times(u), d += 5;\n      }\n\n      for (c += t = Math.log(w(2, d)) / Math.LN10 * 2 + 5 | 0, i = s = o = new l(1), l.precision = c;;) {\n        if (s = P(s.times(n), c, 1), i = i.times(++a), O((u = o.plus(Z(s, i, c, 1))).d).slice(0, c) === O(o.d).slice(0, c)) {\n          for (r = d; r--;) {\n            o = P(o.times(o), c, 1);\n          }\n\n          if (null != e) return l.precision = g, o;\n          if (!(f < 3 && A(o.d, c - t, p, f))) return P(o, l.precision = g, p, h = !0);\n          l.precision = c += 10, i = s = u = new l(1), a = 0, f++;\n        }\n\n        o = u;\n      }\n    }\n\n    function B(n, e) {\n      var i,\n          t,\n          r,\n          s,\n          o,\n          u,\n          c,\n          f,\n          a,\n          d,\n          l,\n          p = 1,\n          g = n,\n          w = g.d,\n          m = g.constructor,\n          v = m.rounding,\n          N = m.precision;\n      if (g.s < 0 || !w || !w[0] || !g.e && 1 == w[0] && 1 == w.length) return new m(w && !w[0] ? -1 / 0 : 1 != g.s ? NaN : w ? 0 : g);\n      if (null == e ? (h = !1, a = N) : a = e, m.precision = a += 10, t = (i = O(w)).charAt(0), !(Math.abs(s = g.e) < 15e14)) return f = U(m, a + 2, N).times(s + \"\"), g = B(new m(t + \".\" + i.slice(1)), a - 10).plus(f), m.precision = N, null == e ? P(g, N, v, h = !0) : g;\n\n      for (; t < 7 && 1 != t || 1 == t && i.charAt(1) > 3;) {\n        t = (i = O((g = g.times(n)).d)).charAt(0), p++;\n      }\n\n      for (s = g.e, t > 1 ? (g = new m(\"0.\" + i), s++) : g = new m(t + \".\" + i.slice(1)), d = g, c = o = g = Z(g.minus(1), g.plus(1), a, 1), l = P(g.times(g), a, 1), r = 3;;) {\n        if (o = P(o.times(l), a, 1), O((f = c.plus(Z(o, new m(r), a, 1))).d).slice(0, a) === O(c.d).slice(0, a)) {\n          if (c = c.times(2), 0 !== s && (c = c.plus(U(m, a + 2, N).times(s + \"\"))), c = Z(c, new m(p), a, 1), null != e) return m.precision = N, c;\n          if (!A(c.d, a - 10, v, u)) return P(c, m.precision = N, v, h = !0);\n          m.precision = a += 10, f = o = g = Z(d.minus(1), d.plus(1), a, 1), l = P(g.times(g), a, 1), r = u = 1;\n        }\n\n        c = f, r += 2;\n      }\n    }\n\n    function V(n) {\n      return String(n.s * n.s / 0);\n    }\n\n    function j(n, e) {\n      var i, t, r;\n\n      for ((i = e.indexOf(\".\")) > -1 && (e = e.replace(\".\", \"\")), (t = e.search(/e/i)) > 0 ? (i < 0 && (i = t), i += +e.slice(t + 1), e = e.substring(0, t)) : i < 0 && (i = e.length), t = 0; 48 === e.charCodeAt(t); t++) {\n        ;\n      }\n\n      for (r = e.length; 48 === e.charCodeAt(r - 1); --r) {\n        ;\n      }\n\n      if (e = e.slice(t, r)) {\n        if (r -= t, n.e = i = i - t - 1, n.d = [], t = (i + 1) % x, i < 0 && (t += x), t < r) {\n          for (t && n.d.push(+e.slice(0, t)), r -= x; t < r;) {\n            n.d.push(+e.slice(t, t += x));\n          }\n\n          e = e.slice(t), t = x - e.length;\n        } else t -= r;\n\n        for (; t--;) {\n          e += \"0\";\n        }\n\n        n.d.push(+e), h && (n.e > n.constructor.maxE ? (n.d = null, n.e = NaN) : n.e < n.constructor.minE && (n.e = 0, n.d = [0]));\n      } else n.e = 0, n.d = [0];\n\n      return n;\n    }\n\n    function $(n, i) {\n      var t, r, s, o, u, c, f, a, l;\n      if (\"Infinity\" === i || \"NaN\" === i) return +i || (n.s = NaN), n.e = NaN, n.d = null, n;\n      if (v.test(i)) t = 16, i = i.toLowerCase();else if (m.test(i)) t = 2;else {\n        if (!N.test(i)) throw Error(d + i);\n        t = 8;\n      }\n\n      for ((o = i.search(/p/i)) > 0 ? (f = +i.slice(o + 1), i = i.substring(2, o)) : i = i.slice(2), u = (o = i.indexOf(\".\")) >= 0, r = n.constructor, u && (o = (c = (i = i.replace(\".\", \"\")).length) - o, s = T(r, new r(t), o, 2 * o)), o = l = (a = D(i, t, E)).length - 1; 0 === a[o]; --o) {\n        a.pop();\n      }\n\n      return o < 0 ? new r(0 * n.s) : (n.e = L(a, l), n.d = a, h = !1, u && (n = Z(n, s, 4 * c)), f && (n = n.times(Math.abs(f) < 54 ? Math.pow(2, f) : e.pow(2, f))), h = !0, n);\n    }\n\n    function W(n, e, i, t, r) {\n      var s,\n          o,\n          u,\n          c,\n          f = n.precision,\n          a = Math.ceil(f / x);\n\n      for (h = !1, c = i.times(i), u = new n(t);;) {\n        if (o = Z(u.times(c), new n(e++ * e++), f, 1), u = r ? t.plus(o) : t.minus(o), t = Z(o.times(c), new n(e++ * e++), f, 1), void 0 !== (o = u.plus(t)).d[a]) {\n          for (s = a; o.d[s] === u.d[s] && s--;) {\n            ;\n          }\n\n          if (-1 == s) break;\n        }\n\n        s = u, u = t, t = o, o = s, 0;\n      }\n\n      return h = !0, o.d.length = a + 1, o;\n    }\n\n    function J(n, e) {\n      var i,\n          r = e.s < 0,\n          s = _(n, n.precision, 1),\n          o = s.times(.5);\n\n      if ((e = e.abs()).lte(o)) return t = r ? 4 : 1, e;\n      if ((i = e.divToInt(s)).isZero()) t = r ? 3 : 2;else {\n        if ((e = e.minus(i.times(s))).lte(o)) return t = I(i) ? r ? 2 : 3 : r ? 4 : 1, e;\n        t = I(i) ? r ? 1 : 4 : r ? 3 : 2;\n      }\n      return e.minus(s).abs();\n    }\n\n    function z(n, e, t, r) {\n      var u,\n          c,\n          f,\n          h,\n          a,\n          d,\n          l,\n          p,\n          g,\n          w = n.constructor,\n          m = void 0 !== t;\n\n      if (m ? (F(t, 1, s), void 0 === r ? r = w.rounding : F(r, 0, 8)) : (t = w.precision, r = w.rounding), n.isFinite()) {\n        for (m ? (u = 2, 16 == e ? t = 4 * t - 3 : 8 == e && (t = 3 * t - 2)) : u = e, (f = (l = R(n)).indexOf(\".\")) >= 0 && (l = l.replace(\".\", \"\"), (g = new w(1)).e = l.length - f, g.d = D(R(g), 10, u), g.e = g.d.length), c = a = (p = D(l, 10, u)).length; 0 == p[--a];) {\n          p.pop();\n        }\n\n        if (p[0]) {\n          if (f < 0 ? c-- : ((n = new w(n)).d = p, n.e = c, p = (n = Z(n, g, t, r, 0, u)).d, c = n.e, d = i), f = p[t], h = u / 2, d = d || void 0 !== p[t + 1], d = r < 4 ? (void 0 !== f || d) && (0 === r || r === (n.s < 0 ? 3 : 2)) : f > h || f === h && (4 === r || d || 6 === r && 1 & p[t - 1] || r === (n.s < 0 ? 8 : 7)), p.length = t, d) for (; ++p[--t] > u - 1;) {\n            p[t] = 0, t || (++c, p.unshift(1));\n          }\n\n          for (a = p.length; !p[a - 1]; --a) {\n            ;\n          }\n\n          for (f = 0, l = \"\"; f < a; f++) {\n            l += o.charAt(p[f]);\n          }\n\n          if (m) {\n            if (a > 1) if (16 == e || 8 == e) {\n              for (f = 16 == e ? 4 : 3, --a; a % f; a++) {\n                l += \"0\";\n              }\n\n              for (a = (p = D(l, u, e)).length; !p[a - 1]; --a) {\n                ;\n              }\n\n              for (f = 1, l = \"1.\"; f < a; f++) {\n                l += o.charAt(p[f]);\n              }\n            } else l = l.charAt(0) + \".\" + l.slice(1);\n            l = l + (c < 0 ? \"p\" : \"p+\") + c;\n          } else if (c < 0) {\n            for (; ++c;) {\n              l = \"0\" + l;\n            }\n\n            l = \"0.\" + l;\n          } else if (++c > a) for (c -= a; c--;) {\n            l += \"0\";\n          } else c < a && (l = l.slice(0, c) + \".\" + l.slice(c));\n        } else l = m ? \"0p+0\" : \"0\";\n\n        l = (16 == e ? \"0x\" : 2 == e ? \"0b\" : 8 == e ? \"0o\" : \"\") + l;\n      } else l = V(n);\n\n      return n.s < 0 ? \"-\" + l : l;\n    }\n\n    function G(n, e) {\n      if (n.length > e) return n.length = e, !0;\n    }\n\n    function K(n) {\n      return new this(n).abs();\n    }\n\n    function Q(n) {\n      return new this(n).acos();\n    }\n\n    function X(n) {\n      return new this(n).acosh();\n    }\n\n    function Y(n, e) {\n      return new this(n).plus(e);\n    }\n\n    function nn(n) {\n      return new this(n).asin();\n    }\n\n    function en(n) {\n      return new this(n).asinh();\n    }\n\n    function tn(n) {\n      return new this(n).atan();\n    }\n\n    function rn(n) {\n      return new this(n).atanh();\n    }\n\n    function sn(n, e) {\n      n = new this(n), e = new this(e);\n      var i,\n          t = this.precision,\n          r = this.rounding,\n          s = t + 4;\n      return n.s && e.s ? n.d || e.d ? !e.d || n.isZero() ? (i = e.s < 0 ? _(this, t, r) : new this(0)).s = n.s : !n.d || e.isZero() ? (i = _(this, s, 1).times(.5)).s = n.s : e.s < 0 ? (this.precision = s, this.rounding = 1, i = this.atan(Z(n, e, s, 1)), e = _(this, s, 1), this.precision = t, this.rounding = r, i = n.s < 0 ? i.minus(e) : i.plus(e)) : i = this.atan(Z(n, e, s, 1)) : (i = _(this, s, 1).times(e.s > 0 ? .25 : .75)).s = n.s : i = new this(NaN), i;\n    }\n\n    function on(n) {\n      return new this(n).cbrt();\n    }\n\n    function un(n) {\n      return P(n = new this(n), n.e + 1, 2);\n    }\n\n    function cn(n) {\n      if (!n || \"object\" != typeof n) throw Error(a + \"Object expected\");\n      var e,\n          i,\n          t,\n          o = !0 === n.defaults,\n          u = [\"precision\", 1, s, \"rounding\", 0, 8, \"toExpNeg\", -r, 0, \"toExpPos\", 0, r, \"maxE\", 0, r, \"minE\", -r, 0, \"modulo\", 0, 9];\n\n      for (e = 0; e < u.length; e += 3) {\n        if (i = u[e], o && (this[i] = f[i]), void 0 !== (t = n[i])) {\n          if (!(g(t) === t && t >= u[e + 1] && t <= u[e + 2])) throw Error(d + i + \": \" + t);\n          this[i] = t;\n        }\n      }\n\n      if (i = \"crypto\", o && (this[i] = f[i]), void 0 !== (t = n[i])) {\n        if (!0 !== t && !1 !== t && 0 !== t && 1 !== t) throw Error(d + i + \": \" + t);\n\n        if (t) {\n          if (\"undefined\" == typeof crypto || !crypto || !crypto.getRandomValues && !crypto.randomBytes) throw Error(p);\n          this[i] = !0;\n        } else this[i] = !1;\n      }\n\n      return this;\n    }\n\n    function fn(n) {\n      return new this(n).cos();\n    }\n\n    function hn(n) {\n      return new this(n).cosh();\n    }\n\n    function an(n, e) {\n      return new this(n).div(e);\n    }\n\n    function dn(n) {\n      return new this(n).exp();\n    }\n\n    function ln(n) {\n      return P(n = new this(n), n.e + 1, 3);\n    }\n\n    function pn() {\n      var n,\n          e,\n          i = new this(0);\n\n      for (h = !1, n = 0; n < arguments.length;) {\n        if ((e = new this(arguments[n++])).d) i.d && (i = i.plus(e.times(e)));else {\n          if (e.s) return h = !0, new this(1 / 0);\n          i = e;\n        }\n      }\n\n      return h = !0, i.sqrt();\n    }\n\n    function gn(n) {\n      return n instanceof e || n && \"[object Decimal]\" === n.name || !1;\n    }\n\n    function wn(n) {\n      return new this(n).ln();\n    }\n\n    function mn(n, e) {\n      return new this(n).log(e);\n    }\n\n    function vn(n) {\n      return new this(n).log(2);\n    }\n\n    function Nn(n) {\n      return new this(n).log(10);\n    }\n\n    function bn() {\n      return C(this, arguments, \"lt\");\n    }\n\n    function En() {\n      return C(this, arguments, \"gt\");\n    }\n\n    function xn(n, e) {\n      return new this(n).mod(e);\n    }\n\n    function Mn(n, e) {\n      return new this(n).mul(e);\n    }\n\n    function yn(n, e) {\n      return new this(n).pow(e);\n    }\n\n    function qn(n) {\n      var e,\n          i,\n          t,\n          r,\n          o = 0,\n          u = new this(1),\n          c = [];\n      if (void 0 === n ? n = this.precision : F(n, 1, s), t = Math.ceil(n / x), this.crypto) {\n        if (crypto.getRandomValues) for (e = crypto.getRandomValues(new Uint32Array(t)); o < t;) {\n          (r = e[o]) >= 429e7 ? e[o] = crypto.getRandomValues(new Uint32Array(1))[0] : c[o++] = r % 1e7;\n        } else {\n          if (!crypto.randomBytes) throw Error(p);\n\n          for (e = crypto.randomBytes(t *= 4); o < t;) {\n            (r = e[o] + (e[o + 1] << 8) + (e[o + 2] << 16) + ((127 & e[o + 3]) << 24)) >= 214e7 ? crypto.randomBytes(4).copy(e, o) : (c.push(r % 1e7), o += 4);\n          }\n\n          o = t / 4;\n        }\n      } else for (; o < t;) {\n        c[o++] = 1e7 * Math.random() | 0;\n      }\n\n      for (t = c[--o], n %= x, t && n && (r = w(10, x - n), c[o] = (t / r | 0) * r); 0 === c[o]; o--) {\n        c.pop();\n      }\n\n      if (o < 0) i = 0, c = [0];else {\n        for (i = -1; 0 === c[0]; i -= x) {\n          c.shift();\n        }\n\n        for (t = 1, r = c[0]; r >= 10; r /= 10) {\n          t++;\n        }\n\n        t < x && (i -= x - t);\n      }\n      return u.e = i, u.d = c, u;\n    }\n\n    function On(n) {\n      return P(n = new this(n), n.e + 1, this.rounding);\n    }\n\n    function Fn(n) {\n      return (n = new this(n)).d ? n.d[0] ? n.s : 0 * n.s : n.s || NaN;\n    }\n\n    function An(n) {\n      return new this(n).sin();\n    }\n\n    function Dn(n) {\n      return new this(n).sinh();\n    }\n\n    function Zn(n) {\n      return new this(n).sqrt();\n    }\n\n    function Pn(n, e) {\n      return new this(n).sub(e);\n    }\n\n    function Rn(n) {\n      return new this(n).tan();\n    }\n\n    function Ln(n) {\n      return new this(n).tanh();\n    }\n\n    function Un(n) {\n      return P(n = new this(n), n.e + 1, 1);\n    }\n\n    return (e = function n(e) {\n      var i, t, r;\n\n      function s(n) {\n        var e,\n            i,\n            t,\n            r = this;\n        if (!(r instanceof s)) return new s(n);\n        if (r.constructor = s, n instanceof s) return r.s = n.s, void (h ? !n.d || n.e > s.maxE ? (r.e = NaN, r.d = null) : n.e < s.minE ? (r.e = 0, r.d = [0]) : (r.e = n.e, r.d = n.d.slice()) : (r.e = n.e, r.d = n.d ? n.d.slice() : n.d));\n\n        if (\"number\" == (t = typeof n)) {\n          if (0 === n) return r.s = 1 / n < 0 ? -1 : 1, r.e = 0, void (r.d = [0]);\n\n          if (n < 0 ? (n = -n, r.s = -1) : r.s = 1, n === ~~n && n < 1e7) {\n            for (e = 0, i = n; i >= 10; i /= 10) {\n              e++;\n            }\n\n            return void (h ? e > s.maxE ? (r.e = NaN, r.d = null) : e < s.minE ? (r.e = 0, r.d = [0]) : (r.e = e, r.d = [n]) : (r.e = e, r.d = [n]));\n          }\n\n          return 0 * n != 0 ? (n || (r.s = NaN), r.e = NaN, void (r.d = null)) : j(r, n.toString());\n        }\n\n        if (\"string\" !== t) throw Error(d + n);\n        return 45 === n.charCodeAt(0) ? (n = n.slice(1), r.s = -1) : r.s = 1, b.test(n) ? j(r, n) : $(r, n);\n      }\n\n      if (s.prototype = q, s.ROUND_UP = 0, s.ROUND_DOWN = 1, s.ROUND_CEIL = 2, s.ROUND_FLOOR = 3, s.ROUND_HALF_UP = 4, s.ROUND_HALF_DOWN = 5, s.ROUND_HALF_EVEN = 6, s.ROUND_HALF_CEIL = 7, s.ROUND_HALF_FLOOR = 8, s.EUCLID = 9, s.config = s.set = cn, s.clone = n, s.isDecimal = gn, s.abs = K, s.acos = Q, s.acosh = X, s.add = Y, s.asin = nn, s.asinh = en, s.atan = tn, s.atanh = rn, s.atan2 = sn, s.cbrt = on, s.ceil = un, s.cos = fn, s.cosh = hn, s.div = an, s.exp = dn, s.floor = ln, s.hypot = pn, s.ln = wn, s.log = mn, s.log10 = Nn, s.log2 = vn, s.max = bn, s.min = En, s.mod = xn, s.mul = Mn, s.pow = yn, s.random = qn, s.round = On, s.sign = Fn, s.sin = An, s.sinh = Dn, s.sqrt = Zn, s.sub = Pn, s.tan = Rn, s.tanh = Ln, s.trunc = Un, void 0 === e && (e = {}), e && !0 !== e.defaults) for (r = [\"precision\", \"rounding\", \"toExpNeg\", \"toExpPos\", \"maxE\", \"minE\", \"modulo\", \"crypto\"], i = 0; i < r.length;) {\n        e.hasOwnProperty(t = r[i++]) || (e[t] = this[t]);\n      }\n      return s.config(e), s;\n    }(f))[\"default\"] = e.Decimal = e, u = new e(u), c = new e(c), e;\n  }() //    bigDec: require('decimal.js')\n\n});\n\nif (typeof module !== 'undefined') {\n  module.exports = nerdamer;\n}\n\n;"],"sourceRoot":""}