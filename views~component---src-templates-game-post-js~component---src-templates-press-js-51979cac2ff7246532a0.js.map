{"version":3,"sources":["webpack:///./src/mycomponents/game/Views/Description/index.js"],"names":["Description","props","USPS","id","key","height","texts","map","e","i","img","images","USP","className","index","breakpoint","fixed","borderImg","fluid","tag","color","styled","div","parseInt","theme","text","getColor","mediaM"],"mappings":"wLA4BeA,IArBK,SAACC,GACjB,OAAO,kBAACC,EAAD,CAAMC,GAAIF,EAAME,GAAIC,IAAKH,EAAME,GAAIE,OAAQJ,EAAMI,QACnDJ,EAAMK,MAAMC,KAAI,SAACC,EAAGC,GACjB,IAAIC,EAAMT,EAAMU,OAAOV,EAAMU,OAAOF,GAAG,KACvC,OAAO,kBAACG,EAAD,CAAKR,IAAKK,EAAGI,UAAS,MAASC,MAAOL,EAAGM,WAAYd,EAAMc,YAC7CL,GAAOA,EAAIM,OAAS,kBAAC,IAAD,CAAOZ,IAAKK,EAAGN,GAAIM,EACxDI,UAAS,8BAA+BZ,EAAMgB,UAAU,aAAa,IACrED,MAAOf,EAAMU,OAAOF,GAAGO,QACtBN,GAAOA,EAAIQ,OAAS,kBAAC,IAAD,CAAOd,IAAKK,EAAGN,GAAIM,EACxCI,UAAS,gCAAiCZ,EAAMgB,UAAU,aAAa,IACvEC,MAAOjB,EAAMU,OAAOF,GAAGS,QACvB,kBAAC,IAAD,CAAMf,GAAE,OAASM,EAAKU,IAAKlB,EAAMkB,KAAO,KACpCC,MAAOnB,EAAMmB,MAAOP,UAAS,iCAAkCH,EAAID,EAAE,GAAI,EAAE,SAAS,UAAU,KACzFD,SASzB,IAAMN,EAAOmB,IAAOC,IAAV,oEAAGD,CAAH,wLAaJT,EAAMS,IAAOC,IAAV,mEAAGD,CAAH,4gBAK0B,SAAApB,GAC/B,MAA6B,GAAtBsB,SAAStB,EAAMa,UAmBlB,SAAAb,GAAK,OAAIA,EAAMa,MAAM,GAAI,EAAE,eAAe,iBACnC,SAAAb,GAAK,OAAIA,EAAMuB,MAAMC,QAIT,SAAAxB,GAAK,OAAIA,EAAMuB,MAAME,SAASzB,EAAMuB,MAAOvB,EAAMgB,UAAW,cAKhE,SAAAhB,GAAK,OAAIA,EAAMuB,MAAMG,UACtB,SAAA1B,GAAK,OAAIA,EAAMa,MAAM,GAAI,EAAE,MAAM","file":"views~component---src-templates-game-post-js~component---src-templates-press-js-51979cac2ff7246532a0.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {log} from 'utilities/Measure.js';\r\nimport Image from 'gatsby-image';\r\nimport Text from 'views/Text/Text/v1/Text';\r\n\r\n//expects a list of images and texts\r\nconst Description = (props) => {\r\n    return <USPS id={props.id} key={props.id} height={props.height}>\r\n        {props.texts.map((e, i) => {\r\n            let img = props.images?props.images[i]:null;\r\n            return <USP key={i} className={`usp`} index={i} breakpoint={props.breakpoint}>\r\n                                {img && img.fixed && <Image key={i} id={i} \r\n                className={`description-img img-fixed ${props.borderImg?'border-img':''}`} \r\n                fixed={props.images[i].fixed} />}\r\n                {img && img.fluid && <Image key={i} id={i}\r\n                className={`description-img img-fluid   ${props.borderImg?'border-img':''}`} \r\n                fluid={props.images[i].fluid}  />}\r\n                <Text id={`usp-${i}`} tag={props.tag || 'h4'}\r\n                    color={props.color} className={`description-text text-center ${img?i%2===0?'toLeft':'toRight':''}`} >\r\n                        {e}\r\n                </Text>\r\n            </USP>\r\n        })}\r\n    </USPS>\r\n}\r\n\r\n\r\nexport default Description;\r\nconst USPS = styled.div`\r\n  margin: 0px auto;\r\n  width:100%;\r\n  height:100%;\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  display:flex;\r\n  align-items:stretch;\r\n  justify-content:center;\r\n  align-content:center;\r\n  flex-direction: column;\r\n`\r\n//  background-color: ${props => props.theme.textBg};\r\nconst USP = styled.div`\r\n  max-width:100%;\r\n  width:100%;\r\n  flex:1;\r\n  overflow-y: hidden;\r\n  animation: fadeIn 0.5s ease-in ${props => {\r\n    return parseInt(props.index)*0.3;\r\n  }}s forwards;\r\n  opacity:0;\r\n  display:flex;\r\n  align-items:center;\r\n  align-content:center;\r\n  margin: 2px auto;\r\n  .img-fluid{\r\n    width: 100%;\r\n    height:100%;\r\n  }\r\n\r\n  .gatsby-image-wrapper{\r\n    max-width:100%;\r\n  }\r\n  .description-text{\r\n      flex:1;\r\n      display:inline;\r\n      position:relative;\r\n      ${props => props.index%2===1?'float:right;':'float:left;'}\r\n      color: ${props => props.theme.text};\r\n  }\r\n  .border-img{\r\n      margin:10px;\r\n      border: 10px solid ${props => props.theme.getColor(props.theme, props.borderImg, 'neutral')};\r\n  }\r\n\r\n\r\n  flex-direction: column;\r\n  @media (min-width: ${props => props.theme.mediaM}){\r\n    flex-direction: ${props => props.index%2===0?'row':'row-reverse'};\r\n    .toRight{\r\n      text-align:right;\r\n    }\r\n    .toLeft{\r\n      text-align:left;\r\n    }\r\n    .img-fluid{\r\n      width: 50%;\r\n      height:100%;\r\n    }\r\n  }\r\n`\r\n/*\r\n  ${props => {\r\n      if(props.breakpoint !== false){\r\n          return `@media (min-width: ${props.breakpoint || props.theme.mediaM}){\r\n            flex-direction: ${props.index%2===0?'row':'row-reverse'};\r\n            min-height: 150px;\r\n            .toRight{\r\n                text-align:right;\r\n              }\r\n              .toLeft{\r\n                text-align:left;\r\n              }\r\n          }\r\n          `\r\n      }\r\n  }}\r\n\r\n*/"],"sourceRoot":""}