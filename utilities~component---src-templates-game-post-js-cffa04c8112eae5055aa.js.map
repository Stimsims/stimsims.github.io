{"version":3,"sources":["webpack:///./src/utilities/Randomize.js","webpack:///./src/utilities/Game/Flags.js","webpack:///./src/utilities/Generator.js","webpack:///./src/utilities/Game/Latex.js","webpack:///./src/utilities/Merge.js","webpack:///./src/utilities/Iterators.js"],"names":["S4","Math","random","toString","substring","getHash","getRange","min","max","decimailPlace","Error","roundTo","getExponential","lambda","TypeError","log","getGamma","alpha","k","intK","kDiv","alphaDiv","u1","u2","u3","x","i","tmp","floor","pow","getNormal","mu","sigma","x1","v1","v2","s","oldMu","oldSigma","genReady","x2","multiplier","sqrt","addFlag","flags","key","nFlags","Perlin","this","perm","Array","from","length","concat","grad","h","getValue","i0","i1","x0","t0","t1","Random","seed","_seed","prototype","next","nextFloat","opt_minOrMax","opt_max","singleGen","generator","perlin","getPerlin","getRangeFromRand","rand","isPrivate","getFraction","a","b","getMultiple","multiples","ray","isArray","reduce","agg","e","DELETED","get","path","state","changes","defaultValue","merge","result","loGet","undefined","getLocalChanges","game","send","mcq","inputs","mergeStates","temp","keys","move","Object","map","meta","simFields","nState","sKey","console","makeChange","read","dest","showUI","field","indexOf","type","loSet","value","array","mergeArray","toStart","mergeObj","vV","sendEvent","Event","category","id","label","score","isPersistent","addPath","collection","event","mergePaths","segments","first","last","subPath","nS","split","slice","join","getObjectIterator","obj","index","done","reset","getArrayIterator"],"mappings":"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","file":"utilities~component---src-templates-game-post-js-cffa04c8112eae5055aa.js","sourcesContent":["//var simplex = require('simplex-noise');\r\nimport {log} from 'utilities/Measure';\r\nimport {roundTo} from './Format';\r\nconst Y = 1;\r\nconst S4 = function() {\r\n    return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n  };\r\nexport const getHash = () => {\r\n    //return `${Math.random()}`\r\n    return `${S4()+S4()+S4()}`;\r\n};\r\n\r\nexport const getRange = (min = 0, max = 10, decimailPlace = 2) => {\r\n    if(min === true || min === false) throw Error(`generator getRange args have changed, isPrivate dropped, now just min max`)\r\n   // return roundTo(g.getValue()*(max - min) + min, decimailPlace); \r\n    return roundTo(Math.random()*(max - min) + min, decimailPlace); \r\n};\r\n\r\nexport const getExponential = (lambda) => {\r\n    if ('number' !== typeof lambda) {\r\n        throw new TypeError('nextExponential: lambda must be number.');\r\n    }\r\n    if (lambda <= 0) {\r\n        throw new TypeError('nextExponential: ' +\r\n                            'lambda must be greater than 0.');\r\n    }\r\n    return - Math.log(1 - Math.random()) / lambda;\r\n  }\r\n\r\nexport const getGamma = (alpha, k) => {\r\n    var intK, kDiv, alphaDiv;\r\n    var u1, u2, u3;\r\n    var x, i, tmp;\r\n\r\n    if ('number' !== typeof alpha) {\r\n        throw new TypeError('nextGamma: alpha must be number.');\r\n    }\r\n    if ('number' !== typeof k) {\r\n        throw new TypeError('nextGamma: k must be number.');\r\n    }\r\n    if (alpha < 1) {\r\n        throw new TypeError('nextGamma: alpha must be greater than 1.');\r\n    }\r\n    if (k < 1) {\r\n        throw new TypeError('nextGamma: k must be greater than 1.');\r\n    }\r\n\r\n    u1 = Math.random();\r\n    u2 = Math.random();\r\n    u3 = Math.random();\r\n\r\n    intK = Math.floor(k) + 3;\r\n    kDiv = 1 / k;\r\n\r\n    alphaDiv = 1 / alpha;\r\n\r\n    x = 0;\r\n    for (i = 3 ; ++i < intK ; ) {\r\n        x += Math.log(Math.random());\r\n    }\r\n\r\n    x *= - alphaDiv;\r\n\r\n    tmp = Math.log(u3) *\r\n        (Math.pow(u1, kDiv) /\r\n        ((Math.pow(u1, kDiv) + Math.pow(u2, 1 / (1 - k)))));\r\n\r\n    tmp *=  - alphaDiv;\r\n    return x + tmp;\r\n}\r\n\r\nexport const getNormal = (mu, sigma) => {\r\n\r\n    var x1, u1, u2, v1, v2, s, result ;\r\n\r\n    if ('number' !== typeof mu) {\r\n        throw new TypeError('nextNormal: mu must be number.');\r\n    }\r\n    if ('number' !== typeof sigma) {\r\n        throw new TypeError('nextNormal: sigma must be number.');\r\n    }\r\n\r\n    if (mu !== oldMu || sigma !== oldSigma) {\r\n        genReady = false;\r\n        oldMu = mu;\r\n        oldSigma = sigma;\r\n    }\r\n\r\n    if (genReady) {\r\n        genReady = false;\r\n        return (sigma * x2) + mu;\r\n    }\r\n\r\n    u1 = Math.random();\r\n    u2 = Math.random();\r\n\r\n\r\n    //Normalize between -1 and +1\r\n    v1 = (2 * u1) - 1;\r\n    v2 = (2 * u2) - 1;\r\n\r\n    s = (v1 * v1) + (v2 * v2);\r\n\r\n\r\n\r\n    if (s >= 1) {\r\n        return getNormal(mu, sigma);\r\n    }\r\n\r\n    multiplier = Math.sqrt(-2 * Math.log(s) / s);\r\n\r\n    x1 = v1 * multiplier;\r\n    x2 = v2 * multiplier;\r\n\r\n    genReady = true;\r\n    \r\n    return (sigma * x1) + mu; //sigma range, mu  center\r\n}","import {log} from 'utilities/Measure';\r\n\r\nexport const addFlag = (flags, key) => {\r\n    let nFlags = {...flags};\r\n    if(nFlags[key]){\r\n        nFlags[key] = nFlags[key] + 1;\r\n    }else{\r\n        nFlags[key] = 1;\r\n    }\r\n    log(`Game Flags addFlag key ${key} flags`,nFlags);\r\n    return nFlags;\r\n}","\r\n\r\n\r\n//var simplex = require('simplex-noise');\r\nimport {log} from 'utilities/Measure';\r\nimport {roundTo} from './Format';\r\nconst Y = 1;\r\n//var generators = null;\r\n// const prng = (seed) => {\r\n//   this._seed = seed % 2147483647;\r\n//   if (this._seed <= 0) this._seed += 2147483646;\r\n//   return this._seed;\r\n// }\r\nclass Perlin {\r\n  constructor() {\r\n      // Quick and dirty permutation table\r\n      this.perm = (() => {\r\n          const tmp = Array.from({length: 256}, () => Math.floor(Math.random() * 256));\r\n          return tmp.concat(tmp);\r\n      })();\r\n  }\r\n\r\n  grad(i, x) {\r\n      const h = i & 0xf;\r\n      const grad = 1 + (h & 7);\r\n\r\n      if ((h & 8) !== 0) {\r\n          return -grad * x;\r\n      }\r\n\r\n      return grad * x;\r\n  }\r\n\r\n  getValue(x) {\r\n      const i0 = Math.floor(x);\r\n      const i1 = i0 + 1;\r\n\r\n      const x0 = x - i0;\r\n      const x1 = x0 - 1;\r\n\r\n      let t0 = 1 - x0 * x0;\r\n      t0 *= t0;\r\n\r\n      let t1 = 1 - x1 * x1;\r\n      t1 *= t1;\r\n\r\n      const n0 = t0 * t0 * this.grad(this.perm[i0 & 0xff], x0);\r\n      const n1 = t1 * t1 * this.grad(this.perm[i1 & 0xff], x1);\r\n\r\n      return 0.395 * (n0 + n1); //Output is between -1 and 1.\r\n  }\r\n}\r\nfunction Random(seed) {\r\n  this._seed = seed % 2147483647;\r\n  if (this._seed <= 0) this._seed += 2147483646;\r\n}\r\n\r\n/**\r\n * Returns a pseudo-random value between 1 and 2^32 - 2.\r\n */\r\nRandom.prototype.next = function () {\r\n  return this._seed = this._seed * 16807 % 2147483647;\r\n};\r\n\r\nconst S4 = function() {\r\n  return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n};\r\n/**\r\n * Returns a pseudo-random floating point number in range [0, 1).\r\n */\r\nRandom.prototype.nextFloat = function (opt_minOrMax, opt_max) {\r\n  // We know that result of next() will be 1 to 2147483646 (inclusive).\r\n  return (this.next() - 1) / 2147483646;\r\n};\r\nfunction Gen(generator){\r\n  //0 produces flakey results, cant garuntee equality so reject if seed is 0\r\n  /** NORMAL DIST */\r\n  var oldMu, oldSigma;\r\n  var x2, multiplier, genReady;\r\n  var perlin = new Perlin();\r\n  var g = {\r\n    getPerlin(x){ //between 0 and 1\r\n      return perlin.getValue(x);\r\n    },\r\n    getHash(){\r\n      //return `${Math.random()}`\r\n      return `${S4()+S4()+S4()}`;\r\n    },\r\n    getValue(){\r\n      return generator.nextFloat();\r\n    },\r\n    getRange: function(min = 0, max = 10, decimailPlace = 2){\r\n      if(min === true || min === false) throw Error(`generator getRange args have changed, isPrivate dropped, now just min max`)\r\n     // return roundTo(g.getValue()*(max - min) + min, decimailPlace); \r\n      return roundTo(Math.random()*(max - min) + min, decimailPlace); \r\n    },\r\n    getRangeFromRand: function(rand, min, max){\r\n      return rand*(max-min) + min;\r\n    },\r\n    getExponential(isPrivate = false, lambda){\r\n      if ('number' !== typeof lambda) {\r\n          throw new TypeError('nextExponential: lambda must be number.');\r\n      }\r\n      if (lambda <= 0) {\r\n          throw new TypeError('nextExponential: ' +\r\n                              'lambda must be greater than 0.');\r\n      }\r\n      return - Math.log(1 - this.getValue(isPrivate)) / lambda;\r\n    },\r\n    getGamma(isPrivate = false, alpha, k) {\r\n        var intK, kDiv, alphaDiv;\r\n        var u1, u2, u3;\r\n        var x, i, tmp;\r\n\r\n        if ('number' !== typeof alpha) {\r\n            throw new TypeError('nextGamma: alpha must be number.');\r\n        }\r\n        if ('number' !== typeof k) {\r\n            throw new TypeError('nextGamma: k must be number.');\r\n        }\r\n        if (alpha < 1) {\r\n            throw new TypeError('nextGamma: alpha must be greater than 1.');\r\n        }\r\n        if (k < 1) {\r\n            throw new TypeError('nextGamma: k must be greater than 1.');\r\n        }\r\n  \r\n        u1 = this.getValue(isPrivate);\r\n        u2 = this.getValue(isPrivate);\r\n        u3 = this.getValue(isPrivate);\r\n\r\n        intK = Math.floor(k) + 3;\r\n        kDiv = 1 / k;\r\n\r\n        alphaDiv = 1 / alpha;\r\n\r\n        x = 0;\r\n        for (i = 3 ; ++i < intK ; ) {\r\n            x += Math.log(this.getValue(isPrivate));\r\n        }\r\n\r\n        x *= - alphaDiv;\r\n\r\n        tmp = Math.log(u3) *\r\n            (Math.pow(u1, kDiv) /\r\n            ((Math.pow(u1, kDiv) + Math.pow(u2, 1 / (1 - k)))));\r\n\r\n        tmp *=  - alphaDiv;\r\n        return x + tmp;\r\n    },\r\n    getNormal(mu, sigma) {\r\n\r\n          var x1, u1, u2, v1, v2, s, result ;\r\n\r\n          if ('number' !== typeof mu) {\r\n              throw new TypeError('nextNormal: mu must be number.');\r\n          }\r\n          if ('number' !== typeof sigma) {\r\n              throw new TypeError('nextNormal: sigma must be number.');\r\n          }\r\n\r\n          if (mu !== oldMu || sigma !== oldSigma) {\r\n              genReady = false;\r\n              oldMu = mu;\r\n              oldSigma = sigma;\r\n          }\r\n\r\n          if (genReady) {\r\n              genReady = false;\r\n              return (sigma * x2) + mu;\r\n          }\r\n\r\n          u1 = Math.random();\r\n          u2 = Math.random();\r\n\r\n\r\n          //Normalize between -1 and +1\r\n          v1 = (2 * u1) - 1;\r\n          v2 = (2 * u2) - 1;\r\n\r\n          s = (v1 * v1) + (v2 * v2);\r\n\r\n\r\n\r\n          if (s >= 1) {\r\n              return this.getNormal(mu, sigma);\r\n          }\r\n\r\n          multiplier = Math.sqrt(-2 * Math.log(s) / s);\r\n\r\n          x1 = v1 * multiplier;\r\n          x2 = v2 * multiplier;\r\n\r\n          genReady = true;\r\n          \r\n          return (sigma * x1) + mu; //sigma range, mu  center\r\n    }\r\n  }\r\n  return g;\r\n};\r\nconst singleGen = new Gen(new Random(5000))\r\n\r\nexport default singleGen;\r\n\r\n","import {log} from 'utilities/Measure';\r\n\r\n\r\nexport const getFraction = (a, b) => {\r\n    \r\n    let f =`\\\\frac{${a}}{${b}}`;\r\n    return f;\r\n}\r\n\r\n\r\nexport const getMultiple = (multiples, b) => {\r\n    let ray = multiples;\r\n    if(!Array.isArray(multiples)){\r\n        ray = [multiples, b]; //lazy to update all fun from the old sig\r\n    }\r\n    let m = ray.reduce((agg, e, i) => {\r\n        return `${agg}${i===0?``:` \\\\cdot `}${e}`;\r\n    })\r\n    return m;\r\n}\r\n","\r\nimport loSet from 'lodash/set';\r\nimport loGet from 'lodash/get';\r\nimport {sendEvent, setCustom, log, addToDataLayer, EXP_1, trackPersistent} from './Measure.js';\r\nimport {Event} from './Create';\r\n\r\n\r\nexport const DELETED = 'DELETED';\r\nexport const get = (path, state, changes, defaultValue, merge) => {\r\n    let result = loGet(changes, path, undefined);\r\n    if(result === null || result === DELETED){\r\n        return null;\r\n    }else if(result && (Array.isArray(result) || typeof result === 'object') && merge){ //bug? if is non iterable\r\n        result = {...loGet(state, path, {}), ...result}\r\n    }else if(!result){\r\n        result = loGet(state, path, null);\r\n    }\r\n    if(result === DELETED){\r\n        return null;\r\n    }\r\n    return result || defaultValue;\r\n}\r\n\r\nexport const getLocalChanges = (game ) => {\r\n    let send = {};\r\n    for(let key in game.changes){\r\n      //  send.paths[key] = loGet(game, key);\r\n        send[key] = loGet(game, key);\r\n    }\r\n    return {mcq: game.mcq, inputs: send};\r\n}\r\nexport const mergeStates = (state, changes) => {\r\n    delete changes.temp;\r\n    //TODO - arrays are toxic for this memory model, change transform structure\r\n    let keys = {move: true};\r\n    Object.keys(changes).map(e => {keys[e] = true});\r\n    state.meta.simFields.map(e => {\r\n        keys[e] = true;\r\n    })\r\n    let nState = {...state};\r\n    for(let key in keys){\r\n        if(typeof changes[key] === 'string' || typeof changes[key] === 'number' \r\n            || typeof changes[key] === 'boolean'){\r\n            nState[key] = changes[key];\r\n        }else if(Array.isArray(state[key])){\r\n            let keys = Object.keys(nState[key]);\r\n            keys = keys.map(k => {\r\n                return nState[key][k];\r\n            })\r\n            nState[key] = keys;\r\n        }else{\r\n            try{\r\n                for(let sKey in changes[key]){\r\n                    if(!nState[key]) nState[key] = {};\r\n                    if(changes[key][sKey] || changes[key][sKey] === 0){\r\n                        nState[key][sKey] = changes[key][sKey];\r\n                    }else{\r\n                        delete nState[key][sKey];\r\n                    }\r\n                }\r\n            }catch(e){\r\n                log(`newTree mergeStates error setting key ${key} e`, e, 'error');\r\n                throw e;\r\n            }\r\n        }\r\n        \r\n    }\r\n    console.log(`mergeState new keys ${Object.keys(keys)} changes`, changes);\r\n    console.log(`mergeState new state`, nState);\r\n    return nState;\r\n}\r\n\r\n//TODO test: can i write a change manually to changes? 'path = change.testId = {'flags.whatever': 15}?\r\nexport const makeChange = (read, dest, changes, showUI, simFields = ['values', 'mcq']) => {\r\n    if(!dest.changes) dest.changes = {};\r\n   \r\n\r\n    changes.map(e => {\r\n        if(e){//sometimes a change can be null\r\n            simFields.map(field => {\r\n                if(e.path && e.path.indexOf(field + '.') > -1){\r\n                    dest.changes[e.path] = true;\r\n                }\r\n            })\r\n            switch(e.type){   \r\n                case 'set':\r\n                    loSet(dest, e.path, e.value);\r\n                    break;\r\n                case 'merge':\r\n                    if(e.array){\r\n                        let mergeArray = loGet(dest, e.path, []);\r\n                        if(e.toStart){\r\n                            loSet(dest, e.path, [e.value, ...mergeArray]);\r\n                        }else{\r\n                            loSet(dest, e.path, [...mergeArray, e.value]);\r\n                        }\r\n                    }else{\r\n                        //let mergeObj = loGet(dest, e.path, {});\r\n                        let mergeObj = get(e.path, read, dest, {}, true);\r\n                        let vV =  {...mergeObj, ...e.value};\r\n                        loSet(dest, e.path, vV);\r\n                    }\r\n                    break;\r\n                case 'mcq':\r\n                    if(!dest.mcq) dest.mcq = {};\r\n                    dest.mcq[e.key] = e;\r\n                    sendEvent(new Event(e.category, e.id, e.label, e.score, e.isPersistent));\r\n                    showUI('feedback', {id: e.key, score: e.score});\r\n                    break;\r\n                case 'add': //transition method for collections\r\n                    let addPath = `${e.collection}.${e.id}`;\r\n                    loSet(dest, addPath, e.value);\r\n                    break;\r\n                case 'gaevent':\r\n                    if(!e.event) throw Error(`Merge makeChange type mcq requires an event`);\r\n                    if(e.event.value && e.event.value > 0 && e.event.value < 1) throw new Error(`event value should be an integer, got ${e.event.value}`);\r\n                    sendEvent(e.event, e.isPersistent);\r\n                    break;\r\n                // case 'gacustom': //setCustom = (dimension, value)\r\n                //     if(!e.dimension || !e.hasOwnProperty('value')) throw new Error(`gacustom must have dimension and value`, e);\r\n                //     trackPersistent(e.dimension, e.value);\r\n                //     break;\r\n                case 'experiment':\r\n                    throw new Error(`Merge makeChange experiment is not in use`);\r\n                    // if(e.key){\r\n                    //     addToDataLayer(e.key, e.value);\r\n                    // }\r\n                    // break;\r\n                    \r\n            }\r\n        }\r\n    });\r\n    return dest;\r\n}\r\n\r\nexport const mergePaths = (state, changes) => {\r\n    //doesn't track changes, server updates are not optional\r\n    let nS = state, segments, first, last, subPath, subObj;\r\n    for(let path in changes){\r\n        if(changes[path] || changes[path] === 0){\r\n            nS = loSet(state, path, changes[path]);\r\n        }else{\r\n            segments = path.split('.');\r\n            first = segments.slice(0, -1);\r\n            last = segments[segments.length - 1];\r\n            subPath = first.join('.');\r\n            subObj = loGet(state, subPath);\r\n            delete subObj[last];\r\n        }\r\n    }\r\n    return nS;\r\n}","import {log} from 'utilities/Measure';\r\n\r\nexport const getObjectIterator = (obj) => {\r\n    let keys = Object.keys(obj);\r\n    let index = 0;\r\n    return {\r\n        next: ()=>{\r\n            if(index<keys.length){\r\n                index++;\r\n                return {value: {key: keys[index-1], value: obj[keys[index-1]]}, done: false}\r\n            }else{\r\n                return {done: true};\r\n            }\r\n        },\r\n        reset: ()=>{index = 0}\r\n    }\r\n}\r\n\r\nexport const getArrayIterator = (ray) => {\r\n    let index = 0;\r\n    return {\r\n        next: ()=>{\r\n            if(index<ray.length){\r\n                index++;\r\n                return {value: {key: index-1, value: ray[index-1]}, done: false}\r\n            }else{\r\n                return {done: true};\r\n            }\r\n        },\r\n        reset: ()=>{index = 0}\r\n    }\r\n}"],"sourceRoot":""}