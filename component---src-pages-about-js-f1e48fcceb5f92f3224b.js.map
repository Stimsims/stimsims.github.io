{"version":3,"sources":["webpack:///./src/pages/about.js"],"names":["fields","IndexPage","props","useState","formSent","setFormSent","key","title","data","site","siteMetadata","center","AboutLayout","className","tag","color","id","subtitle","netlify","form","onFormOver","noAnalytics","styled","div","theme","mediaL","secondary","pageQuery"],"mappings":"8FAAA,8MAcMA,EAAS,CACX,CAAC,KAAQ,QAAS,GAAK,QAAS,KAAQ,uBACxC,CAAC,KAAQ,OAAQ,GAAK,UAAW,KAAQ,iBAiD9BC,UA/CG,SAACC,GAAW,IAAD,EACOC,oBAAS,GAAlCC,EADkB,KACRC,EADQ,KAK5B,OACK,kBAAC,IAAD,CAAeC,IAAI,cACf,kBAAC,IAAD,CAAQC,MAAK,UAAYL,EAAMM,KAAKC,KAAKC,aAAaH,QACtD,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAQI,QAAM,EAACJ,MAAK,2BACpB,kBAACK,EAAD,CAAaC,UAAU,eACrB,yBAAKA,UAAU,eACX,kBAAC,IAAD,CAAMA,UAAU,SAAhB,4IAEA,kBAAC,IAAD,CAAMA,UAAU,SAAhB,2VAIA,kBAAC,IAAD,CAAMA,UAAU,SAAhB,qOAGA,kBAAC,IAAD,CAAMA,UAAU,SAAhB,iOAGA,kBAAC,IAAD,CAAMC,IAAI,KAAKD,UAAU,qBAAzB,yBACA,kBAAC,IAAD,MACCT,GAAY,kBAAC,IAAD,CAAMS,UAAU,cAAcE,MAAM,WAApC,4EACXX,GAAY,kBAAC,IAAD,KACN,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMY,GAAG,eAAeC,SAAS,SAASC,SAAO,EAACC,KAAMnB,EAAQoB,WA3BrE,WACff,GAAY,IA0BgGgB,aAAW,UAoB/H,IAAMT,EAAcU,IAAOC,IAAV,yEAAGD,CAAH,gWACA,SAAApB,GAAK,OAAIA,EAAMsB,MAAMC,UAIb,SAAAvB,GAAK,OAAIA,EAAMsB,MAAMC,UAwBd,SAAAvB,GAAK,OAAIA,EAAMsB,MAAME,aAClB,SAAAxB,GAAK,OAAIA,EAAMsB,MAAME,aAU3CC,EAAS,c","file":"component---src-pages-about-js-f1e48fcceb5f92f3224b.js","sourcesContent":["import React, {useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types'\r\nimport { graphql, Link } from 'gatsby';\r\nimport Header from 'views/Header/Header.js';\r\nimport {Helmet} from 'react-helmet';\r\nimport SiteContainer from 'views/Container/Container.js';\r\nimport Meta from 'views/SEO/Meta/Meta';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport Form from 'views/Form/index.js';\r\nimport Profiles from 'views/SEO/Social/Profiles';\r\nimport Section from 'views/Box/Section/index';\r\nimport BoxBars from 'views/Box/Bars/index';\r\n\r\nconst fields = [\r\n    {\"type\": \"email\", \"id\":\"email\", \"text\": \"Your e-mail address\"},\r\n    {\"type\": \"text\", \"id\":\"comment\", \"text\": \"Your message\"},\r\n]\r\nconst IndexPage = (props) => {\r\n    const [formSent, setFormSent] = useState(false);\r\n    const handleForm = () => {\r\n        setFormSent(true);\r\n    }\r\n return (\r\n      <SiteContainer key=\"index-page\">\r\n          <Helmet title={`Home | ${props.data.site.siteMetadata.title}`} />\r\n          <Meta  />\r\n          <Header center title={`About Stimsims Pty Ltd`} />\r\n          <AboutLayout className=\"anim-fadeIn\">\r\n            <div className=\"pane pane-1\">\r\n                <Text className=\"block\" >Stimsims Pty Ltd is the company under which I present my \r\n                story driven math problems to the internet. I am based in Melbourne, Australia.</Text>\r\n                <Text className=\"block\" >Stimsims games are choice-based games that use stories to explore math problems.\r\n                Each math game has a randomized simulation, making every game and it's answers unique. Players get\r\n                immediate feedback on their answers, and a detailed performance report with their scores and\r\n                notes on their answers. These reports may be uploaded to Google Drive.</Text>\r\n                <Text className=\"block\" >The games also collect anonymous analytics, which are then displayed\r\n                in reports on aggregate player choices. I show and analyse these game reports in my blog. I also\r\n                discuss the strengths and weaknesses of analytics in games.</Text>\r\n                <Text className=\"block\" >If you've any questions, or would like to chat about my experimental\r\n                games, please feel free to contact me via twitter, or the contact form below. I usually get\r\n                back to people in a few days (unless I'm manically working).</Text>\r\n                <Text tag=\"h4\" className=\"block text-center\">Social Media Profiles</Text>\r\n                <Profiles />\r\n                {formSent && <Text className=\"text-center\" color=\"primary\" >Thanks for the message! I'll likely take a few days to get back to you.</Text>}\r\n                {!formSent && <Section>\r\n                        <BoxBars>\r\n                            <Form id=\"contact-form\" subtitle=\"Say Hi\" netlify form={fields} onFormOver={handleForm} noAnalytics/>\r\n                        </BoxBars>\r\n                    </Section>}\r\n            </div>\r\n\r\n          </AboutLayout>\r\n      </SiteContainer>\r\n    )\r\n}\r\n\r\nIndexPage.propTypes = {\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      edges: PropTypes.array,\r\n    })\r\n  }),\r\n}\r\n\r\nexport default IndexPage;\r\n\r\nconst AboutLayout = styled.div`\r\n    max-width: ${props => props.theme.mediaL};\r\n    margin: auto;\r\n    width:100%;\r\n\r\n    @media (min-width: ${props => props.theme.mediaL}){\r\n        .pane-1{\r\n            width: 70%;\r\n        }\r\n        .pane-2{\r\n            width: 30%;\r\n        }\r\n        @supports (display: flex) {\r\n            flex-direction:row;\r\n            .pane-1{\r\n                flex: 1;\r\n                width:100%;\r\n            }\r\n            .pane-2{\r\n                width: 300px;\r\n                margin: auto;\r\n            }\r\n        }\r\n    }\r\n\r\n    #contactForm{\r\n        box-sizing: border-box;\r\n        padding:10px 10px;\r\n        margin:20px auto;\r\n        border-top: 1px solid ${props => props.theme.secondary};\r\n        border-bottom: 1px solid ${props => props.theme.secondary};\r\n        text-align: center;\r\n    }\r\n`\r\n\r\n// const TwitterFeed = styled.div`\r\n//     display: inline-block;\r\n//     width: 300px;  flex-direction: row-reverse;\r\n// `\r\n\r\nexport const pageQuery = graphql`\r\n  query AboutQuery {\r\n        site {\r\n            siteMetadata {\r\n                ...siteDataFragment\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n/**\r\n * \r\n *     \"form\":[\r\n        {\"type\": \"scale\", \"id\":\"scifi\", \"text\": \"How much do you like science fiction stories?\", \"value\": \"3\"},\r\n        {\"type\": \"mc\", \"id\":\"favchar\", \"text\": \"which was not a character in the story?\", \"options\": [\"Maya\", \"June\", \"Neptune\"], \"value\": null},\r\n        {\"type\": \"mc\", \"id\":\"favvar\", \"text\": \"which was your favorite variable?\", \"options\": [\"time\", \"speed\", \"energy\", \"weight\"], \"value\": null}\r\n    ],\r\n * \r\n * \r\n * const Container = styled.div`\r\n    ${props => props.layoutRelative?'position: relative;':''}\r\n    width: 100%; \r\n    height:100%;\r\n   \r\n    overflow-x:hidden;\r\n    ${props => props.noScroll?'':'overflow-y:scroll;'}\r\n\r\n    ${props => props.fontsize?'font-size: ' + props.fontsize + 'px':''}; \r\n    ${props => {\r\n        if(props.minHeight){\r\n            return `min-height: ${props.minHeight};`\r\n        }\r\n    }}\r\n    box-sizing: border-box;\r\n    padding: 0px;\r\n    padding-bottom:20px;\r\n    @supports (display: flex) {\r\n        display: flex;\r\n        flex-wrap:wrap;\r\n        justify-content: space-evenly;\r\n        align-items: stretch;\r\n        align-content: stretch;\r\n  \r\n    }\r\n\r\n`\r\n */"],"sourceRoot":""}