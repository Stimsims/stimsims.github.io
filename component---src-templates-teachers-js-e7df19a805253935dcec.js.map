{"version":3,"sources":["webpack:///./src/apis/classroom/getters/SelectStudents/index.js","webpack:///./src/apis/classroom/CreateCourseWork/index.js","webpack:///./src/apis/classroom/interfaces/teachers/CreateAssignment/index.js","webpack:///./src/apis/classroom/MarkAssignments/index.js","webpack:///./src/apis/classroom/interfaces/teachers/MarkAssignments/index.js","webpack:///./src/apis/classroom/interfaces/teachers/index.js","webpack:///./src/templates/teachers.js","webpack:///./src/apis/SignIn/GetGapi.js","webpack:///./src/apis/SignIn/SignIn.js","webpack:///./src/apis/classroom/getters/SelectCourseWork/classroom.css.js","webpack:///./src/apis/classroom/getters/SelectCourseWork/index.js","webpack:///./src/apis/config.js","webpack:///./src/apis/firebase/gapiFunctions.js","webpack:///./src/apis/firebase/cloudFunctions.js","webpack:///./src/apis/classroom/getters/SelectCourse/index.js","webpack:///./src/apis/LoadScript.js"],"names":["SubscriptionHoC","props","useState","students","setStudents","selectedStudents","setSelectedStudents","useEffect","getStudents","courseId","Error","doSubscribe","listStudents","e","map","label","profile","name","fullName","value","userId","cloudCatch","onError","div","key","ANIM_LAYOUT_OVERLAP","Text","text","Select","id","options","isMulti","placeholder","onInput","val","Button","bgColor","width","margin","length","Loading","delay","log","view","error","setError","fsm","setFsm","selectStudents","setSelectStudents","setCourseWorkId","setCourseId","courseWorkUrl","setCourseWorkUrl","date","setDate","err","getDay","hours","v","createCourseWorkForCourse","payload","hour","r","url","getParentUrl","getFullUrl","cw","meta","title","snippet","submissionModificationMode","maxPoints","associatedWithDeveloper","dueDate","year","month","day","dueTime","minutes","seconds","nanos","student","assigneeMode","individualStudentsOptions","createCoursework","alternateLink","changeFsm","d","getFullYear","getMonth","getDate","getHours","getMinutes","className","color","compact","SelectCourse","onSelect","href","target","Time","onClick","styleTitle","position","top","left","transform","CreateView","sendTo","Fragment","style","tag","CreateAssignmentTrigger","Box","activate","teacherCreatePermissions","permissions","teacherMarkPermissions","assignments","setAssignments","grades","setGrades","totalAssignments","setTotalAssignments","changeState","courseWorkId","getAssignments","cId","cwId","lookAtAssignments","results","nGrades","g","gameGrade","doMarkAssignments","returnAssignment","markGradedAssignments","handleGradeChange","link","split","slice","join","getAssignmentsLink","i","Input","hasOwnProperty","inputWidth","autoUpdate","validate","numericality","greaterThanOrEqualTo","lessThanOrEqualTo","onlyInteger","glow","SelectCourseWork","renderState","MarkAssignmentsView","MarkAssignments","MarkAssignmentsTrigger","AuthenticatedUserAccount","Subscribable","SignIn","getItem","setSendTo","setActive","storeItem","doSignIn","TeacherWrapper","SLIDE_UP","Modal","active","isSignedIn","onClose","doSignOut","CreateAssignment","getUrl","styled","theme","mediaM","secondary","Teachers","addMenuItem","onBack","menuItems","navigate","path","import","Header","center","CourseWorkView","pageQuery","TeachersWrapper","data","game","site","siteMetadata","config","clientId","scope","discoveryDocs","LoadScript","apiKey","script","onLoad","gapi","load","client","init","onApiInit","sendError","signInOptions","provider","firebase","auth","TwitterAuthProvider","PROVIDER_ID","FacebookAuthProvider","uiConfig","signInFlow","callbacks","SignOutWrapper","SignInHoC","View","redirectUrl","needsGoogle","isGapiReady","setIsGapiReady","user","setUser","uiInstance","setUiInstance","onAuthStateChanged","getUser","deleteUi","getUi","isSigningIn","window","firebaseui","showSignInUi","apps","initializeApp","globalHistory","location","hostname","setFirebaseToWindow","ref","onSignOut","signOut","success","attempts","console","ui","setPersistence","Auth","Persistence","NONE","resetUi","signInSuccessUrl","signInSuccessWithAuthResult","postSignIn","startUi","fui","AuthUI","getInstance","getUiId","delete","reset","newfui","google","GoogleAuthProvider","scopes","customParameters","getGoogleProvider","start","authResult","credential","setToken","access_token","accessToken","getUrlHash","u","uid","email","displayName","photoURL","phoneNumber","createTime","metadata","creationTime","lastTime","lastSignInTime","providerData","reduce","agg","el","providerId","SignInWrapper","Helmet","type","rel","GetGapi","StateBackground","signingIn","StateView","IconButton","icon","fontSize","trget","deleteUser","currentUser","zUi","zTop","List","section","courseWork","setCourseWork","nextPageToken","setNextPageToken","handleGetCourseWork","getCourseWork","pageSize","result","filteredCw","filter","f","filterByTitle","indexOf","adj","Date","toLocaleDateString","height","rotate","authDomain","databaseURL","projectId","storageBucket","studentPermissions","drivePermissions","classroomThen","Array","isArray","createReport","body","reportId","reportLink","docType","mediaType","params","appProps","fields","appProperties","media","mimeType","drive","files","create","contentType","then","createAFile","webViewLink","request","method","uploadType","published","classroom","courses","studentSubmissions","list","filtered","state","latest","Promise","all","ss","assignmentSubmission","attachments","fileId","driveFile","get","file","grade","mapped","updateMask","draftGrade","assignedGrade","patch","return","turnIn","submissionId","document","modifyAttachments","addAttachments","reclaimSubmission","reclaim","coursework","getCourses","pageToken","getSubmissionsforCourseWork","require","cloudThen","callback","fail","cloudThenInline","message","loadExam","examId","functions","httpsCallable","createExam","settings","deletePlayer","updateExam","node","local","endGame","createPaymentIntent","eventId","paymentType","checkCustomerStatus","refundPayment","validateCaptcha","token","v2","capturePaypalPayment","orderID","authorizationID","setCourses","createCourseWork","a","course","loadScript","createElement","src","onload","appendChild","propTypes","PropTypes","func","string"],"mappings":"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","file":"component---src-templates-teachers-js-e7df19a805253935dcec.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Select from 'views/Select/v2/Select';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport Button from 'views/Button/v1/Button';\r\nimport Loading from 'views/Loading/v1/Loading';\r\nimport SubscriptionHoC from 'views/hoc/Subscribable';\r\nimport {cloudCatch} from 'apis/firebase/cloudFunctions';\r\nimport {listStudents} from 'apis/firebase/gapiFunctions';\r\nimport {log} from 'utilities/Measure.js';\r\nimport {AnimatePresence, motion} from 'framer-motion'; \r\nimport {ANIM_LAYOUT_OVERLAP} from 'game/tree/Animations.js';\r\n\r\nconst SelectStudents = (props) => {\r\n    const [students, setStudents] = useState(null);\r\n    const [selectedStudents, setSelectedStudents] = useState(null);\r\n    useEffect(()=>{\r\n        getStudents();\r\n    }, [])\r\n    const getStudents = () => {\r\n        if(props.courseId){\r\n            props.doSubscribe('selectStudents', \r\n            ()=>{return listStudents(props.courseId)},\r\n            e => {\r\n                setStudents(e.students.map(e => {\r\n                    return {label: e.profile.name.fullName, value: e.userId};\r\n                }));\r\n            },\r\n            cloudCatch, props.onError)\r\n        }else{\r\n            throw new Error(`insufficient information to retrieve students list`);\r\n        }\r\n    }\r\n    const handleSelect = (id, val) => {\r\n        setSelectedStudents(val);\r\n    }\r\n    const onAccept = () => {\r\n        props.onInput(props.id, selectedStudents.map(e => {return {name: e.name, id: e.value}}));\r\n    }\r\n    const onCancel = () => {props.onInput(props.id, null)}\r\n\r\n    return <AnimatePresence>\r\n        {students && <motion.div key=\"students\" {...ANIM_LAYOUT_OVERLAP}>\r\n            <Text text=\"Select the students you would like to assign this coursework to. You can change this later, too.\" />\r\n            <Select id=\"selectStudents\" options={students} isMulti placeholder=\"Select a Students\" onInput={handleSelect} />\r\n            <Button onInput={onCancel} bgColor=\"neutral\" width=\"46%\" margin=\"2%\">Cancel</Button>\r\n           {selectedStudents && selectedStudents.length > 0 &&  <Button onInput={onAccept} width=\"46%\" margin=\"2%\" >Okay</Button>}\r\n        </motion.div>}\r\n        {!students && <motion.div key=\"loading\" {...ANIM_LAYOUT_OVERLAP}>\r\n            <Loading delay={0} text=\"Retrieving your students\"/>\r\n            </motion.div>}\r\n    </AnimatePresence>\r\n}\r\n\r\nSelectStudents.propTypes = {\r\n    courseId: PropTypes.string,\r\n    onInput: PropTypes.func,\r\n    onError: PropTypes.func,\r\n}\r\n\r\nexport default SubscriptionHoC(SelectStudents);\r\n","import React, {useState, useEffect} from 'react';\r\n//import SignIn from './../../SignIn/SignIn';\r\n// import Text from 'game/Views/TextManager/TextManager.js';\r\nimport TextStr from 'views/Text/Text/v1/Text';\r\nimport {Link} from 'gatsby';\r\nimport Btn from 'views/Button/v1/Button.js';\r\nimport Loading from 'views/Loading/v1/Loading';\r\nimport SelectCourse from 'apis/classroom/getters/SelectCourse/index';\r\nimport SelectStudents from 'apis/classroom/getters/SelectStudents/index';\r\nimport {getCourses, createCoursework, modifyAssignees} from 'apis/firebase/gapiFunctions';\r\nimport { globalHistory } from \"@reach/router\";\r\nimport SubscriptionHoC from 'views/hoc/Subscribable';\r\nimport {cloudCatch} from 'apis/firebase/cloudFunctions';\r\nimport Time from 'views/Time/index';\r\nimport {log} from 'utilities/Measure';\r\nimport {teacherCreatePermissions} from 'apis/config';\r\nimport {getUrl, getHost, getFullUrl, getParentUrl} from 'utilities/Format.js';\r\nimport {AnimatePresence, motion} from 'framer-motion'; \r\nimport {ANIM_LAYOUT_OVERLAP} from 'game/tree/Animations.js';\r\n\r\nconst COURSES = 'courses', FSM_CREATE = 'create', FSM_COURSE = 'course', FSM_CREATING = 'creating', \r\n    FSM_EDITING_CW = 'editing', FSM_DUE = 'due', FSM_STUDENT = 'student', FSM_COMPLETE = 'complete', FSM_START ='start';\r\nconst CreateCourseWork = (props) => {\r\n    log(`CreateCourseWork props`, props);\r\n    const [error, setError] = useState(null);\r\n    const [fsm, setFsm] = useState(FSM_CREATE);\r\n    const [selectStudents, setSelectStudents] = useState(false);\r\n    const [courseWorkId, setCourseWorkId] = useState(null);\r\n    const [courseId, setCourseId] = useState(null);\r\n    const [courseWorkUrl, setCourseWorkUrl] = useState(null);\r\n    const [date, setDate] = useState(null);\r\n\r\n    const onError = (err) => {\r\n        setError(err)\r\n    }\r\n    const getAmericanHours = (hour, date) => {\r\n        let r = 0;\r\n       let diff = 10;\r\n        if(hour < 10){\r\n            r = 24-(10-hour);\r\n        }else if(hour > 10){\r\n            r =  hour - 10;\r\n        }\r\n        let f =  r%24;\r\n        return f;\r\n    }\r\n    const getDay = (hours, date) => {\r\n        let v = date;\r\n        if(hours < 10) v = v - 1;\r\n        return v;\r\n    }\r\n    const createCourseWorkForCourse = (key, payload) => {\r\n   \r\n        let id = payload.courseId;\r\n        setCourseId(id);\r\n        setFsm(FSM_CREATING);\r\n        //let url = globalHistory.location.origin + globalHistory.location.pathname;\r\n\r\n        let url = getParentUrl(getFullUrl(), 1);\r\n  \r\n        //due date?\r\n        let cw = {\r\n            courseId: id, \r\n            'title': `Assignment: ${props.meta.title}`,\r\n            'description': `complete the game, then click and complete 'submit assignment' in the report section: ${props.meta.snippet}`,\r\n            'materials': [\r\n               {'link': { 'url': url }}\r\n            ],\r\n            'workType': 'ASSIGNMENT',\r\n            'state': 'PUBLISHED',\r\n            submissionModificationMode: 'MODIFIABLE_UNTIL_TURNED_IN',\r\n\r\n            maxPoints: 100,\r\n            associatedWithDeveloper: true\r\n        }\r\n        if(payload.date){\r\n            cw.dueDate = {\r\n                year: payload.date.year,\r\n                month:payload.date.month + 1,\r\n                day: getDay(payload.date.hours, payload.date.date)\r\n            };\r\n            cw.dueTime = {\r\n                hours: getAmericanHours(payload.date.hours, payload.date),\r\n                minutes: payload.date.minutes,\r\n                seconds:0,\r\n                nanos: 0\r\n            };\r\n        }\r\n        if(payload.student){\r\n            cw.assigneeMode = \"INDIVIDUAL_STUDENTS\";\r\n            cw.individualStudentsOptions = payload.students;\r\n        }\r\n        props.doSubscribe('createCourseWork', \r\n            ()=>{return createCoursework(cw)},\r\n            e => {\r\n                log(`CreateCourseWork coursework result`, e);\r\n                setCourseWorkId(e.id);\r\n                setCourseWorkUrl(e.alternateLink);\r\n                setFsm(FSM_COMPLETE);\r\n            },\r\n            cloudCatch,\r\n            onError\r\n        )\r\n    }\r\n    const changeFsm = (id, val) => {\r\n        if(id === 'mod-yes'){\r\n            setSelectStudents(true);\r\n            setFsm(FSM_COURSE);\r\n        }else if(id === 'mod-no'){\r\n            setSelectStudents(false);\r\n            setFsm(FSM_COURSE);\r\n        }else if(id === COURSES){\r\n            setCourseId(val.courseId);\r\n            setFsm(FSM_DUE);\r\n        }else if(id === FSM_DUE){\r\n            //set date\r\n            let d = {\r\n                year: val.getFullYear(),\r\n                month: val.getMonth(),\r\n                date: val.getDate(),\r\n                hours: val.getHours(),\r\n                minutes: val.getMinutes()\r\n            }\r\n            setDate(d);\r\n            if(selectStudents){\r\n                setFsm(FSM_STUDENT);\r\n            }else{\r\n                createCourseWorkForCourse(id, {courseId, date: d}) \r\n            }\r\n        }else if(id === FSM_STUDENT){\r\n            //if val is null, teacher cancelled, revert state\r\n            if(val){\r\n                createCourseWorkForCourse(id, {students: val.map(e => e.id), courseId, date}) \r\n            }else{\r\n                setFsm(FSM_CREATE);\r\n            }\r\n        }else if(id === FSM_START){\r\n            setFsm(FSM_CREATE);\r\n        }\r\n        // else if(id === FSM_COURSE){\r\n        //     setFsm(FSM_STUDENT);\r\n        // }\r\n    }\r\n\r\n    const renderSelectCourse = () => {\r\n        if(fsm === FSM_CREATE){\r\n            return <div key={FSM_CREATE}>\r\n                {/* <Text text={[{text: 'Would you like to assign the course work to individual students, instead of the whole class?'}]} /> */}\r\n                <TextStr className=\"block text-center\">Would you like to assign the course work to the whole class or individual students?</TextStr>\r\n                <Btn id=\"mod-no\" onInput={changeFsm} compact>the whole class</Btn>\r\n                <Btn id=\"mod-yes\" onInput={changeFsm} compact>individual students</Btn>\r\n               \r\n            </div>\r\n            \r\n        }else if(fsm === FSM_COURSE){\r\n            return <SelectCourse key={FSM_COURSE} id={COURSES} onSelect={changeFsm} onError={onError} />\r\n        }else if(fsm === FSM_CREATING){\r\n            // return <div><Text text=\"creating course work\" /></div>\r\n            return <Loading key={FSM_CREATING} delay={0}  text=\"Creating course work\"/>\r\n        }else if(fsm === FSM_STUDENT){\r\n            return <SelectStudents key={FSM_STUDENT} id={FSM_STUDENT} onInput={changeFsm} onError={onError} courseId={courseId}  />\r\n        }else if(fsm === FSM_EDITING_CW){\r\n           // return <div><Text text=\"updating course work with selected student ids\" /></div>\r\n            return <Loading key={FSM_EDITING_CW} delay={0} text=\"Updating course work with selected student ids\"/>\r\n        }else if(fsm === FSM_COMPLETE){\r\n            return <div key={FSM_COMPLETE} className=\"text-center\">\r\n                <TextStr className=\"block text-center\">Course work created and assigned</TextStr>\r\n                <a href={courseWorkUrl} target=\"_blank\"><TextStr>View Assignment</TextStr></a>\r\n            </div>\r\n        }else if(fsm === FSM_DUE){\r\n            return <div key={FSM_DUE}>\r\n                <TextStr>Select due date</TextStr>\r\n                <Time id={FSM_DUE} onInput={changeFsm} />\r\n            </div>\r\n        }else if(fsm === FSM_START){\r\n            return <div key={FSM_START}>\r\n                        <Btn id={FSM_START} onClick={changeFsm}>Create Assignment</Btn>\r\n                </div>\r\n        }\r\n    }\r\n    const wrapView = (view) => {\r\n        return <motion.div key={fsm} {...ANIM_LAYOUT_OVERLAP}>{view}</motion.div>\r\n    }\r\n    return <AnimatePresence>\r\n            {error && <motion.div key=\"error\" {...ANIM_LAYOUT_OVERLAP}>\r\n                <TextStr  className=\"text-center\" color=\"error\">Error: {error}</TextStr>\r\n            </motion.div>}\r\n            {!error && wrapView(renderSelectCourse())}\r\n      </AnimatePresence>\r\n}\r\n\r\nexport default SubscriptionHoC(CreateCourseWork);\r\n","import React, {useEffect, useState} from 'react';\r\nimport Box from 'views/Box/v1/Box';\r\nimport CreateAssignment from 'apis/classroom/CreateCourseWork/index';\r\nimport {teacherCreatePermissions} from 'apis/config';\r\nimport Button from 'views/Button/v1/Button.js';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport {log} from 'utilities/Measure';\r\n\r\nexport const STORAGE_VALUE = 'create-assignment';\r\nconst styleTitle = {position: 'absolute', top:0, left: '50%', transform: 'translateX(-50%)'};\r\nconst CreateView = (props) => {\r\n    if(props.sendTo === STORAGE_VALUE){\r\n        return <React.Fragment>\r\n                <div style={styleTitle}>\r\n                    <Text tag=\"h2\" className=\"block text-center\">Create Coursework</Text>\r\n                </div>\r\n                <CreateAssignment {...props} meta={props.meta} />\r\n            </React.Fragment>\r\n    }else{\r\n        return null;\r\n    }\r\n    \r\n}\r\n// validate={{numericality: {greaterThan: 8}}}\r\nexport default CreateView ;\r\n\r\nexport const CreateAssignmentTrigger = (props) => {\r\n    return <Box>\r\n        <Button onInput={()=>{\r\n            props.activate(teacherCreatePermissions, STORAGE_VALUE);\r\n        }}>Create Coursework</Button>\r\n    </Box>\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Button from 'views/Button/v1/Button';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport Loading from 'views/Loading/v1/Loading';\r\nimport SelectCourse from 'apis/classroom/getters/SelectCourse/index';\r\nimport SelectCourseWork from 'apis/classroom/getters/SelectCourseWork/index';\r\nimport {teacherMarkPermissions} from 'apis/config';\r\nimport SubscriptionHoC from 'views/hoc/Subscribable';\r\nimport Input from 'views/Input/v1/Input';\r\nimport {lookAtAssignments, markGradedAssignments, markAssignments } from 'apis/firebase/gapiFunctions';\r\nimport {cloudCatch} from 'apis/firebase/cloudFunctions';\r\nimport {log} from 'utilities/Measure';\r\nimport {AnimatePresence, motion} from 'framer-motion'; \r\nimport {ANIM_LAYOUT_OVERLAP} from 'game/tree/Animations.js';\r\n//will need grade to assign\r\nconst ST_DEFAULT = 'def', ST_COURSE = 'course', ST_COURSE_WORK = 'coursework', ST_PROCESSING ='processing', \r\nST_SUBMISSIONS='submissions', ST_GETTING_ASSIGNMENTS = 'gettingAssignments', ST_NOT_FOUND = 'notfound', \r\nST_VIEWING=\"viewing\", ST_MARKING=\"marking\", ST_SUCCESS = 'success', ST_ERR = 'err';\r\nconst MAX_POINTS = 100; //TODO, all assignments should reference the same value\r\nconst MarkAssignmentsView = (props) => {\r\n    const [permissions] = useState(teacherMarkPermissions);\r\n    const [error, setError] = useState(null);\r\n    const [fsm, setFsm] = useState(ST_COURSE);\r\n    const [courseId, setCourseId] = useState(null);\r\n    const [courseWorkId, setCourseWorkId] = useState(null);\r\n    const [assignments, setAssignments] = useState(null);\r\n    const [grades, setGrades] = useState({});\r\n    const [totalAssignments, setTotalAssignments] = useState(0);\r\n\r\n    const changeState = (key, payload) => {\r\n        if(fsm === ST_COURSE){\r\n            setCourseId(payload.courseId);\r\n            setFsm(ST_COURSE_WORK);\r\n        }else if(fsm === ST_COURSE_WORK){\r\n            setCourseWorkId(payload.courseWorkId);\r\n           \r\n            getAssignments(courseId, payload.courseWorkId);\r\n            // setFsm(ST_MARKING);\r\n            // justMarkAssignments(courseId, payload.courseWorkId);\r\n        }else if(fsm === ST_VIEWING){\r\n            setFsm(ST_MARKING);\r\n        }\r\n        else if(fsm === ST_DEFAULT){\r\n            setFsm(ST_COURSE)\r\n        }\r\n    }\r\n\r\n    const getAssignments = (cId, cwId) => {\r\n        //get all submissions, get their attachments, patch each grade in\r\n        setFsm(ST_COURSE_WORK);\r\n        props.doSubscribe('markAssignmentGetAssignments', ()=>{return lookAtAssignments(cId, cwId)},\r\n        (e) => {\r\n            if(e && e.results && e.results.length > 0){\r\n                let nGrades = {...grades};\r\n                e.results.map(g => {\r\n                    // if(g.gameGrade || g.gameGrade === 0){\r\n                    //     nGrades[g.id] = g.gameGrade;\r\n                    // }else{\r\n                    //     nGrades[g.id] = 50;\r\n                    // }\r\n                    nGrades[g.id] = g.gameGrade;\r\n              })\r\n              setAssignments(e.results);\r\n               setTotalAssignments(e.totalAssignments)\r\n               setGrades(nGrades);\r\n               setFsm(ST_VIEWING);\r\n             \r\n            }else{\r\n               setFsm(ST_NOT_FOUND)\r\n            }\r\n        }, \r\n        cloudCatch,\r\n        setError)\r\n     }\r\n    const doMarkAssignments = (returnAssignment) => {\r\n       setFsm(ST_MARKING); //import {firestoreCatch} from 'apis/firebase/utilities';\r\n       props.doSubscribe('markAssignments', \r\n       ()=>{return markGradedAssignments(assignments, grades, returnAssignment)},\r\n       (e) => {\r\n            setFsm(ST_SUCCESS);\r\n        }, cloudCatch, setError);\r\n    }\r\n    const handleGradeChange = (id, value) => {\r\n        setGrades({...grades, [id]: value});\r\n    }\r\n    const getAssignmentsLink = () => {\r\n        if(assignments){\r\n            let link = assignments[0].link;\r\n            let url = link.split('/').slice(0, -1).join('/') + \"/all\";\r\n            return <Text className=\"text-center\" color=\"secondary\">\r\n                        <a href={url} target=\"_blank\">View assignments</a>\r\n                    </Text>\r\n        }\r\n    }\r\n    const renderState = () => {\r\n        switch(fsm){\r\n            // case ST_GETTING_ASSIGNMENTS: return <Loading text=\"Retrieving Assignments\"/>\r\n            case ST_NOT_FOUND: return <div>\r\n                <Text className=\"text-center\" color=\"primary\">Resource not found</Text>\r\n                <Text className=\"text-center\">If there are no turned in assignments, there are no assignments to grade. </Text>\r\n            </div>\r\n            case ST_SUCCESS: return <div>\r\n                <Text className=\"text-center\" color=\"primary\">Assignments have been updated</Text>\r\n                {getAssignmentsLink()}\r\n            </div>\r\n            case ST_MARKING: return <Loading text=\"Marking Assignments\"/>\r\n            case ST_VIEWING: \r\n                return <div>\r\n                    <Text className=\"text-center\" tag=\"p\" color=\"primary\">\r\n                        {assignments.length}/{totalAssignments} Assignments turned in\r\n                    </Text>\r\n                    <Text className=\"text-center\">Update any grade by clicking the checkmark</Text>\r\n                    <div>\r\n                        {assignments && assignments.map((e, i) => {\r\n                            return <div key={i}>\r\n                                <Text>\r\n                                    <a href={e.link} target=\"_blank\">view assignment</a>\r\n                                </Text>\r\n                                <Text>\r\n                                    Suggested Grade: {e.gameGrade}\r\n                                </Text>\r\n                                <Text>\r\n                                    Your Grade:\r\n                                </Text>\r\n                                <Input key={e.id} id={e.id} value={grades.hasOwnProperty(e.id)?grades[e.id]:e.gameGrade} \r\n                                    onInput={handleGradeChange} placeholder=\"50\" inputWidth=\"50px\" autoUpdate\r\n                                    validate={{numericality: {greaterThanOrEqualTo: 0, lessThanOrEqualTo: 100, onlyInteger: true}}} />\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                    <Button onInput={()=>{doMarkAssignments(true)}} compact glow>Grade and return assignments</Button>\r\n                    <Button onInput={()=>{doMarkAssignments(false)}} compact glow>Draft grade assignments</Button>\r\n                </div>\r\n            case ST_COURSE_WORK: return <SelectCourseWork id={ST_COURSE_WORK} courseId={courseId} onSelect={changeState} \r\n                    permissions={permissions} onError={setError} />\r\n            case ST_COURSE: \r\n            default: return <SelectCourse id={ST_COURSE} onSelect={changeState} \r\n                     permissions={permissions} onError={setError}/>\r\n        }\r\n    }\r\n    const wrapView = (view) => {\r\n        return <motion.div key={fsm} {...ANIM_LAYOUT_OVERLAP}>{view}</motion.div>\r\n    }\r\n    return <AnimatePresence>\r\n            {error && <motion.div  key=\"error\" {...ANIM_LAYOUT_OVERLAP}>\r\n                <Text className=\"text-center\" color=\"secondary\">Error: {error}</Text>\r\n            </motion.div>}\r\n            {!error && wrapView(renderState())}\r\n      </AnimatePresence>\r\n}\r\n\r\nexport default SubscriptionHoC(MarkAssignmentsView);","import React, {useEffect, useState} from 'react';\r\nimport MarkAssignments from 'apis/classroom/MarkAssignments/index';\r\nimport {teacherMarkPermissions} from 'apis/config';\r\nimport Button from 'views/Button/v1/Button.js';\r\nimport Modal from 'views/Modal/v1/Modal';\r\nimport { navigate } from \"gatsby\";\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport {log} from 'utilities/Measure';\r\nimport Box from 'views/Box/v1/Box';\r\n\r\nexport const STORAGE_VALUE = 'mark-assignment';\r\nconst styleTitle = {position: 'absolute', top:0, left: '50%', transform: 'translateX(-50%)'};\r\nconst MarkAssignmentsView = (props) => {\r\n \r\n    if(props.sendTo === STORAGE_VALUE){\r\n        return <React.Fragment>\r\n                <div style={styleTitle}>\r\n                <Text text=\"Mark Assignments\" tag=\"h2\" className=\"text-center\"/>\r\n                </div>\r\n                \r\n                <MarkAssignments {...props} meta={props.meta} />\r\n            </React.Fragment>\r\n    }else{\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default MarkAssignmentsView ;\r\n\r\nexport const MarkAssignmentsTrigger = (props) => {\r\n    return <Box>\r\n        <Button onInput={()=>{\r\n            props.activate(teacherMarkPermissions, STORAGE_VALUE);\r\n        }}>Mark Assignments</Button>\r\n    </Box>\r\n}","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport Subscribable from 'views/hoc/Subscribable/index';\r\nimport {log} from 'utilities/Measure';\r\nimport {getUrl} from 'utilities/Format';\r\nimport SignIn from 'apis/SignIn/SignIn';\r\nimport Modal from 'views/Modal/v1/Modal';\r\nimport {storeItem, getItem} from 'utilities/Storage.js';\r\nimport CreateAssignment, {CreateAssignmentTrigger, STORAGE_VALUE as ID_CREATE} from './CreateAssignment/index';\r\nimport MarkAssignments, {MarkAssignmentsTrigger, STORAGE_VALUE as ID_MARK} from './MarkAssignments/index';\r\nimport {motion} from 'framer-motion';\r\nimport {SLIDE_UP} from 'game/tree/Animations.js';\r\n\r\nconst STORAGE_ID = 'teacher-action';\r\nconst ClassroomTeachers = (props) => {\r\n    const [sendTo, setSendTo] = useState(getItem(STORAGE_ID));\r\n    const [active, setActive] = useState(sendTo?true:false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const deactivate = () => {\r\n        setActive(false);\r\n        setSendTo(null);\r\n        storeItem(STORAGE_ID, null);\r\n        props.doSignOut(); \r\n    }\r\n    const activate = (permissions, target) => {\r\n        storeItem(STORAGE_ID, target);\r\n        props.doSignIn(permissions); \r\n        setActive(target?true:false);\r\n    }\r\n    \r\n    return <TeacherWrapper {...SLIDE_UP}>\r\n        {error && <Text color=\"red\" className=\"block text-center\">{error}</Text>}\r\n        <CreateAssignmentTrigger {...props} id={ID_CREATE} activate={activate} />\r\n        {/* {isDevelopment() && <MarkAssignmentsTrigger {...props} id={ID_MARK} activate={activate} />} */}\r\n        <MarkAssignmentsTrigger {...props} id={ID_MARK} activate={activate} />\r\n       <div className=\"teacher-actions\">\r\n      \r\n            <Text text=\"How to Create Assignments\" tag=\"h4\" />\r\n            <ol className=\"teacher-list\">\r\n                <li><Text>Click 'Create Coursework'</Text></li>\r\n                <li><Text>Select Class</Text></li>\r\n                <li><Text>Select Students to assign the coursework to</Text></li>\r\n                <li><Text>Select a due date</Text></li>\r\n                <li><Text>Wait for student to complete game and submit their \r\n                    Google Doc automated game performance reports</Text></li>\r\n                <li><Text>Grade assignments from Google Classroom portal</Text></li>\r\n            </ol>\r\n       </div>\r\n       <Modal active={sendTo && props.isSignedIn} onClose={deactivate} className=\"bg-grad-pp\">\r\n            <CreateAssignment {...props} sendTo={sendTo} />\r\n            {/* {isDevelopment() && <MarkAssignments {...props} sendTo={sendTo} />} */}\r\n            <MarkAssignments {...props} sendTo={sendTo} />\r\n        </Modal>\r\n    </TeacherWrapper>\r\n}\r\n\r\nconst AuthenticatedUserAccount = Subscribable(\r\n    SignIn(ClassroomTeachers, getUrl(), true)\r\n);\r\n\r\nexport default AuthenticatedUserAccount;\r\n\r\nconst TeacherWrapper = styled.div`\r\n    animation: slideUp 1s ease;\r\n    text-align: center;\r\n    .teacher-actions{\r\n        max-width: ${props => props.theme.mediaM};\r\n        margin:30px auto;\r\n    }\r\n    .teacher-list li{\r\n        list-style-position: inside;\r\n        color: ${props => props.theme.secondary};\r\n        text-align:left;\r\n    }\r\n`\r\n","import React, {useEffect, useState} from 'react';\r\nimport ErrorBoundary from 'views/Boundary/Boundary.js';\r\nimport SiteContainer from 'views/Container/Container.js';\r\n\r\nimport { navigate, Link } from \"gatsby\";\r\nimport {log, sendEvent} from 'utilities/Measure';\r\nimport {Event} from 'utilities/Create';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport Classroom from 'apis/classroom/interfaces/teachers/index';\r\nimport Header from 'views/Header/Header.js';\r\nimport CourseWorkView from 'views/CourseWorkView/index.js';\r\n\r\n\r\nconst Teachers = (props) => {\r\n  useEffect(()=>{\r\n    props.addMenuItem({\r\n      'title':props.meta.title,\r\n      onBack,\r\n      menuItems: null\r\n    });\r\n  }, []);\r\n    const onBack = () => {\r\n        navigate(props.meta.path);\r\n    }\r\n    return <SiteContainer key={`teacher-${props.meta.import}`} id={`teacher-${props.meta.import}`}>\r\n        <Header center title={`Teachers Page`} />\r\n        <CourseWorkView meta={props.meta} />\r\n        <Classroom meta={props.meta} />\r\n    </SiteContainer>\r\n}\r\n\r\n\r\nconst TeachersWrapper = (props) => {\r\n    return <Teachers \r\n        meta={props.data.game}\r\n        site={props.data.site.siteMetadata}\r\n        addMenuItem={props.addMenuItem}\r\n    />\r\n}\r\nexport default TeachersWrapper;\r\n\r\nexport const pageQuery = graphql`\r\n  query TeacherSectionByID($import: String!) {\r\n    site {\r\n      siteMetadata {\r\n        ...siteDataFragment\r\n      }\r\n    },\r\n    game: gamesMetaJson(import: { eq: $import }) {\r\n      id\r\n      path\r\n      import\r\n      complete\r\n      title\r\n      topics\r\n      snippet\r\n    }\r\n  }\r\n`\r\n  ","import React, {useState, useEffect} from 'react';\r\nimport LoadScript from './../LoadScript'\r\nimport Subscribable from 'views/hoc/Subscribable';\r\nimport {log, sendError} from 'utilities/Measure.js';\r\n\r\n\r\nlet clientId = \"392303660392-if4osc2chaurcd8a5o6btcuud6r3rj91.apps.googleusercontent.com\";\r\n\r\nconst config = {\r\n    clientId: \"392303660392-if4osc2chaurcd8a5o6btcuud6r3rj91.apps.googleusercontent.com\",\r\n    scope: 'https://www.googleapis.com/auth/drive.file',\r\n    discoveryDocs: [\r\n      \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\",\r\n      \"https://www.googleapis.com/discovery/v1/apis/classroom/v1/rest\",\r\n    ]\r\n};\r\n\r\nconst Gapi = (props) => {\r\n\r\n    const onLoad = (e) => {\r\n\r\n        gapi.load('client', () => {\r\n            props.doSubscribe('getGapi', ()=>{return gapi.client.init(config)},\r\n            (r)=>{\r\n              props.onApiInit('gapi');\r\n            },\r\n            e => {\r\n              sendError(`gapi client init rejected`);\r\n            },\r\n            (e)=>{\r\n              sendError(`gapi client onError called`)\r\n            })\r\n        });\r\n    }\r\n\r\n    return <LoadScript apiKey=\"cli\" script='https://apis.google.com/js/api.js' \r\n        onLoad={onLoad} />\r\n}\r\n\r\nexport default Subscribable(Gapi);","import React, {useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport firebase from 'firebase/app';\r\n//import '@firebase/testing';\r\nimport \"firebase/auth\";\r\nimport \"firebase/functions\";\r\n\r\n\r\nimport {Helmet} from 'react-helmet';\r\nimport {log} from 'utilities/Measure.js';\r\nimport { globalHistory } from \"@reach/router\";\r\nimport Text from 'views/Text/Text/v1/Text.js';\r\nimport GetGapi from './GetGapi';\r\nimport LoadScript from './../LoadScript';\r\nimport { navigate } from \"gatsby\";\r\nimport {cloudCatch} from 'apis/firebase/cloudFunctions';\r\nimport {getUrlHash, getUrl} from 'utilities/Format';\r\nimport IconButton from 'views/IconButton/v1/IconButton.js';\r\n\r\nimport config from './../config';\r\nimport './styles.css';\r\n\r\n\r\nconst signInOptions = [\r\n    {\r\n        provider: firebase.auth.TwitterAuthProvider.PROVIDER_ID\r\n    },\r\n    {\r\n        provider: firebase.auth.FacebookAuthProvider.PROVIDER_ID\r\n    }\r\n]\r\n\r\nconst getGoogleProvider = (permissions) => {\r\n    return {\r\n        provider: firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n        scopes: permissions, \r\n        customParameters: {\r\n            // Forces account selection even when one account\r\n            // is available.\r\n            //access_type: 'offline',\r\n            'include_granted_scopes': true, \r\n            //prompt: 'select_account'\r\n          }\r\n    }\r\n}\r\n\r\nconst uiConfig = {\r\n    signInFlow: 'redirect',\r\n    callbacks: {}\r\n}\r\nconst URL_HASH = \"#signed-in\";\r\nconst TEMP_HASH = \"#signing-in\";\r\n//SignInHoc(AssignmentView, id, needsGoogle, needsGapi, permissions);\r\nconst SignInHoC = (View, redirectUrl, needsGoogle) => props => {\r\n    if(!props.doSubscribe){\r\n        throw Error(`SignInHoc must be wrapped by subscribable`);\r\n    }\r\n    const [error, setError] = useState(null);\r\n    const [isGapiReady, setIsGapiReady] = useState(false);\r\n     const [user, setUser] = useState(false);\r\n    const [uiInstance, setUiInstance] = useState(null);\r\n\r\n    const onAuthStateChanged = (user) => {\r\n        setUser(getUser(user))\r\n    }\r\n    useEffect(()=>{\r\n        return ()=>{\r\n            deleteUi(uiInstance || getUi());\r\n        }\r\n    }, \r\n    [uiInstance])\r\n    useEffect(()=>{\r\n        if(isSigningIn() && window.firebaseui){\r\n            showSignInUi();\r\n        }\r\n    }, [isGapiReady, user])\r\n    useEffect(()=>{\r\n        /*dont know why this needs to be here, but the ui doesn't show without it*/\r\n        window.firebase = firebase; \r\n        if(firebase.apps.length === 0){\r\n            \r\n            firebase.initializeApp(config);\r\n            if(globalHistory.location.hostname === 'localhost'){\r\n              //firebase.functions().useFunctionsEmulator(\"http://localhost:5001\");\r\n            }\r\n          }\r\n        if(window && window.gapi && !isGapiReady){\r\n            setIsGapiReady(true);\r\n        }\r\n        firebase.auth().onAuthStateChanged(onAuthStateChanged);\r\n        setFirebaseToWindow();\r\n    }, [])\r\n    const watchConnection = () => {\r\n        var connectedRef = firebase.database().ref(\".info/connected\");\r\n        connectedRef.on('value', function(connectedSnap) {\r\n            setConnected(connectedSnap.val() === true);\r\n        })\r\n    }\r\n    const setFirebaseToWindow = (ref) => {\r\n        window.firebase = firebase; \r\n    }\r\n\r\n    const onSignOut = () => {\r\n        return props.doSubscribe('signInOut', ()=>{return firebase.auth().signOut()},\r\n        e => {\r\n            //resetUi();\r\n            deleteUi(getUi());\r\n            navigate(getUrl()) \r\n            return {success: 'logged out'}\r\n        },\r\n        e => {\r\n            return {error: `failed to sign out.`}\r\n        },\r\n        setError);\r\n    }\r\n\r\n    const showSignInUi = (permissions, attempts = 0) => {\r\n        console.log(`SignIn  showSignInUi`, props);\r\n        let ui = getUi();\r\n        if(!ui){\r\n            try{\r\n                firebase.auth().setPersistence(firebase.auth.Auth.Persistence.NONE)\r\n                //firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n                resetUi(ui)\r\n                uiConfig.signInSuccessUrl = redirectUrl + URL_HASH;\r\n                window.location = getUrl() + TEMP_HASH;\r\n                uiConfig.callbacks.signInSuccessWithAuthResult =  postSignIn;\r\n             //   uiConfig.callbacks.signInFailure = (e) => {log(`bughunt SignInHoc callback signInFailure`, e)};\r\n                startUi(permissions);\r\n            }catch(e){\r\n                if(attempts < 1){\r\n                    showSignInUi(permissions, attempts + 1);\r\n                }\r\n            }\r\n        }else{\r\n            navigate(getUrl() + TEMP_HASH);\r\n        }\r\n    }\r\n    const getUi = ()=>{\r\n       // if(!isMounted) return null;\r\n       let fui;\r\n       if(firebaseui){\r\n        fui = firebaseui.auth.AuthUI.getInstance(getUiId());\r\n       }\r\n       if(!fui){\r\n           fui = uiInstance;\r\n       }\r\n        return fui;\r\n    }\r\n    const deleteUi = (fui) =>{\r\n        setUiInstance(null);\r\n        if(fui) fui.delete();\r\n        \r\n    }\r\n    const resetUi = (fui) => {\r\n        setUiInstance(null);\r\n        if(fui) fui.reset();\r\n    }\r\n    const startUi = (permissions) => {\r\n       \r\n        let newfui = getUi();\r\n        if(!newfui){\r\n            \r\n            let a = firebase.auth();\r\n            newfui = new firebaseui.auth.AuthUI(firebase.auth(), getUiId());\r\n        }\r\n        let google = getGoogleProvider(permissions);\r\n        newfui.start('#' + getUiId(), {...uiConfig, \r\n            signInOptions: [google, ...needsGoogle?[]:signInOptions]\r\n        });\r\n    }\r\n    const postSignIn = (authResult) => {\r\n        if(window && window.gapi && window.gapi.client && authResult && authResult.credential){\r\n            gapi.client.setToken({access_token: authResult.credential.accessToken});\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    const isSigningIn = () => {\r\n        return getUrlHash() === TEMP_HASH;\r\n    }\r\n    const cancelSignIn = () => {\r\n        navigate(getUrl())\r\n    }\r\n    const isSignedIn = () => {\r\n     //   if(connected && firebase.apps.length > 0 && user) return true;\r\n        if(user) return true;\r\n        return false;\r\n        //return connected && firebase.apps.length > 0 && firebase.auth().currentUser;// && !explicitSignOut;\r\n    }\r\n    const deleteUser = () => {\r\n        let u = firebase.auth().currentUser;\r\n        if(u){\r\n            return ()=>{\r\n                return u.delete()\r\n            }\r\n        }\r\n    }\r\n    const onGapiIsReady = () => {\r\n        setIsGapiReady(true); //callApiOnGapiReady\r\n    }\r\n    const getUser = (u) => {\r\n        if(u){\r\n           //let u = user;\r\n            return {uid: u.uid, email: u.email, displayName: u.displayName, photoURL: u.photoURL, \r\n                phoneNumber: u.phoneNumber, createTime: u.metadata.creationTime, lastTime: u.metadata.lastSignInTime,\r\n                provider: u.providerData.reduce((agg, el, i)=>{\r\n                    return agg + `${i > 0?', ':''}${el.providerId}`;\r\n                }, '')}\r\n        }\r\n        return null;\r\n    }\r\n\r\n    const getUiId = () => { \r\n        return `firebaseui-auth-container`\r\n    }\r\n    return (\r\n            <SignInWrapper>\r\n                <Helmet>\r\n                    <link type=\"text/css\" rel=\"stylesheet\" href=\"https://www.gstatic.com/firebasejs/ui/4.3.0/firebase-ui-auth.css\" />\r\n                </Helmet>\r\n                <GetGapi onApiInit={onGapiIsReady} />\r\n                <LoadScript onLoad={setFirebaseToWindow} \r\n                    script=\"https://www.gstatic.com/firebasejs/ui/4.3.0/firebase-ui-auth.js\"/>\r\n\r\n     \r\n                <StateBackground signingIn={isSigningIn()}>\r\n                    <StateView signingIn={isSigningIn()} className=\"bg-grad-pp\">\r\n                        <IconButton \r\n                            className=\"sign-in-close\"\r\n                            icon=\"icon-cross\"\r\n                            onInput={cancelSignIn}\r\n                            color=\"primary\"\r\n                            bgColor=\"black\"\r\n                        />\r\n                        \r\n                        {isSigningIn() && <div>\r\n                            <Text key=\"auth-message\" id=\"auth-message\" fontSize=\"remS\" className=\"inline\">\r\n                                By signing in, some of your personal information will be used for authentication.  \r\n                            </Text>\r\n                            <a href={'/privacy'} trget=\"_blank\">Read more here</a>\r\n                        </div>}\r\n                \r\n                        \r\n                        {error && <Text key=\"sign-error\" id=\"sign-error\"  className=\"text-center\" >error</Text>}\r\n                        {/* {!isOnline && <Text key=\"sign-offline\" id=\"sign-offline\"  className=\"text-center\" >you are offline</Text>} */}\r\n\r\n                        <div id={getUiId()} className=\"sign-in-wrapper\" />\r\n                    </StateView>\r\n                </StateBackground>\r\n                {isSignedIn() && <SignOutWrapper>\r\n                    <Text key=\"sign-out\" id=\"sign-out\" className=\"text-underline\" onInput={onSignOut} >sign out</Text>\r\n                </SignOutWrapper>}\r\n               {isGapiReady &&  <div className={`actionView ${isSignedIn()?'signedIn':'notSignedIn'}`}>\r\n               <View {...props} isSignedIn={isSignedIn()} user={user} doSignOut={onSignOut} deleteUser={deleteUser}\r\n                isGapiReady={isGapiReady} doSignIn={showSignInUi} \r\n                />\r\n                </div>}\r\n            \r\n            </SignInWrapper>\r\n    )\r\n}\r\n\r\n\r\nexport default SignInHoC;\r\n\r\nconst SignOutWrapper = styled.div`\r\n    position: fixed;\r\n    top:0px;\r\n    right:0px;\r\n    color: orange;\r\n`\r\n// height: 100%;\r\nconst SignInWrapper = styled.div`\r\n    text-align: center !important;\r\n\r\n`\r\nconst StateBackground = styled.div`\r\n    position: absolute;\r\n    top:0px;\r\n    bottom:0px;\r\n    left: 0px;\r\n    right:0px;\r\n    background-color: rgba(0,0,0,0.8);\r\n    transform: translateY(${props => props.signingIn?'0%':'-100%'});\r\n    transition: transform 1s ease-out;\r\n    z-index: ${props => props.theme.zUi};\r\n`\r\nconst StateView = styled.div`\r\n\r\n    width: 95%;\r\n    margin: auto;\r\n    margin-top:100px;\r\n    z-index: ${props => props.theme.zTop};\r\n    position: relative;\r\n    .sign-in-close{\r\n        position: absolute;\r\n        top: -25px;\r\n        left: 0px;\r\n    }\r\n`","import styled from 'styled-components';\r\n\r\nexport const List = styled.section`\r\n    padding-left: 0px;\r\n    margin-left: 0px;\r\n    text-align: left;\r\n    position: relative;\r\n    .nextPage{\r\n        position: absolute; \r\n        top:0px;\r\n        right:0px;\r\n   \r\n    }\r\n    ul{\r\n        margin: 0px auto 30px auto;\r\n    }\r\n`\r\n\r\nexport const ListItem = styled.div`\r\n   border-bottom: 2px solid white;\r\n   position:relative;\r\n\r\n   .item-text{\r\n       display: inline-block;\r\n       width: 70%;\r\n       position: relative;\r\n       top: 10px;\r\n   }\r\n`","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getCourseWork} from 'apis/firebase/gapiFunctions';\r\nimport SubscriptionHoC from 'views/hoc/Subscribable';\r\nimport Text from 'views/Text/Text/v1/Text';\r\nimport Loading from 'views/Loading/v1/Loading';\r\nimport IconButton from 'views/IconButton/v1/IconButton';\r\n import {List, ListItem} from './classroom.css.js';\r\n import {cloudCatch} from 'apis/firebase/cloudFunctions';\r\n import Select from 'views/Select/v2/Select';\r\n import {log} from 'utilities/Measure.js';\r\n import {AnimatePresence, motion} from 'framer-motion'; \r\nimport {ANIM_LAYOUT_OVERLAP} from 'game/tree/Animations.js';\r\n\r\nconst PAGE_SIZE = 10;\r\nconst SelectCourseWork = (props) => {\r\n    const [courseWork, setCourseWork] = useState(null);\r\n    const [nextPageToken, setNextPageToken] = useState(null);\r\n    useEffect(()=>{\r\n        handleGetCourseWork()\r\n    }, [])\r\n    const handleGetCourseWork =  () => {\r\n        props.doSubscribe('selectCourseWorkGetCoursework', \r\n            ()=>{return getCourseWork(props.courseId, props.pageSize || PAGE_SIZE, nextPageToken)},\r\n            result => {\r\n                if(result.nextPageToken || (nextPageToken && !result.nextPageToken)){ //if there are > 10 responses, will get token back\r\n                    setNextPageToken(result.nextPageToken); //if token exists, or if there was a token and now is undefined ie end of list\r\n                }\r\n                \r\n                if(result.courseWork){\r\n                    let date;\r\n                    let filteredCw = result.courseWork.filter(f => f.associatedWithDeveloper);\r\n                    if(props.filterByTitle){\r\n                        filteredCw = filteredCw.filter(f => {\r\n                            return f.title.indexOf(props.filterByTitle)  > -1;\r\n                        });\r\n                    }\r\n               \r\n                  \r\n                    setCourseWork(filteredCw.map(cw => {\r\n                       // let hrs = cw.dueTime.hours+10;\r\n                        let adj = (cw.dueTime.hours > 0 && cw.dueTime.hours < 14)?0:1;\r\n                        date = new Date(cw.creationTime); //date.toLocaleDateString()\r\n                        return {label: `Title: ${cw.title}, Due date: ${\r\n                            new Date(\r\n                                cw.dueDate.year,\r\n                                cw.dueDate.month-1,\r\n                                adj + cw.dueDate.day,\r\n                                cw.dueTime.hours\r\n                            ).toLocaleDateString()}`, value: cw.id}\r\n                    }));\r\n                }else{\r\n                    throw new Error(`no coursework found for course ${props.courseId}`);\r\n                }\r\n            },\r\n            cloudCatch,\r\n            props.onError\r\n        );\r\n    }\r\n    const handleSelect = (id, val) => {\r\n        props.onSelect(props.id, {courseId: props.courseId, courseWorkId: val});\r\n    }\r\n\r\n    return <AnimatePresence>\r\n        {courseWork && <motion.div key=\"courswork\" {...ANIM_LAYOUT_OVERLAP}>\r\n                <List>\r\n                <div style={{height: '50px'}}>\r\n                {nextPageToken && <IconButton className=\"nextPage\" icon=\"icon-circle-down\" fontSize=\"remL\" \r\n                    rotate=\"-90\" onInput={handleGetCourseWork} text=\"Next Page\"  />}\r\n                </div>\r\n                <Select id=\"selectcourseWork\" options={courseWork} className=\"block\" placeholder=\"Select coursework\" onInput={handleSelect} />\r\n            </List></motion.div>}\r\n        {!courseWork && <motion.div key=\"loading\" {...ANIM_LAYOUT_OVERLAP}>\r\n            <Loading key=\"loading\"  delay={0} text=\"Retrieving Courses\"/>\r\n        </motion.div>}\r\n    </AnimatePresence>\r\n}\r\n\r\nSelectCourseWork.propTypes = {\r\n    id: PropTypes.string,\r\n    course: PropTypes.string,\r\n    onSelect: PropTypes.func\r\n}\r\n\r\nexport default SubscriptionHoC(SelectCourseWork);","\r\n\r\n\r\n\r\n\r\n\r\nconst config = {\r\n   // driveApiKey: 'AIzaSyDAHDS9Ia7fjc7MRYyD6zyKdRGZeRSrwrI',\r\n    //fireAPI: fireAPI,\r\n    apiKey: 'AIzaSyDAHDS9Ia7fjc7MRYyD6zyKdRGZeRSrwrI',\r\n    //authDomain: \"mathstims-7d4bb.firebaseapp.com\",\r\n    authDomain: \"auth.stimsims.com\",\r\n    databaseURL: \"https://mathstims-7d4bb.firebaseio.com\",\r\n    projectId: \"mathstims-7d4bb\", //\"quests-2cb9a\",\r\n    storageBucket: \"mathstims-7d4bb.appspot.com\",\r\n    clientId: \"392303660392-if4osc2chaurcd8a5o6btcuud6r3rj91.apps.googleusercontent.com\",\r\n    discoveryDocs: [\r\n      \"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\",\r\n      \"https://www.googleapis.com/discovery/v1/apis/classroom/v1/rest\",\r\n    ]\r\n  };\r\n\r\nexport default config;\r\n\r\nexport const studentPermissions = [\r\n  \"https://www.googleapis.com/auth/classroom.courses.readonly\",\r\n  \"https://www.googleapis.com/auth/classroom.coursework.me\",\r\n  \"https://www.googleapis.com/auth/drive.file\" //Recommended\r\n]\r\n\r\nexport const drivePermissions = [\r\n  \"https://www.googleapis.com/auth/drive.file\"\r\n]\r\n\r\n//for mass marking\r\nexport const teacherCreatePermissions = [\r\n  \"https://www.googleapis.com/auth/classroom.coursework.students\",\r\n  \"https://www.googleapis.com/auth/classroom.courses.readonly\",\r\n  'https://www.googleapis.com/auth/classroom.rosters.readonly',\r\n // \"https://www.googleapis.com/auth/drive.file\"\r\n]\r\n\r\nexport const teacherMarkPermissions = [\r\n  \"https://www.googleapis.com/auth/drive.metadata.readonly\",\r\n \"https://www.googleapis.com/auth/classroom.coursework.students\",\r\n \"https://www.googleapis.com/auth/classroom.courses.readonly\",\r\n]\r\n\r\n\r\n/*\r\nIf you store restricted scope data on servers (or transmit), then you need to go through a security assessment. \r\n\r\nif you plan to access or use a type of user data that was not originally disclosed in your \r\nprivacy policy when a Google user initially authorized access, you must update your privacy policy \r\nand prompt the user to consent to any changes before you may access that data.\r\n\r\nOnly certain application types may access Restricted Scopes for each product.\r\nProductivity and educational applications (including task management, note taking, workgroup communications, \r\n  and classroom collaboration applications) that only use Restricted Scopes to handle Drive files \r\n  (or their metadata or permissions) via the application’s user interface\r\n\r\n  Limit your use of data to providing or improving user-facing features that are \r\n  prominent in the requesting application's user interface.\r\n\r\n  Only transfer the data to others if necessary to provide or improve user-facing features that are \r\n  prominent in the requesting application's user interface. \r\n\r\n  Don't allow humans to read the data\r\n\r\n   Applications accessing Restricted Scopes must demonstrate that they adhere to certain security practices. \r\n   These applications must pass an annual security assessment \r\nscope access:\r\n\"https://www.googleapis.com/auth/drive.file\" //Recommended\r\nhttps://www.googleapis.com/auth/drive.metadata restricted\r\n*/","import {log} from 'utilities/Measure.js';\r\n\r\nexport const classroomThen = (e) => {\r\n    if(e && e.result){\r\n        return e.result;\r\n    }else if(Array.isArray(e)){\r\n        return e.map(e => e.result);\r\n    }else{\r\n        throw new Error(`malformed classroomThen result`);\r\n    }\r\n    \r\n}\r\nexport const classroomCatch= (e) => {\r\n   // throw new Error(e.result);\r\n   return e.result;\r\n}\r\nexport const getFiles = (fileIds) => {\r\n    return Promise.all(fileIds.map(e => {\r\n        return gapi.client.drive.files.get({\r\n            fileId: e,\r\n            fields: 'name, properties, appProperties'\r\n          })\r\n          .then(classroomThen);\r\n    }))\r\n}\r\nexport const createAFile = (docType, mediaType, name, params = '', appProps = {}) => {\r\n    let fields = `id, name${params?`, ${params}`:''}`;\r\n    let appProperties = {\r\n        ...appProps\r\n    }\r\n      var media = {\r\n        name,\r\n        mimeType: mediaType,\r\n       // body: body\r\n      };\r\n      return gapi.client.drive.files.create({\r\n        // resource: fileMetadata,\r\n        //invalid fields: content\r\n        media: media,\r\n        fields,\r\n        name,\r\n        mimeType: docType,\r\n        contentType: mediaType,\r\n        appProperties\r\n       // body: 'hello, world, omg'\r\n      }).then(classroomThen);\r\n}\r\nexport const createFolder = (name) => {\r\n    let fileMetadata = {\r\n        'name': name,\r\n        'mimeType': 'application/vnd.google-apps.folder'\r\n      };\r\n      return gapi.client.drive.files.create({\r\n        resource: fileMetadata,\r\n        fields: 'id, alternateLink'\r\n      }).then(classroomThen);\r\n}\r\nexport function listFiles() {\r\n  gapi.client.drive.files.list({\r\n    'pageSize': 10,\r\n    'fields': \"nextPageToken, files(id, name)\"\r\n  }).then(classroomThen);\r\n}\r\n\r\n\r\n//chartId:1216131842\r\nexport const createReport = (name, body, props = {}) => {\r\n//Goal: create document and get the weblink\r\nlet results = {\r\n  reportId: null, reportLink: null\r\n}\r\n  return createAFile('application/vnd.google-apps.document', 'text/html', name, \r\n  'webViewLink, webContentLink', props//, {gamegrade: '80'}\r\n  )\r\n  .then(r => {\r\n      results.reportId = r.id;\r\n      results.reportLink = r.webViewLink;\r\n      return gapi.client.request({\r\n        path: '/upload/drive/v3/files/' + r.id,\r\n        method: 'PATCH',\r\n        params: {\r\n          uploadType: 'media',\r\n          appProperties: props,\r\n          published: true\r\n        },\r\n        appProperties: props,\r\n        published: true,\r\n        body\r\n      })\r\n  })\r\n  .then(e => {\r\n      return results;\r\n  })\r\n  //.then(classroomThen)\r\n}\r\n\r\n\r\nexport const lookAtAssignments = (courseId, courseWorkId) => {\r\n    let results = null;\r\n    let totalAssignments = 0;\r\n    return gapi.client.classroom.courses.courseWork.studentSubmissions.list({\r\n        courseId, courseWorkId\r\n    }).then(e => {\r\n        totalAssignments = e.result.studentSubmissions.length;\r\n        let filtered = e.result.studentSubmissions.filter(e => {\r\n            // && e.assignmentSubmission.attachments && e.assignmentSubmission.attachments.length > 0\r\n            return e.state === 'TURNED_IN';\r\n        });\r\n        results = filtered.map(e => {\r\n            return {courseId: e.courseId, courseWorkId: e.courseWorkId, userId: e.userId, \r\n                    id: e.id, link: e.alternateLink}\r\n        });\r\n        let latest = null;\r\n        if(filtered && filtered.length > 0){\r\n            return Promise.all(filtered.map((ss, i) => {\r\n                latest = ss.assignmentSubmission.attachments[ss.assignmentSubmission.attachments.length - 1];\r\n                results[i].fileId = latest.driveFile.id;\r\n                return gapi.client.drive.files.get({\r\n                    fileId: latest.driveFile.id,\r\n                    fields: 'appProperties, webViewLink'\r\n                })\r\n            }));\r\n        }else{\r\n            throw new Error('no assignments have been turned in')\r\n        }\r\n        //return {error: 'no assignments have been turned in'};\r\n    }).then(files => {\r\n        if(files){ //can be null of no student responses are in a turned in state\r\n            //map properties to makea workable object ofr markGradedAssignments\r\n            let result = null;\r\n            files.map((file, i) => {\r\n                result = results[i];\r\n                result.gameGrade = file.result.appProperties.gameGrade;\r\n            })\r\n            return {\r\n                results,\r\n                totalAssignments\r\n            };\r\n        }\r\n    })\r\n    //last section is not an api call\r\n    //.then(classroomThen)\r\n  }\r\n  \r\n  export const markGradedAssignments = (files, grades, returnAssignment) => {\r\n    let studentSubmissions = null, grade = null;\r\n    let mapped = files.map((file, i) => {\r\n        grade = grades.hasOwnProperty(file.id)?grades[file.id]:file.gameGrade;\r\n        return {\r\n            courseId: file.courseId, courseWorkId: file.courseWorkId, id: file.id,\r\n            updateMask:returnAssignment?'draftGrade,assignedGrade':'draftGrade',\r\n            draftGrade: grade,\r\n            assignedGrade: grade,\r\n        }\r\n    })\r\n    return Promise.all(\r\n        mapped.map((file, i) => {\r\n            return gapi.client.classroom.courses.courseWork.studentSubmissions.patch(file)\r\n        })\r\n    )\r\n   .then(e => {\r\n        if(returnAssignment){\r\n            return Promise.all(\r\n                files.map((file, i) => {\r\n                    return gapi.client.classroom.courses.courseWork.studentSubmissions.return({\r\n                        courseId: file.courseId, courseWorkId: file.courseWorkId, id: file.id\r\n                    })\r\n                })\r\n            )\r\n        }else{\r\n            return e;\r\n        }\r\n    })\r\n    .then(classroomThen)\r\n  }\r\n  \r\n  export const markAssignments = (courseId, courseWorkId) => {\r\n    let studentSubmissions = null;\r\n    return gapi.client.classroom.courses.courseWork.studentSubmissions.list({\r\n        courseId, courseWorkId\r\n    }).then(e => {\r\n        let filtered = e.result.studentSubmissions.filter(e => {\r\n            // && e.assignmentSubmission.attachments && e.assignmentSubmission.attachments.length > 0\r\n            return e.state === 'TURNED_IN';\r\n        });\r\n        studentSubmissions = filtered;\r\n        let latest = null;\r\n        return Promise.all(filtered.map(ss => {\r\n            latest = ss.assignmentSubmission.attachments[ss.assignmentSubmission.attachments.length - 1];\r\n            return gapi.client.drive.files.get({\r\n                fileId: latest.driveFile.id,\r\n                fields: 'appProperties, webViewLink'\r\n            })\r\n        }));\r\n    }).then(files => {\r\n        let ssId = null;\r\n        return Promise.all(\r\n            files.map((file, i) => {\r\n                ssId = studentSubmissions[i].id;\r\n                log(`markAssignments patching ss ${ssId} with grade ${file.result.appProperties.gamegrade}`);\r\n                return gapi.client.classroom.courses.courseWork.studentSubmissions.patch({\r\n                    courseId, courseWorkId, id: studentSubmissions[i].id,\r\n                    updateMask:'draftGrade',\r\n                    draftGrade: file.result.appProperties.gamegrade,\r\n                })\r\n            })\r\n        )\r\n    })\r\n   .then(e => {\r\n        return Promise.all(\r\n            studentSubmissions.map((ss, i) => {\r\n                return gapi.client.classroom.courses.courseWork.studentSubmissions.return({\r\n                    courseId, courseWorkId, id: ss.id\r\n                })\r\n            })\r\n        )\r\n    }).then(classroomThen)\r\n  }\r\n  \r\n  export const turnIn = (courseId, courseWorkId, submissionId, title, document, gameGrade) => {\r\n    if(!document) throw new Error(`turnin submission must have a document to submit`);\r\n    //attach material\r\n    let file = {};\r\n    return createReport(title, document, {gameGrade, courseId, courseWorkId, submissionId}).then(e => {\r\n        file.id = e.reportId;\r\n        //error thrown: HTTP400: BAD REQUEST - The request could not be processed by the server due to invalid syntax.\r\n        return gapi.client.classroom.courses.courseWork.studentSubmissions.modifyAttachments(\r\n            {courseId, courseWorkId, id: submissionId,\r\n                addAttachments: [\r\n                    {\r\n                        \"driveFile\": file\r\n                    }\r\n                ]\r\n            }\r\n        )\r\n    })\r\n    .then(e => {\r\n        return gapi.client.classroom.courses.courseWork.studentSubmissions.turnIn(\r\n            {courseId, courseWorkId, id: submissionId}\r\n        )\r\n    })//.then(classroomThen)\r\n  \r\n  }\r\n  export const reclaimSubmission = (courseId, courseWorkId, submissionId, title, document, gameGrade) => {\r\n    if(!document) throw new Error(`recalaim submission must have a document to submit`);\r\n    return gapi.client.classroom.courses.courseWork.studentSubmissions.reclaim(\r\n        {courseId, courseWorkId, id: submissionId}\r\n    ).then(e => {\r\n        return turnIn(courseId, courseWorkId, submissionId, title, document, gameGrade);\r\n    })\r\n  }\r\n  \r\n  export const createCoursework = (coursework) => {\r\n    return gapi.client.classroom.courses.courseWork.create({\r\n        ...coursework\r\n    }).then(classroomThen);\r\n  }\r\n  export const modifyAssignees = (courseId, courseWorkId, students) => {\r\n    return gapi.client.classroom.courses.courseWork.modifyAssignees({\r\n        courseId, id: courseWorkId,\r\n        assigneeMode: 'INDIVIDUAL_STUDENTS',\r\n        modifyIndividualStudentsOptions: {\r\n            'addStudentIds': students.map(e => e.id)\r\n        }\r\n    }).then(classroomThen);\r\n  }\r\n  \r\n  export const getCourses = () => {\r\n    return gapi.client.classroom.courses.list()\r\n    .then(classroomThen);\r\n  }\r\n  \r\n  export const getCourseWork = (courseId, pageSize, pageToken) => {\r\n    return gapi.client.classroom.courses.courseWork.list({\r\n        courseId,\r\n        pageSize: pageSize || 10,\r\n        pageToken\r\n    }).then(classroomThen);\r\n  }\r\n  export const getSubmissionsforCourseWork = (courseId, courseWorkId) => {\r\n    return gapi.client.classroom.courses.courseWork.studentSubmissions\r\n    .list({courseId, courseWorkId}).then(classroomThen);\r\n  }\r\n  export const getAllMyCourseWorkForCourse = (courseId) => {\r\n    return gapi.client.classroom.courses.courseWork.studentSubmissions\r\n    .list({courseId, courseWorkId: '-'}).then(classroomThen);\r\n  }\r\n  export const listStudents = (courseId) => {\r\n    return gapi.client.classroom.courses.students.list({courseId})\r\n    .then(classroomThen)\r\n  }","const firebase = require(\"firebase\");\r\n// Required for side-effects\r\nrequire(\"firebase/functions\");\r\nimport {log, sendError} from 'utilities/Measure';\r\n\r\n\r\nexport const getPermission = (permissions, onPermitted) => {\r\n    let user = firebase.auth().currentUser;\r\n    let provider = getProvider(firebase.auth().currentUser, permissions);\r\n    return {\r\n        //promise: ()=>{return firebase.auth().signInWithPopup(provider)},\r\n        promise: ()=>{return firebase.auth().signInWithRedirect(provider)},\r\n        then:function(result) {\r\n            if(window && window.gapi){\r\n                gapi.client.setToken({access_token: result.credential.accessToken});\r\n                onPermitted();\r\n            }\r\n          },\r\n        cat:function(error) {\r\n           if(error.message){\r\n            return error.message;\r\n           }\r\n           return error;\r\n        } \r\n    }\r\n}\r\n\r\n\r\nconst getGoogleProvider = (permissions) => {\r\n    let google =  new firebase.auth.GoogleAuthProvider();\r\n        if(permissions){\r\n            permissions.map(e => {\r\n                google.addScope(e);\r\n            })\r\n        }\r\n        return google;\r\n}\r\nconst getProvider = (user, permissions) => {\r\n    let providerId = user?user.providerData[0].providerId:null;\r\n    if(permissions){\r\n        return getGoogleProvider(permissions);\r\n    }else{\r\n        switch(providerId){\r\n            case 'google.com': return getGoogleProvider(permissions);\r\n            case 'twitter.com': return new firebase.auth.TwitterAuthProvider();\r\n            case 'facebook.com': return new firebase.auth.FacebookAuthProvider();\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\nexport const cloudThen = (callback) => (e) => {\r\n    if(e.data && !e.data.hasOwnProperty('fail')){\r\n        callback(e.data);\r\n    }else if(e.data.hasOwnProperty('fail')){\r\n        if(typeof e.data.fail === 'string'){\r\n            throw new Error(e.data.fail);\r\n        }else{\r\n            throw new Error('cloud function failed');\r\n        }\r\n        \r\n    }else{\r\n        throw new Error('No such record found');\r\n    }\r\n}\r\nexport const cloudThenInline = (e) => {\r\n    if(e.data && !e.data.hasOwnProperty('fail')){\r\n        return e.data;\r\n    }else if(e.data.hasOwnProperty('fail')){\r\n        if(typeof e.data.fail === 'string'){\r\n            throw new Error(e.data.fail);\r\n        }else{\r\n            throw new Error('cloud function failed');\r\n        }\r\n        \r\n    }else{\r\n        throw new Error('No such record found');\r\n    }\r\n}\r\nexport const cloudCatch = (e) => {\r\n    if(e.result && e.result.error){\r\n        sendError(`cloudCatch ${e.result.error.message}`, false);\r\n        return e.result.error.message;\r\n    }else if(e.error){\r\n        sendError(`cloudCatch ${e.error}`, false);\r\n        return e.error;\r\n    }else if(e.message){\r\n        sendError(`cloudCatch ${e.message}`, false);\r\n        return  e.message;\r\n    }else if(typeof e === 'string'){\r\n        sendError(`cloudCatch ${e}`, false);\r\n        //may be an error string passed from thrown then error\r\n        return e;\r\n    }else{\r\n        sendError(`cloudCatch Incorrectly formatted cloudCatch error`, false);\r\n        //throw new Error('Incorrectly formatted cloudCatch error', e);\r\n        return 'Incorrectly formatted cloudCatch error';\r\n    }\r\n}\r\n\r\n\r\n//** EXAM */\r\n\r\nexport const loadExam = (examId) => {\r\n    return firebase.functions().httpsCallable('loadExam')({examId}).then(cloudThenInline);\r\n}\r\nexport const startExam = (game) => {\r\n    return firebase.functions().httpsCallable('startExam')({game}).then(cloudThenInline);\r\n}\r\nexport const createExam = (game, settings) => {\r\n    return firebase.functions().httpsCallable('createExam')({game, settings}).then(cloudThenInline);\r\n}\r\nexport const deletePlayer = (uid) => {\r\n    return firebase.functions().httpsCallable('deletePlayer')({uid});\r\n}\r\nexport const updateExam = (examId, game, node, local) => {\r\n    return firebase.functions().httpsCallable('updateExam')({examId, game, node, local}).then(cloudThenInline);\r\n}\r\n\r\n\r\nexport const endGame = (examId, game, local) => {\r\n    return firebase.functions().httpsCallable('endGame')({examId, game, local}).then(cloudThenInline);\r\n}\r\n\r\nexport const initExam = (examId, game, settings) => {\r\n    return firebase.functions().httpsCallable('initalizeExam')({examId, game, settings}).then(cloudThenInline);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n/** STRIPE */\r\nexport const createPaymentIntent = (eventId, paymentType) => {\r\n    return firebase.functions().httpsCallable('createPaymentIntent')({eventId, paymentType})\r\n    .then(cloudThenInline);\r\n}\r\n\r\n\r\nexport const checkCustomerStatus = (eventId, paymentType) => {\r\n    return firebase.functions().httpsCallable('checkCustomerStatus')({eventId, paymentType})\r\n    .then(cloudThenInline);\r\n}\r\n\r\nexport const cancelPaymentIntent = (paymentIntentId) => {\r\n    return firebase.functions().httpsCallable('cancelPaymentIntent')({paymentIntentId})\r\n    .then(cloudThenInline);\r\n}\r\n\r\nexport const refundPayment = (paymentType) => {\r\n    return firebase.functions().httpsCallable('refundPayment')({paymentType})\r\n    .then(cloudThenInline);\r\n}\r\n\r\nexport const validateCaptcha = (token, v2) => {\r\n    return firebase.functions().httpsCallable('validateCaptcha')({token, v2})\r\n    .then(cloudThenInline);\r\n}\r\n\r\n//capturePaypalPayment\r\nexport const capturePaypalPayment = (orderID, authorizationID) => {\r\n    return firebase.functions().httpsCallable('capturePaypalPayment')({orderID, authorizationID})\r\n    .then(cloudThenInline);\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getCourses} from 'apis/firebase/gapiFunctions';\r\nimport Select from 'views/Select/v2/Select';\r\nimport Loading from 'views/Loading/v1/Loading';\r\nimport SubscriptionHoC from 'views/hoc/Subscribable';\r\nimport {cloudCatch} from 'apis/firebase/cloudFunctions';\r\nimport {log} from 'utilities/Measure.js';\r\nimport {AnimatePresence, motion} from 'framer-motion'; \r\nimport {ANIM_LAYOUT_OVERLAP} from 'game/tree/Animations.js';\r\n\r\nconst SelectCourseWork = (props) => {\r\n    const [courses, setCourses] = useState(null);\r\n\r\n   useEffect(()=>{\r\n    createCourseWork();\r\n   }, [])\r\n    const createCourseWork = async () => {\r\n            props.doSubscribe('selectCourseWork', getCourses, (e) => {\r\n                if(e.courses && e.courses.map){\r\n                    let options = e.courses.map(course => {\r\n                        return {label: course.name, value: course.id}\r\n                    })\r\n                    setCourses(options);\r\n                }else{\r\n                    props.onError('No courses found for user');\r\n                }\r\n            }, cloudCatch, props.onError)\r\n    }\r\n    const handleSelect = (id, val) => {\r\n        props.onSelect(props.id, {courseId: val});\r\n    }\r\n    return <AnimatePresence>\r\n        {courses && <motion.div key=\"selectCourse\" {...ANIM_LAYOUT_OVERLAP}>\r\n                <Select id=\"selectCourse\" options={courses} className=\"block\" \r\n                placeholder=\"Select a Course\" onInput={handleSelect} />\r\n            </motion.div>}\r\n        {!courses && <motion.div key=\"loading\" {...ANIM_LAYOUT_OVERLAP}>\r\n                <Loading delay={0} text=\"Retrieving Courses\"/>\r\n            </motion.div>}\r\n    </AnimatePresence>\r\n}\r\n\r\nSelectCourseWork.propTypes = {\r\n    id: PropTypes.string,\r\n    onSelect: PropTypes.func\r\n}\r\n\r\n\r\nexport default SubscriptionHoC(SelectCourseWork)\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {log} from 'utilities/Measure.js';\r\n\r\nconst LoadScript = (props) => {\r\n    useEffect(()=>{\r\n        loadScript()\r\n    }, []);\r\n    const loadScript = () => {\r\n\r\n      var script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = props.script;\r\n      \r\n      // Once the Google API Client is loaded, you can run your code\r\n      script.onload = (e) => {\r\n       // Initialize the Google API Client with the config object\r\n          if(props.onLoad){\r\n                props.onLoad(e);\r\n          }\r\n  \r\n      }\r\n      // Add to the document\r\n      document.body.appendChild(script);\r\n\r\n    }\r\n    return null;\r\n}\r\n\r\nLoadScript.propTypes = {\r\n    onLoad: PropTypes.func,\r\n    script: PropTypes.string\r\n}\r\n\r\nexport default LoadScript;\r\n"],"sourceRoot":""}